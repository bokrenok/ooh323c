<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML>
  <HEAD>
         <TITLE>Asn1CEventHandler</TITLE>
         <LINK REL="stylesheet" HREF="http://www.obj-sys.com/stylesheet.css"
          TYPE="text/css">
  </HEAD>
  <BODY TOPMARGIN="0" LEFTMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0">
         <CENTER>
                <TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
                  <TR>
                         <TD BORDERCOLOR="#D9E4F1"><IMG BORDER="0"
                                SRC="http://www.obj-sys.com/images/Head1.jpg" WIDTH="725" HEIGHT="90"
                                ALT="Objective Systems, Inc."></TD>
                         <TD WIDTH="100%"
                          BACKGROUND="http://www.obj-sys.com/images/Head2.jpg">&nbsp;</TD>
                  </TR>
                </TABLE>
<TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
                <TR VALIGN="TOP">
                  <TD VALIGN="top" BACKGROUND="http://www.obj-sys.com/images/LeftBkd.jpg"
                        WIDTH="129">
                         <TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0"
                          BACKGROUND="http://www.obj-sys.com/images/NetscapeCorrection.gif">
                                <TR VALIGN="TOP">
                                  <TD BGCOLOR="#D9E4F1" VALIGN="top" ROWSPAN="2"><IMG BORDER="0"
                                         SRC="http://www.obj-sys.com/images/spacer.gif" WIDTH="96" HEIGHT="1">
                                         <TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0" WIDTH="100%">
                                                
                                                <TR>
                                                  <TD></TD>
                                                  <TD NOWRAP="NOWRAP" WIDTH="100%">
                                                         <A HREF="http://www.obj-sys.com/index.shtml" CLASS="nav">Home</A><BR>
                                                         <A HREF="http://www.obj-sys.com/aboutasn1.shtml" CLASS="nav">About
                                                         ASN.1</A><BR> <A HREF="http://www.obj-sys.com/products.shtml"
                                                         CLASS="nav">Products</A><BR>
                                                         <A HREF="http://www.obj-sys.com/freesoftware.shtml" CLASS="nav">Free
                                                         Software</A><BR>
                                                         <A HREF="http://www.obj-sys.com/docs/acv55docs.shtml" CLASS="nav">Documents</A>
                                                         <BR> <A HREF="http://www.obj-sys.com/services.shtml"
                                                         CLASS="nav">Services</A><BR>
                                                         <A HREF="http://www.obj-sys.com/resources.shtml" CLASS="nav">Resources</A><BR>
                                                         <A HREF="http://www.obj-sys.com/resellers.shtml" CLASS="nav">Resellers</A><BR>
<!--      <a href="http://www.obj-sys.com/ordering.shtml" class="nav">Ordering</a><br>  -->
                                                         <A HREF="http://www.obj-sys.com/customers.shtml"
                                                          CLASS="nav">Customers</A><BR>
                                                         <A HREF="http://www.obj-sys.com/careers.shtml" CLASS="nav">Careers</A><BR>
                                                         <A HREF="http://www.obj-sys.com/aboutus.shtml" CLASS="nav">About Us</A><BR>
                                                         <A HREF="http://www.obj-sys.com/contactus.shtml" CLASS="nav">Contact Us</A><BR>
                                                         </TD>
                                                </TR>
                                                <TR>
                                                  <TD NOWRAP="NOWRAP" WIDTH="100%">&nbsp;</TD>
                                                </TR>
                                                <TR>
                                                  <TD> </TD>
                                                  <TD>
                        <!--Google search -->
                                                         <FORM METHOD="GET" ACTION="http://www.google.com/custom">
                                                                
                                                                <P><A HREF="http://www.google.com/search"></A>
                                                                  <IMG SRC="http://www.obj-sys.com/images/google.gif" BORDER="0" ALT="Google"
                                                                        ALIGN="middle"><BR>
                                                                  <INPUT TYPE="text" NAME="q" SIZE="10" MAXLENGTH="255" VALUE=""><BR>
                                                                  <INPUT TYPE="submit" NAME="sa" VALUE="Search">
                                                                  <INPUT TYPE="hidden" NAME="cof"
                                                                        VALUE="AH:center;GL:0;S:http://www.obj-sys.com;AWFID:b38a0de10d0a7b9b;">
                                                                  <INPUT TYPE="hidden" NAME="domains" VALUE="obj-sys.com">
                                                                  <INPUT TYPE="hidden" NAME="sitesearch" VALUE="obj-sys.com"><BR> </P> </FORM>
                        <!--End Google search -->
                                                  </TD>
                                                  <TD><IMG BORDER="0"
                                                         SRC="http://www.obj-sys.com/images/spacer.gif" WIDTH="10" HEIGHT="1"></TD>
                                                </TR>
                                                
                                         </TABLE> </TD>
                                  <TD BACKGROUND="http://www.obj-sys.com/images/LeftTopbkd.jpg"
                                        VALIGN="top"><IMG BORDER="0" SRC="http://www.obj-sys.com/images/LeftTop.jpg"
                                         WIDTH="33" HEIGHT="114"></TD>
                                </TR>
                                <TR>
                                  <TD BACKGROUND="http://www.obj-sys.com/images/LeftTopbkd.jpg"
                                        VALIGN="bottom"><IMG BORDER="0" SRC="http://www.obj-sys.com/images/LeftC.jpg"
                                         WIDTH="33" HEIGHT="16"></TD>
                                </TR>
                                <TR>
                                  <TD WIDTH="100%" COLSPAN="2"><IMG BORDER="0"
                                         SRC="http://www.obj-sys.com/images/LeftD.jpg" WIDTH="129" HEIGHT="37"
                                         ALT="Objective Systems, Inc."><BR><IMG BORDER="0"
                                         SRC="http://www.obj-sys.com/images/LeftBottom.jpg" WIDTH="129"><BR>
                                         <IMG BORDER="0" SRC="http://www.obj-sys.com/images/LeftBottombkd.jpg"></TD>
                                </TR>
                         </TABLE> </TD>
                  <TD VALIGN="top" WIDTH="100%">
                         <TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
                                <TR>
                                  <TD WIDTH="100%"
                                        BACKGROUND="http://www.obj-sys.com/images/Top2bkd.jpg"><IMG BORDER="0"
                                         SRC="http://www.obj-sys.com/images/Top2.jpg" WIDTH="568" HEIGHT="20"></TD>
                                </TR>
                         </TABLE>
                <TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
                  <TR>
                         <TD><IMG BORDER="0" SRC="http://www.obj-sys.com/images/Top3.jpg"
                                WIDTH="58" HEIGHT="34"></TD>
                         <TD ALIGN="center" WIDTH="100%"> </TD>
                  </TR>
                  <TR>
                         <TD VALIGN="top" WIDTH="95%">
<!-- Generated by Doxygen 1.3.6-20040413 -->
<div class="qindex"><a class="qindex" href="index.shtml">Main&nbsp;Page</a> | <a class="qindex" href="modules.shtml">Modules</a> | <a class="qindex" href="classes.shtml">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.shtml">Data&nbsp;Structures</a> | <a class="qindex" href="files.shtml">File&nbsp;List</a> | <a class="qindex" href="functions.shtml">Data&nbsp;Fields</a> | <a class="qindex" href="globals.shtml">Globals</a></div>
<h1>Asn1CEventHandler<br>
<small>
[<a class="el" href="group__cruntime.shtml">C Runtime Common Functions</a>]</small>
</h1>Asn1CEventHandler is a structure type used for user-defined event handlers. 
<a href="#_details">More...</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>struct &nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a basic C based event handler structure, which can be used to define user-defined event handlers.  <a href="structAsn1NamedCEventHandler.shtml#_details">More...</a><br><br></td></tr>
<tr><td colspan=2><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga0">rtStartElement</a> )(const char *name, int index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when an element of a SEQUENCE, SET, SEQUENCE OF, SET OF, or CHOICE construct is parsed.  <a href="#ga0"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga1">rtEndElement</a> )(const char *name, int index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when parsing is complete on an element of a SEQUENCE, SET, SEQUENCE OF, SET OF, or CHOICE construct.  <a href="#ga1"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga2">rtBoolValue</a> )(ASN1BOOL value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the BOOLEAN ASN.1 type is parsed.  <a href="#ga2"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga3">rtIntValue</a> )(ASN1INT value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the INTERGER ASN.1 type is parsed.  <a href="#ga3"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga4">rtUIntValue</a> )(ASN1UINT value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the INTEGER ASN.1 type is parsed.  <a href="#ga4"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga5">rtBitStrValue</a> )(ASN1UINT numbits, const ASN1OCTET *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the BIT STRING ASN.1 type is parsed.  <a href="#ga5"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga6">rtOctStrValue</a> )(ASN1UINT numocts, const ASN1OCTET *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the OCTET STRING ASN.1 type is parsed.  <a href="#ga6"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga7">rtCharStrValue</a> )(const char *value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the 8-bit ASN.1 character string types is parsed.  <a href="#ga7"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga8">rtCharStrValue16Bit</a> )(ASN1UINT nchars, ASN116BITCHAR *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the 16-bit ASN.1 character string types is parsed.  <a href="#ga8"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga9">rtCharStrValue32Bit</a> )(ASN1UINT nchars, ASN132BITCHAR *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the 32-bit ASN.1 characer string types is parsed.  <a href="#ga9"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga10">rtNullValue</a> )()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the NULL ASN.1 type is parsed.  <a href="#ga10"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga11">rtOidValue</a> )(ASN1UINT numSubIds, ASN1UINT *pSubIds)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function whn a value the OBJECT IDENTIFIER ASN.1 type is parsed.  <a href="#ga11"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga12">rtRealValue</a> )(double value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value the REAL ASN.1 type is parsed.  <a href="#ga12"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga13">rtEnumValue</a> )(ASN1UINT value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the ENUMERATED ASN.1 type is parsed.  <a href="#ga13"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga14">rtOpenTypeValue</a> )(ASN1UINT numocts, const ASN1OCTET *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when an ASN.1 open type is parsed.  <a href="#ga14"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga15" doxytag="Asn1CEventHandler::Asn1NamedCEventHandler" ></a>
typedef <a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga15">Asn1NamedCEventHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a basic C based event handler structure, which can be used to define user-defined event handlers. <br><br></td></tr>
<tr><td colspan=2><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga16">rtAddEventHandler</a> (OOCTXT *pCtxt, <a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a> *pHandler)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is called to add a new event handler to the context event handler list.  <a href="#ga16"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga17">rtRemoveEventHandler</a> (OOCTXT *pCtxt, <a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a> *pHandler)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is called to remove an event handler from the context event handler list.  <a href="#ga17"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga18" doxytag="Asn1CEventHandler::rtInvokeStartElement" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga18">rtInvokeStartElement</a> (OOCTXT *pCtxt, const char *name, int index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The following functions are invoked from within the generated code to call the various user-defined event handler methods .. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga19" doxytag="Asn1CEventHandler::rtInvokeEndElement" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeEndElement</b> (OOCTXT *pCtxt, const char *name, int index)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga20" doxytag="Asn1CEventHandler::rtInvokeBoolValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeBoolValue</b> (OOCTXT *pCtxt, ASN1BOOL value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga21" doxytag="Asn1CEventHandler::rtInvokeIntValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeIntValue</b> (OOCTXT *pCtxt, ASN1INT value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga22" doxytag="Asn1CEventHandler::rtInvokeUIntValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeUIntValue</b> (OOCTXT *pCtxt, ASN1UINT value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga23" doxytag="Asn1CEventHandler::rtInvokeBitStrValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeBitStrValue</b> (OOCTXT *pCtxt, ASN1UINT numbits, const ASN1OCTET *data)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga24" doxytag="Asn1CEventHandler::rtInvokeOctStrValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeOctStrValue</b> (OOCTXT *pCtxt, ASN1UINT numocts, const ASN1OCTET *data)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga25" doxytag="Asn1CEventHandler::rtInvokeCharStrValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeCharStrValue</b> (OOCTXT *pCtxt, const char *value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga26" doxytag="Asn1CEventHandler::rtInvokeCharStr16BitValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeCharStr16BitValue</b> (OOCTXT *pCtxt, ASN1UINT nchars, ASN116BITCHAR *data)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga27" doxytag="Asn1CEventHandler::rtInvokeCharStr32BitValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeCharStr32BitValue</b> (OOCTXT *pCtxt, ASN1UINT nchars, ASN132BITCHAR *data)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga28" doxytag="Asn1CEventHandler::rtInvokeNullValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeNullValue</b> (OOCTXT *pCtxt)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga29" doxytag="Asn1CEventHandler::rtInvokeOidValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeOidValue</b> (OOCTXT *pCtxt, ASN1UINT numSubIds, ASN1UINT *pSubIds)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga30" doxytag="Asn1CEventHandler::rtInvokeRealValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeRealValue</b> (OOCTXT *pCtxt, double value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga31" doxytag="Asn1CEventHandler::rtInvokeEnumValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeEnumValue</b> (OOCTXT *pCtxt, ASN1UINT value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga32" doxytag="Asn1CEventHandler::rtInvokeOpenTypeValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeOpenTypeValue</b> (OOCTXT *pCtxt, ASN1UINT numocts, const ASN1OCTET *data)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Asn1CEventHandler is a structure type used for user-defined event handlers.
<p>
<hr><h2>Typedef Documentation</h2>
<a class="anchor" name="ga5" doxytag="asn1CEvtHndlr.h::rtBitStrValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga5">rtBitStrValue</a>)(ASN1UINT numbits, const ASN1OCTET* data)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of the BIT STRING ASN.1 type is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>numbits</em>&nbsp;</td><td>- Number of bits in the parsed value. </td></tr>
    <tr><td valign=top><em>data</em>&nbsp;</td><td>- Pointer to a byte array that contains the bit string data. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00126">126</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga2" doxytag="asn1CEvtHndlr.h::rtBoolValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga2">rtBoolValue</a>)(ASN1BOOL value)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of the BOOLEAN ASN.1 type is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Parsed value. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00094">94</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga7" doxytag="asn1CEvtHndlr.h::rtCharStrValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga7">rtCharStrValue</a>)(const char* value)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the 8-bit ASN.1 character string types is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Null terminated character string value. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00148">148</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga8" doxytag="asn1CEvtHndlr.h::rtCharStrValue16Bit" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga8">rtCharStrValue16Bit</a>)(ASN1UINT nchars, ASN116BITCHAR* data)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the 16-bit ASN.1 character string types is parsed.
<p>
This is used for the ASN.1 BmpString type.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>nchars</em>&nbsp;</td><td>Number of characters in the parsed value. </td></tr>
    <tr><td valign=top><em>data</em>&nbsp;</td><td>Pointer to an array containing 16-bit values. These are represented using unsigned short integer values. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00163">163</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga9" doxytag="asn1CEvtHndlr.h::rtCharStrValue32Bit" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga9">rtCharStrValue32Bit</a>)(ASN1UINT nchars, ASN132BITCHAR* data)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the 32-bit ASN.1 characer string types is parsed.
<p>
This is used for the ASN.1 UniversalString type.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>nchars</em>&nbsp;</td><td>Number of characters in the parsed value. </td></tr>
    <tr><td valign=top><em>data</em>&nbsp;</td><td>Pointer to an array containing 32-bit values. Each 32-bit integer value is a universal character. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00177">177</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga1" doxytag="asn1CEvtHndlr.h::rtEndElement" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga1">rtEndElement</a>)(const char* name, int index)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when parsing is complete on an element of a SEQUENCE, SET, SEQUENCE OF, SET OF, or CHOICE construct.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>name</em>&nbsp;</td><td>For SEQUENCE, SET, or CHOICE, this is the name of the element as defined in the ASN.1 defination. For SEQUENCE OF or SET OF, this is set to the name "element". </td></tr>
    <tr><td valign=top><em>index</em>&nbsp;</td><td>For SEQUENCE, SET, or CHOICE, this is not used and is set to the value -1. For SEQUENCE OF or SET OF, this contains the zero-based index of the element in the conceptual array associated with the construct. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00084">84</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga13" doxytag="asn1CEvtHndlr.h::rtEnumValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga13">rtEnumValue</a>)(ASN1UINT value)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of the ENUMERATED ASN.1 type is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>- Parsed enumerated value </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00216">216</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga3" doxytag="asn1CEvtHndlr.h::rtIntValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga3">rtIntValue</a>)(ASN1INT value)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of the INTERGER ASN.1 type is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Parsed value. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00103">103</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga10" doxytag="asn1CEvtHndlr.h::rtNullValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga10">rtNullValue</a>)()          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of the NULL ASN.1 type is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>-</em>&nbsp;</td><td>none </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00186">186</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga6" doxytag="asn1CEvtHndlr.h::rtOctStrValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga6">rtOctStrValue</a>)(ASN1UINT numocts, const ASN1OCTET* data)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the OCTET STRING ASN.1 type is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>numocts</em>&nbsp;</td><td>Number of octets in the parsed value. </td></tr>
    <tr><td valign=top><em>data</em>&nbsp;</td><td>Pointer to byte array containing the octet string data. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00138">138</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga11" doxytag="asn1CEvtHndlr.h::rtOidValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga11">rtOidValue</a>)(ASN1UINT numSubIds, ASN1UINT* pSubIds)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function whn a value the OBJECT IDENTIFIER ASN.1 type is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>numSubIds</em>&nbsp;</td><td>Number of subidentifiers in the object identifier. </td></tr>
    <tr><td valign=top><em>pSubIds</em>&nbsp;</td><td>Pointer to array containing the subidentifier values. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>-none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00197">197</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga14" doxytag="asn1CEvtHndlr.h::rtOpenTypeValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga14">rtOpenTypeValue</a>)(ASN1UINT numocts, const ASN1OCTET* data)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when an ASN.1 open type is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>numocts</em>&nbsp;</td><td>Number of octets in the parsed value. </td></tr>
    <tr><td valign=top><em>data</em>&nbsp;</td><td>Pointer to byet array contain in tencoded ASN.1 value. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00227">227</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga12" doxytag="asn1CEvtHndlr.h::rtRealValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga12">rtRealValue</a>)(double value)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value the REAL ASN.1 type is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Parsed value. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00206">206</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga0" doxytag="asn1CEvtHndlr.h::rtStartElement" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga0">rtStartElement</a>)(const char* name, int index)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when an element of a SEQUENCE, SET, SEQUENCE OF, SET OF, or CHOICE construct is parsed.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>name</em>&nbsp;</td><td>For SEQUENCE, SET, or CHOICE, this is the name of the element as defined in the ASN.1 defination. For SEQUENCE OF or SET OF, this is set to the name "element". </td></tr>
    <tr><td valign=top><em>index</em>&nbsp;</td><td>For SEQUENCE, SET, or CHOICE, this is not used and is set to the value -1. For SEQUENCE OF or SET OF, this contains the zero-based index of the element in the conceptual array associated with the construct. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00065">65</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<a class="anchor" name="ga4" doxytag="asn1CEvtHndlr.h::rtUIntValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> typedef void(* <a class="el" href="group__Asn1CEventHandler.shtml#ga4">rtUIntValue</a>)(ASN1UINT value)          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is a function pointer for a callback function which is invoked from within a decode function when a value of the INTEGER ASN.1 type is parsed.
<p>
In this case, constraints on the integer value forced the use of unsigned integer C type to represent the value.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Parsed value. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>- none </dd></dl>

<p>
Definition at line <a class="el" href="asn1CEvtHndlr_8h-source.shtml#l00114">114</a> of file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.    </td>
  </tr>
</table>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="ga16" doxytag="asn1CEvtHndlr.h::rtAddEventHandler" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXTERN void rtAddEventHandler           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">OOCTXT *&nbsp;</td>
          <td class="mdname" nowrap> <em>pCtxt</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>pHandler</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This function is called to add a new event handler to the context event handler list.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>pCtxt</em>&nbsp;</td><td>Context to which event handler has to be added. </td></tr>
    <tr><td valign=top><em>pHandler</em>&nbsp;</td><td>Pointer to the event handler structure. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>none </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="ga17" doxytag="asn1CEvtHndlr.h::rtRemoveEventHandler" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXTERN void rtRemoveEventHandler           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">OOCTXT *&nbsp;</td>
          <td class="mdname" nowrap> <em>pCtxt</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>pHandler</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This function is called to remove an event handler from the context event handler list.
<p>
Note that it does not delete the event handler object.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>pCtxt</em>&nbsp;</td><td>Context from which event handler has to be removed. </td></tr>
    <tr><td valign=top><em>pHandler</em>&nbsp;</td><td>Pointer to event handler structure. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>none </dd></dl>
    </td>
  </tr>
</table>
<!--END DOXYGEN -->

</td></tr></table>
<HR WIDTH="80%" COLOR="#080A9A">
         <CENTER><FONT FACE="Arial" SIZE="-2">This file was last modified on
                3 Mar 2005.<BR> H323FrameworkStack, Version 0.5.1 </FONT></CENTER></td>
</tr> </table></center></BODY>
</HTML>
