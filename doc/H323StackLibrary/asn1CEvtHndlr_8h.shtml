<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML>
  <HEAD>
         <TITLE>asn1CEvtHndlr.h File Reference</TITLE>
         <LINK REL="stylesheet" HREF="http://www.obj-sys.com/stylesheet.css"
          TYPE="text/css">
  </HEAD>
  <BODY TOPMARGIN="0" LEFTMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0">
         <CENTER>
                <TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
                  <TR>
                         <TD BORDERCOLOR="#D9E4F1"><IMG BORDER="0"
                                SRC="http://www.obj-sys.com/images/Head1.jpg" WIDTH="725" HEIGHT="90"
                                ALT="Objective Systems, Inc."></TD>
                         <TD WIDTH="100%"
                          BACKGROUND="http://www.obj-sys.com/images/Head2.jpg">&nbsp;</TD>
                  </TR>
                </TABLE>
<TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
                <TR VALIGN="TOP">
                  <TD VALIGN="top" BACKGROUND="http://www.obj-sys.com/images/LeftBkd.jpg"
                        WIDTH="129">
                         <TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0"
                          BACKGROUND="http://www.obj-sys.com/images/NetscapeCorrection.gif">
                                <TR VALIGN="TOP">
                                  <TD BGCOLOR="#D9E4F1" VALIGN="top" ROWSPAN="2"><IMG BORDER="0"
                                         SRC="http://www.obj-sys.com/images/spacer.gif" WIDTH="96" HEIGHT="1">
                                         <TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0" WIDTH="100%">
                                                
                                                <TR>
                                                  <TD></TD>
                                                  <TD NOWRAP="NOWRAP" WIDTH="100%">
                                                         <A HREF="http://www.obj-sys.com/index.shtml" CLASS="nav">Home</A><BR>
                                                         <A HREF="http://www.obj-sys.com/aboutasn1.shtml" CLASS="nav">About
                                                         ASN.1</A><BR> <A HREF="http://www.obj-sys.com/products.shtml"
                                                         CLASS="nav">Products</A><BR>
                                                         <A HREF="http://www.obj-sys.com/freesoftware.shtml" CLASS="nav">Free
                                                         Software</A><BR>
                                                         <A HREF="http://www.obj-sys.com/docs/acv55docs.shtml" CLASS="nav">Documents</A>
                                                         <BR> <A HREF="http://www.obj-sys.com/services.shtml"
                                                         CLASS="nav">Services</A><BR>
                                                         <A HREF="http://www.obj-sys.com/resources.shtml" CLASS="nav">Resources</A><BR>
                                                         <A HREF="http://www.obj-sys.com/resellers.shtml" CLASS="nav">Resellers</A><BR>
<!--      <a href="http://www.obj-sys.com/ordering.shtml" class="nav">Ordering</a><br>  -->
                                                         <A HREF="http://www.obj-sys.com/customers.shtml"
                                                          CLASS="nav">Customers</A><BR>
                                                         <A HREF="http://www.obj-sys.com/careers.shtml" CLASS="nav">Careers</A><BR>
                                                         <A HREF="http://www.obj-sys.com/aboutus.shtml" CLASS="nav">About Us</A><BR>
                                                         <A HREF="http://www.obj-sys.com/contactus.shtml" CLASS="nav">Contact Us</A><BR>
                                                         </TD>
                                                </TR>
                                                <TR>
                                                  <TD NOWRAP="NOWRAP" WIDTH="100%">&nbsp;</TD>
                                                </TR>
                                                <TR>
                                                  <TD> </TD>
                                                  <TD>
                        <!--Google search -->
                                                         <FORM METHOD="GET" ACTION="http://www.google.com/custom">
                                                                
                                                                <P><A HREF="http://www.google.com/search"></A>
                                                                  <IMG SRC="http://www.obj-sys.com/images/google.gif" BORDER="0" ALT="Google"
                                                                        ALIGN="middle"><BR>
                                                                  <INPUT TYPE="text" NAME="q" SIZE="10" MAXLENGTH="255" VALUE=""><BR>
                                                                  <INPUT TYPE="submit" NAME="sa" VALUE="Search">
                                                                  <INPUT TYPE="hidden" NAME="cof"
                                                                        VALUE="AH:center;GL:0;S:http://www.obj-sys.com;AWFID:b38a0de10d0a7b9b;">
                                                                  <INPUT TYPE="hidden" NAME="domains" VALUE="obj-sys.com">
                                                                  <INPUT TYPE="hidden" NAME="sitesearch" VALUE="obj-sys.com"><BR> </P> </FORM>
                        <!--End Google search -->
                                                  </TD>
                                                  <TD><IMG BORDER="0"
                                                         SRC="http://www.obj-sys.com/images/spacer.gif" WIDTH="10" HEIGHT="1"></TD>
                                                </TR>
                                                
                                         </TABLE> </TD>
                                  <TD BACKGROUND="http://www.obj-sys.com/images/LeftTopbkd.jpg"
                                        VALIGN="top"><IMG BORDER="0" SRC="http://www.obj-sys.com/images/LeftTop.jpg"
                                         WIDTH="33" HEIGHT="114"></TD>
                                </TR>
                                <TR>
                                  <TD BACKGROUND="http://www.obj-sys.com/images/LeftTopbkd.jpg"
                                        VALIGN="bottom"><IMG BORDER="0" SRC="http://www.obj-sys.com/images/LeftC.jpg"
                                         WIDTH="33" HEIGHT="16"></TD>
                                </TR>
                                <TR>
                                  <TD WIDTH="100%" COLSPAN="2"><IMG BORDER="0"
                                         SRC="http://www.obj-sys.com/images/LeftD.jpg" WIDTH="129" HEIGHT="37"
                                         ALT="Objective Systems, Inc."><BR><IMG BORDER="0"
                                         SRC="http://www.obj-sys.com/images/LeftBottom.jpg" WIDTH="129"><BR>
                                         <IMG BORDER="0" SRC="http://www.obj-sys.com/images/LeftBottombkd.jpg"></TD>
                                </TR>
                         </TABLE> </TD>
                  <TD VALIGN="top" WIDTH="100%">
                         <TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
                                <TR>
                                  <TD WIDTH="100%"
                                        BACKGROUND="http://www.obj-sys.com/images/Top2bkd.jpg"><IMG BORDER="0"
                                         SRC="http://www.obj-sys.com/images/Top2.jpg" WIDTH="568" HEIGHT="20"></TD>
                                </TR>
                         </TABLE>
                <TABLE BORDER="0" WIDTH="100%" CELLSPACING="0" CELLPADDING="0">
                  <TR>
                         <TD><IMG BORDER="0" SRC="http://www.obj-sys.com/images/Top3.jpg"
                                WIDTH="58" HEIGHT="34"></TD>
                         <TD ALIGN="center" WIDTH="100%"> </TD>
                  </TR>
                  <TR>
                         <TD VALIGN="top" WIDTH="95%">
<!-- Generated by Doxygen 1.3.6-20040413 -->
<div class="qindex"><a class="qindex" href="index.shtml">Main&nbsp;Page</a> | <a class="qindex" href="modules.shtml">Modules</a> | <a class="qindex" href="classes.shtml">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.shtml">Data&nbsp;Structures</a> | <a class="qindex" href="files.shtml">File&nbsp;List</a> | <a class="qindex" href="functions.shtml">Data&nbsp;Fields</a> | <a class="qindex" href="globals.shtml">Globals</a></div>
<h1>asn1CEvtHndlr.h File Reference</h1>C event handler structure. 
<a href="#_details">More...</a>
<p>
<code>#include &lt;stdio.h&gt;</code><br>
<code>#include "<a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>"</code><br>

<p>
<a href="asn1CEvtHndlr_8h-source.shtml">Go to the source code of this file.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>struct &nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a basic C based event handler structure, which can be used to define user-defined event handlers.  <a href="structAsn1NamedCEventHandler.shtml#_details">More...</a><br><br></td></tr>
<tr><td colspan=2><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga0">rtStartElement</a> )(const char *name, int index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when an element of a SEQUENCE, SET, SEQUENCE OF, SET OF, or CHOICE construct is parsed.  <a href="group__Asn1CEventHandler.shtml#ga0"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga1">rtEndElement</a> )(const char *name, int index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when parsing is complete on an element of a SEQUENCE, SET, SEQUENCE OF, SET OF, or CHOICE construct.  <a href="group__Asn1CEventHandler.shtml#ga1"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga2">rtBoolValue</a> )(ASN1BOOL value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the BOOLEAN ASN.1 type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga2"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga3">rtIntValue</a> )(ASN1INT value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the INTERGER ASN.1 type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga3"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga4">rtUIntValue</a> )(ASN1UINT value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the INTEGER ASN.1 type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga4"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga5">rtBitStrValue</a> )(ASN1UINT numbits, const ASN1OCTET *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the BIT STRING ASN.1 type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga5"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga6">rtOctStrValue</a> )(ASN1UINT numocts, const ASN1OCTET *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the OCTET STRING ASN.1 type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga6"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga7">rtCharStrValue</a> )(const char *value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the 8-bit ASN.1 character string types is parsed.  <a href="group__Asn1CEventHandler.shtml#ga7"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga8">rtCharStrValue16Bit</a> )(ASN1UINT nchars, ASN116BITCHAR *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the 16-bit ASN.1 character string types is parsed.  <a href="group__Asn1CEventHandler.shtml#ga8"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga9">rtCharStrValue32Bit</a> )(ASN1UINT nchars, ASN132BITCHAR *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of one of the 32-bit ASN.1 characer string types is parsed.  <a href="group__Asn1CEventHandler.shtml#ga9"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga10">rtNullValue</a> )()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the NULL ASN.1 type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga10"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga11">rtOidValue</a> )(ASN1UINT numSubIds, ASN1UINT *pSubIds)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function whn a value the OBJECT IDENTIFIER ASN.1 type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga11"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga12">rtRealValue</a> )(double value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value the REAL ASN.1 type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga12"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga13">rtEnumValue</a> )(ASN1UINT value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when a value of the ENUMERATED ASN.1 type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga13"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>typedef void(*&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga14">rtOpenTypeValue</a> )(ASN1UINT numocts, const ASN1OCTET *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a function pointer for a callback function which is invoked from within a decode function when an ASN.1 open type is parsed.  <a href="group__Asn1CEventHandler.shtml#ga14"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga15" doxytag="asn1CEvtHndlr.h::Asn1NamedCEventHandler" ></a>
typedef <a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga15">Asn1NamedCEventHandler</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is a basic C based event handler structure, which can be used to define user-defined event handlers. <br><br></td></tr>
<tr><td colspan=2><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga16">rtAddEventHandler</a> (OOCTXT *pCtxt, <a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a> *pHandler)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is called to add a new event handler to the context event handler list.  <a href="group__Asn1CEventHandler.shtml#ga16"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga17">rtRemoveEventHandler</a> (OOCTXT *pCtxt, <a class="el" href="structAsn1NamedCEventHandler.shtml">Asn1NamedCEventHandler</a> *pHandler)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is called to remove an event handler from the context event handler list.  <a href="group__Asn1CEventHandler.shtml#ga17"></a><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga18" doxytag="asn1CEvtHndlr.h::rtInvokeStartElement" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="group__Asn1CEventHandler.shtml#ga18">rtInvokeStartElement</a> (OOCTXT *pCtxt, const char *name, int index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The following functions are invoked from within the generated code to call the various user-defined event handler methods .. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga19" doxytag="asn1CEvtHndlr.h::rtInvokeEndElement" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeEndElement</b> (OOCTXT *pCtxt, const char *name, int index)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga20" doxytag="asn1CEvtHndlr.h::rtInvokeBoolValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeBoolValue</b> (OOCTXT *pCtxt, ASN1BOOL value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga21" doxytag="asn1CEvtHndlr.h::rtInvokeIntValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeIntValue</b> (OOCTXT *pCtxt, ASN1INT value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga22" doxytag="asn1CEvtHndlr.h::rtInvokeUIntValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeUIntValue</b> (OOCTXT *pCtxt, ASN1UINT value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga23" doxytag="asn1CEvtHndlr.h::rtInvokeBitStrValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeBitStrValue</b> (OOCTXT *pCtxt, ASN1UINT numbits, const ASN1OCTET *data)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga24" doxytag="asn1CEvtHndlr.h::rtInvokeOctStrValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeOctStrValue</b> (OOCTXT *pCtxt, ASN1UINT numocts, const ASN1OCTET *data)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga25" doxytag="asn1CEvtHndlr.h::rtInvokeCharStrValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeCharStrValue</b> (OOCTXT *pCtxt, const char *value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga26" doxytag="asn1CEvtHndlr.h::rtInvokeCharStr16BitValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeCharStr16BitValue</b> (OOCTXT *pCtxt, ASN1UINT nchars, ASN116BITCHAR *data)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga27" doxytag="asn1CEvtHndlr.h::rtInvokeCharStr32BitValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeCharStr32BitValue</b> (OOCTXT *pCtxt, ASN1UINT nchars, ASN132BITCHAR *data)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga28" doxytag="asn1CEvtHndlr.h::rtInvokeNullValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeNullValue</b> (OOCTXT *pCtxt)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga29" doxytag="asn1CEvtHndlr.h::rtInvokeOidValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeOidValue</b> (OOCTXT *pCtxt, ASN1UINT numSubIds, ASN1UINT *pSubIds)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga30" doxytag="asn1CEvtHndlr.h::rtInvokeRealValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeRealValue</b> (OOCTXT *pCtxt, double value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga31" doxytag="asn1CEvtHndlr.h::rtInvokeEnumValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeEnumValue</b> (OOCTXT *pCtxt, ASN1UINT value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="ga32" doxytag="asn1CEvtHndlr.h::rtInvokeOpenTypeValue" ></a>
EXTERN void&nbsp;</td><td class="memItemRight" valign=bottom><b>rtInvokeOpenTypeValue</b> (OOCTXT *pCtxt, ASN1UINT numocts, const ASN1OCTET *data)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
C event handler structure.
<p>
The ASN1CEventHandler is a structure type which can be used to define event handlers by the user.
<p>
Definition in file <a class="el" href="asn1CEvtHndlr_8h-source.shtml">asn1CEvtHndlr.h</a>.<!--END DOXYGEN -->

</td></tr></table>
<HR WIDTH="80%" COLOR="#080A9A">
         <CENTER><FONT FACE="Arial" SIZE="-2">This file was last modified on
                21 Jan 2005.<BR> H323FrameworkStack, Version 0.4 </FONT></CENTER></td>
</tr> </table></center></BODY>
</HTML>
