<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML>
  <HEAD>
    <TITLE>Objective Open H.323 Stack: Gatekeeper client</TITLE>
    <LINK REL="stylesheet" HREF="stylesheet.css" TYPE="text/css">
  </HEAD>
  <BODY TOPMARGIN="0" LEFTMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0">
    <CENTER>
      <DIV ID="pageDiv">
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
          <TR>
            <TD BORDERCOLOR="#D9E4F1"><IMG BORDER="0"
             SRC="./images/Head1.jpg" WIDTH="725" HEIGHT="90"
             ALT="Objective Systems, Inc."></TD>
            <TD WIDTH="100%" BACKGROUND="./images/Head2.jpg">&nbsp;</TD>
          </TR>
        </TABLE>
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="10" CELLPADDING="10">
          <TR><TD>
<!-- Generated by Doxygen 1.6.3 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="annotated.shtml"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Gatekeeper client</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structooGkClientTimerCb.shtml">ooGkClientTimerCb</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structRasGatekeeperInfo.shtml">RasGatekeeperInfo</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structRasCallAdmissionInfo.shtml">RasCallAdmissionInfo</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call Admission Information.  <a href="structRasCallAdmissionInfo.shtml#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOOGKCLIENTCALLBACKS.shtml">OOGKCLIENTCALLBACKS</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structooGkClient.shtml">ooGkClient</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Structure to store all the configuration information for the gatekeeper client.  <a href="structooGkClient.shtml#_details">More...</a><br/></td></tr>
<tr><td colspan="2"><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga726862280f428ea4532bdc90608f6662"></a><!-- doxytag: member="gkclient::ooGkClientTimerCb" ref="ga726862280f428ea4532bdc90608f6662" args="" -->
typedef struct <a class="el" href="structooGkClientTimerCb.shtml">ooGkClientTimerCb</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>ooGkClientTimerCb</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gae95c5ae689522d160553e5e9cae756d3"></a><!-- doxytag: member="gkclient::RasGatekeeperInfo" ref="gae95c5ae689522d160553e5e9cae756d3" args="" -->
typedef struct <a class="el" href="structRasGatekeeperInfo.shtml">RasGatekeeperInfo</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>RasGatekeeperInfo</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga30d5dbbaaba2dc1d10c0b91d87096099"></a><!-- doxytag: member="gkclient::RasCallAdmissionInfo" ref="ga30d5dbbaaba2dc1d10c0b91d87096099" args="" -->
typedef struct <a class="el" href="structRasCallAdmissionInfo.shtml">RasCallAdmissionInfo</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga30d5dbbaaba2dc1d10c0b91d87096099">RasCallAdmissionInfo</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call Admission Information. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef int(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gabefb97e852f39f2ffdc4d8ec1f3c616e">cb_OnReceivedRegistrationConfirm</a> )(H225RegistrationConfirm *rcf, struct <a class="el" href="structOOAliases.shtml">OOAliases</a> *aliases)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">NOTE- This functionality is not yet fully completed.  <a href="#gabefb97e852f39f2ffdc4d8ec1f3c616e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef int(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga2beb2c6b02ed6ddc97dd8c8309873863">cb_OnReceivedUnregistrationConfirm</a> )(H225UnregistrationConfirm *ucf, struct <a class="el" href="structOOAliases.shtml">OOAliases</a> *aliases)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">NOTE- This functionality is not yet fully completed.  <a href="#ga2beb2c6b02ed6ddc97dd8c8309873863"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef int(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gada5289d81f12b3c45dcc1974d7494339">cb_OnReceivedUnregistrationRequest</a> )(H225UnregistrationRequest *urq, struct <a class="el" href="structOOAliases.shtml">OOAliases</a> *aliases)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">NOTE- This functionality is not yet fully completed.  <a href="#gada5289d81f12b3c45dcc1974d7494339"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga984060a33de45d5bb5b51b17d3cc2701"></a><!-- doxytag: member="gkclient::OOGKCLIENTCALLBACKS" ref="ga984060a33de45d5bb5b51b17d3cc2701" args="" -->
typedef struct <a class="el" href="structOOGKCLIENTCALLBACKS.shtml">OOGKCLIENTCALLBACKS</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>OOGKCLIENTCALLBACKS</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structooGkClient.shtml">ooGkClient</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gac7e95b6dccae53d383091b77b179c9fa">ooGkClient</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Structure to store all the configuration information for the gatekeeper client.  <a href="#gac7e95b6dccae53d383091b77b179c9fa"></a><br/></td></tr>
<tr><td colspan="2"><h2>Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><b>RasGatekeeperMode</b> { <br/>
&nbsp;&nbsp;<b>RasNoGatekeeper</b> =  0,
<br/>
&nbsp;&nbsp;<b>RasDiscoverGatekeeper</b> =  1,
<br/>
&nbsp;&nbsp;<b>RasUseSpecificGatekeeper</b> =  2
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><b>RasCallType</b> { <br/>
&nbsp;&nbsp;<b>RasPointToPoint</b> = 0,
<br/>
&nbsp;&nbsp;<b>RasOneToN</b>,
<br/>
&nbsp;&nbsp;<b>RasnToOne</b>,
<br/>
&nbsp;&nbsp;<b>RasnToN</b>
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><b>OOGkClientState</b> { <br/>
&nbsp;&nbsp;<b>GkClientIdle</b> =  0,
<br/>
&nbsp;&nbsp;<b>GkClientDiscovered</b>,
<br/>
&nbsp;&nbsp;<b>GkClientRegistered</b>,
<br/>
&nbsp;&nbsp;<b>GkClientUnregistered</b>,
<br/>
&nbsp;&nbsp;<b>GkClientGkErr</b>,
<br/>
&nbsp;&nbsp;<b>GkClientFailed</b>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga0d5338b91dd874321d15cc358222ee38">ooGkClientInit</a> (enum RasGatekeeperMode eGkMode, char *szGkAddr, int iGkPort)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to initialize the Gatekeeper client.If an application wants to use gatekeeper services, it should call this function immediately after initializing the H323 EndPoint.  <a href="#ga0d5338b91dd874321d15cc358222ee38"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga2d483948a708079230d3f2b394f3c09d">ooGkClientPrintConfig</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to print the gatekeeper client configuration information to log.  <a href="#ga2d483948a708079230d3f2b394f3c09d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gae3db28c3e4102a8fa69075531251fbe7">ooGkClientDestroy</a> (void)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to destroy Gatekeeper client.  <a href="#gae3db28c3e4102a8fa69075531251fbe7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga213921c435488f44fd3c7b3da865e3d8">ooGkClientStart</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to start the Gatekeeper client functionality.  <a href="#ga213921c435488f44fd3c7b3da865e3d8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga5ae1668c8774820f926f0e2e91465f31">ooGkClientSetGkMode</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, enum RasGatekeeperMode eGkMode, char *szGkAddr, int iGkPort)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is invoked to set a gatekeeper mode.  <a href="#ga5ae1668c8774820f926f0e2e91465f31"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga7e8374f69619974b750a19534d51429e">ooGkClientSetGkId</a> (const char *id)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is invoked to set the gatekeeper ID.  <a href="#ga7e8374f69619974b750a19534d51429e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga6d89b27bac8e84d91af08462d48adc1a">ooGkClientSetBandwidth</a> (int value)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is invoked to set the bandwidth.  <a href="#ga6d89b27bac8e84d91af08462d48adc1a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gaec5045421b1b7c272649238638aebd2e">ooGkClientCreateChannel</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to create a RAS channel for the gatekeeper.  <a href="#gaec5045421b1b7c272649238638aebd2e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga8f66715e303d1c9725d9191d2e1a795a">ooGkClientCloseChannel</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to close a RAS channel of the gatekeeper client.  <a href="#ga8f66715e303d1c9725d9191d2e1a795a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga31fe6c625ee1d633af4d0b86dc646f32">ooGkClientRasFillVendor</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225VendorIdentifier *psVendor)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to fill endpoint's vendor information into vendor identifier.  <a href="#ga31fe6c625ee1d633af4d0b86dc646f32"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga12e2e6b000af2b3886138bd8e1bd1886">ooGkClientReceive</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is invoked to receive data on Gatekeeper client's RAS channel.  <a href="#ga12e2e6b000af2b3886138bd8e1bd1886"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga385fe7cae185ba64583cefb54a9bdd96">ooGkClientHandleRASMessage</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225RasMessage *pRasMsg)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle a received RAS message by a gatekeeper client.  <a href="#ga385fe7cae185ba64583cefb54a9bdd96"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga6746eb089763bc35161a51e0a14136b5">ooGkClientSendMsg</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225RasMessage *pRasMsg)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to send a message on Gatekeeper clien't RAS channel.  <a href="#ga6746eb089763bc35161a51e0a14136b5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga9fa9d2d388203067149c9214fc0a0555">ooGkClientSendGRQ</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to send Gatekeeper request message.  <a href="#ga9fa9d2d388203067149c9214fc0a0555"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gaa26e686dffb8bfeda8e789f1534e3a70">ooGkClientHandleGatekeeperReject</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225GatekeeperReject *pGatekeeperReject)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle a received gatekeeper reject message.  <a href="#gaa26e686dffb8bfeda8e789f1534e3a70"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga822a3235e6c68742a9525cb176904202">ooGkClientHandleGatekeeperConfirm</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225GatekeeperConfirm *pGatekeeperConfirm)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle a received gatekeeper confirm message.  <a href="#ga822a3235e6c68742a9525cb176904202"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga5e2a5b2154aef8ef26717557d30f8728">ooGkClientSendRRQ</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, ASN1BOOL keepAlive)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to send Registration request message.  <a href="#ga5e2a5b2154aef8ef26717557d30f8728"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga3041d2fe36c733d5737050f985c0d438">ooGkClientHandleRegistrationConfirm</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225RegistrationConfirm *pRegistrationConfirm)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle a received registration confirm message.  <a href="#ga3041d2fe36c733d5737050f985c0d438"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gaf2ca42b56dab8f358cf850ef8577aef2">ooGkClientHandleRegistrationReject</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225RegistrationReject *pRegistrationReject)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle a received registration reject message.  <a href="#gaf2ca42b56dab8f358cf850ef8577aef2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gad98f2d81dfe82cbbe5caedaf3ea9d77e">ooGkClientSendURQ</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, struct <a class="el" href="structOOAliases.shtml">OOAliases</a> *aliases)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to send UnRegistration request message.  <a href="#gad98f2d81dfe82cbbe5caedaf3ea9d77e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gac883f4025eff6c77f52683074358ca6c">ooGkClientHandleUnregistrationRequest</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225UnregistrationRequest *punregistrationRequest)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle a received Unregistration request message.  <a href="#gac883f4025eff6c77f52683074358ca6c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga003d8aa78d73c8cc0442eb47d59a51a5">ooGkClientSendUnregistrationConfirm</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, unsigned reqNo)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to send an unregistration confirm messsage to gatekeeper.  <a href="#ga003d8aa78d73c8cc0442eb47d59a51a5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga4f731933f8dc19f68c2d683d6cbcf327">ooGkClientSendAdmissionRequest</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, struct <a class="el" href="structOOH323CallData.shtml">OOH323CallData</a> *call, ASN1BOOL retransmit)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is invoked to request bandwith admission for a call.  <a href="#ga4f731933f8dc19f68c2d683d6cbcf327"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga9a8505ef069eb9184d508204deccab42">ooGkClientHandleAdmissionConfirm</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225AdmissionConfirm *pAdmissionConfirm)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle a received Admission confirm message.  <a href="#ga9a8505ef069eb9184d508204deccab42"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gae751063b19e92d5c23abcae8bd017035">ooGkClientHandleAdmissionReject</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225AdmissionReject *pAdmissionReject)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle a received Admission Reject message.  <a href="#gae751063b19e92d5c23abcae8bd017035"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gaeead2b05bb04fa509798dfece719c133">ooGkClientSendDisengageRequest</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, struct <a class="el" href="structOOH323CallData.shtml">OOH323CallData</a> *call)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is invoked to request call disengage to gatekeeper.  <a href="#gaeead2b05bb04fa509798dfece719c133"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gaba3bd7534578bb10445393f0b5366610">ooGkClientHandleDisengageConfirm</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225DisengageConfirm *pDCF)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle a received disengage confirm message.  <a href="#gaba3bd7534578bb10445393f0b5366610"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga981da4d3912b2b8f17307e12c015c3ae">ooGkClientRRQTimerExpired</a> (void *pdata)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle an expired registration request timer.  <a href="#ga981da4d3912b2b8f17307e12c015c3ae"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gaf99eb99f6c049b2309f252c292a3c780">ooGkClientGRQTimerExpired</a> (void *pdata)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle an expired gatekeeper request timer.  <a href="#gaf99eb99f6c049b2309f252c292a3c780"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gae0f2570e3869ec8a768a7dd4925227cd">ooGkClientREGTimerExpired</a> (void *pdata)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle an expired registration time-to-live timer.  <a href="#gae0f2570e3869ec8a768a7dd4925227cd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gac7770bf405a8cb04955bb96f8f83d56d">ooGkClientARQTimerExpired</a> (void *pdata)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle an expired admission request timer.  <a href="#gac7770bf405a8cb04955bb96f8f83d56d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gafff5fb7d980b68671d1918a9b345df33">ooGkClientCleanCall</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, struct <a class="el" href="structOOH323CallData.shtml">OOH323CallData</a> *call)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to clean call related data from gatekeeper client.  <a href="#gafff5fb7d980b68671d1918a9b345df33"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gaea8866285833c4d75ae0886a81cdcbc3">ooGkClientHandleClientOrGkFailure</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to handle gatekeeper client failure or gatekeeper failure which can be detected by unresponsiveness of gk.  <a href="#gaea8866285833c4d75ae0886a81cdcbc3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#ga6dd194964a16fa11dacba159f79d314f">ooGkClientUpdateRegisteredAliases</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, H225_SeqOfH225AliasAddress *pAddresses, OOBOOL registered)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to update the registration status of aliases.  <a href="#ga6dd194964a16fa11dacba159f79d314f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__gkclient.shtml#gaa588c5c057a13b0cb6e7658c36d489be">ooGkClientSetCallbacks</a> (<a class="el" href="structooGkClient.shtml">ooGkClient</a> *pGkClient, <a class="el" href="structOOGKCLIENTCALLBACKS.shtml">OOGKCLIENTCALLBACKS</a> callbacks)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used internally to set Gatekeeper Clients callbacks.  <a href="#gaa588c5c057a13b0cb6e7658c36d489be"></a><br/></td></tr>
</table>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="gabefb97e852f39f2ffdc4d8ec1f3c616e"></a><!-- doxytag: member="ooGkClient.h::cb_OnReceivedRegistrationConfirm" ref="gabefb97e852f39f2ffdc4d8ec1f3c616e" args=")(H225RegistrationConfirm *rcf, struct OOAliases *aliases)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(* <a class="el" href="group__gkclient.shtml#gabefb97e852f39f2ffdc4d8ec1f3c616e">cb_OnReceivedRegistrationConfirm</a>)(H225RegistrationConfirm *rcf, struct <a class="el" href="structOOAliases.shtml">OOAliases</a> *aliases)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>NOTE- This functionality is not yet fully completed. </p>
<p>This is a callback function which is triggered when registration confirm message is received from the gatekeeper. The first parameter is the message received. The second parameter provides updated list of aliases after the message was processed by the stack. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>rcf</em>&nbsp;</td><td>Handle to the received registration confirm message </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="ooGkClient_8h_source.shtml#l00145">145</a> of file <a class="el" href="ooGkClient_8h_source.shtml">ooGkClient.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga2beb2c6b02ed6ddc97dd8c8309873863"></a><!-- doxytag: member="ooGkClient.h::cb_OnReceivedUnregistrationConfirm" ref="ga2beb2c6b02ed6ddc97dd8c8309873863" args=")(H225UnregistrationConfirm *ucf, struct OOAliases *aliases)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(* <a class="el" href="group__gkclient.shtml#ga2beb2c6b02ed6ddc97dd8c8309873863">cb_OnReceivedUnregistrationConfirm</a>)(H225UnregistrationConfirm *ucf, struct <a class="el" href="structOOAliases.shtml">OOAliases</a> *aliases)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>NOTE- This functionality is not yet fully completed. </p>
<p>This is a callback function which is triggered when unregistration confirm message is received. The first parameter is the message received. The second parameter provides updated list of aliases after the message was processed by the stack. </p>

<p>Definition at line <a class="el" href="ooGkClient_8h_source.shtml#l00156">156</a> of file <a class="el" href="ooGkClient_8h_source.shtml">ooGkClient.h</a>.</p>

</div>
</div>
<a class="anchor" id="gada5289d81f12b3c45dcc1974d7494339"></a><!-- doxytag: member="ooGkClient.h::cb_OnReceivedUnregistrationRequest" ref="gada5289d81f12b3c45dcc1974d7494339" args=")(H225UnregistrationRequest *urq, struct OOAliases *aliases)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(* <a class="el" href="group__gkclient.shtml#gada5289d81f12b3c45dcc1974d7494339">cb_OnReceivedUnregistrationRequest</a>)(H225UnregistrationRequest *urq, struct <a class="el" href="structOOAliases.shtml">OOAliases</a> *aliases)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>NOTE- This functionality is not yet fully completed. </p>
<p>This is a callback function which is triggered when unregistration request message is received. The first parameter is the message received. The second parameter provides the list of aliases requested to be unregistered. </p>

<p>Definition at line <a class="el" href="ooGkClient_8h_source.shtml#l00165">165</a> of file <a class="el" href="ooGkClient_8h_source.shtml">ooGkClient.h</a>.</p>

</div>
</div>
<a class="anchor" id="gac7e95b6dccae53d383091b77b179c9fa"></a><!-- doxytag: member="ooGkClient.h::ooGkClient" ref="gac7e95b6dccae53d383091b77b179c9fa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structooGkClient.shtml">ooGkClient</a>  <a class="el" href="structooGkClient.shtml">ooGkClient</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Structure to store all the configuration information for the gatekeeper client. </p>
<p>Gatekeeper client is responsible for all the communication with a gatekeeper. </p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga0d5338b91dd874321d15cc358222ee38"></a><!-- doxytag: member="ooGkClient.h::ooGkClientInit" ref="ga0d5338b91dd874321d15cc358222ee38" args="(enum RasGatekeeperMode eGkMode, char *szGkAddr, int iGkPort)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientInit </td>
          <td>(</td>
          <td class="paramtype">enum RasGatekeeperMode&nbsp;</td>
          <td class="paramname"> <em>eGkMode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>szGkAddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iGkPort</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to initialize the Gatekeeper client.If an application wants to use gatekeeper services, it should call this function immediately after initializing the H323 EndPoint. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>eGkMode</em>&nbsp;</td><td>Gatekeeper mode. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>szGkAddr</em>&nbsp;</td><td>Dotted gk ip address, if gk has to be specified. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>iGkPort</em>&nbsp;</td><td>Gk port.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2d483948a708079230d3f2b394f3c09d"></a><!-- doxytag: member="ooGkClient.h::ooGkClientPrintConfig" ref="ga2d483948a708079230d3f2b394f3c09d" args="(ooGkClient *pGkClient)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN void ooGkClientPrintConfig </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to print the gatekeeper client configuration information to log. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gae3db28c3e4102a8fa69075531251fbe7"></a><!-- doxytag: member="ooGkClient.h::ooGkClientDestroy" ref="gae3db28c3e4102a8fa69075531251fbe7" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientDestroy </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to destroy Gatekeeper client. </p>
<p>It releases all the associated memory.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="ga213921c435488f44fd3c7b3da865e3d8"></a><!-- doxytag: member="ooGkClient.h::ooGkClientStart" ref="ga213921c435488f44fd3c7b3da865e3d8" args="(ooGkClient *pGkClient)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientStart </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to start the Gatekeeper client functionality. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Pointer to the Gatekeeper Client.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5ae1668c8774820f926f0e2e91465f31"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSetGkMode" ref="ga5ae1668c8774820f926f0e2e91465f31" args="(ooGkClient *pGkClient, enum RasGatekeeperMode eGkMode, char *szGkAddr, int iGkPort)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSetGkMode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum RasGatekeeperMode&nbsp;</td>
          <td class="paramname"> <em>eGkMode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>szGkAddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iGkPort</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is invoked to set a gatekeeper mode. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>eGkMode</em>&nbsp;</td><td>Gatekeeper mode selected. One of the following:</p>
<ul>
<li>RasNoGatekeeper (DEFAULT), No Gatekeeper.</li>
<li>RasDiscoverGatekeeper, to discover a gatekeeper automatically.</li>
<li>RasUseSpecificGatekeeper, to use a specific gatekeeper. </li>
</ul>
</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>szGkAddr</em>&nbsp;</td><td>Gatekeeper address (only when using specific gatekeeper). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>iGkPort</em>&nbsp;</td><td>Gatekeeper RAS port</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status - OO_OK on success, OO_FAILED on failure </dd></dl>

</div>
</div>
<a class="anchor" id="ga7e8374f69619974b750a19534d51429e"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSetGkId" ref="ga7e8374f69619974b750a19534d51429e" args="(const char *id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSetGkId </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>id</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is invoked to set the gatekeeper ID. </p>
<p>This will be included in the initial gatekeeper registration request message. This ID only has meaning if gatekeeper mode is RasUseSpecificGatekeeper. The ID is set in the gatekeeper client structure contained in the global endpoint. This structure must be initialized via ooGkClientInit before calling this function.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>id</em>&nbsp;</td><td>Gatekeeper ID string. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status - OO_OK on success, OO_FAILED on failure </dd></dl>

</div>
</div>
<a class="anchor" id="ga6d89b27bac8e84d91af08462d48adc1a"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSetBandwidth" ref="ga6d89b27bac8e84d91af08462d48adc1a" args="(int value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSetBandwidth </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is invoked to set the bandwidth. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Bandwidth value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status - OO_OK on success, OO_FAILED on failure </dd></dl>

</div>
</div>
<a class="anchor" id="gaec5045421b1b7c272649238638aebd2e"></a><!-- doxytag: member="ooGkClient.h::ooGkClientCreateChannel" ref="gaec5045421b1b7c272649238638aebd2e" args="(ooGkClient *pGkClient)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientCreateChannel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to create a RAS channel for the gatekeeper. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Pointer to the Gatekeeper client for which RAS channel has to be created.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="ga8f66715e303d1c9725d9191d2e1a795a"></a><!-- doxytag: member="ooGkClient.h::ooGkClientCloseChannel" ref="ga8f66715e303d1c9725d9191d2e1a795a" args="(ooGkClient *pGkClient)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientCloseChannel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to close a RAS channel of the gatekeeper client. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Pointer to the gatekeeper client.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="ga31fe6c625ee1d633af4d0b86dc646f32"></a><!-- doxytag: member="ooGkClient.h::ooGkClientRasFillVendor" ref="ga31fe6c625ee1d633af4d0b86dc646f32" args="(ooGkClient *pGkClient, H225VendorIdentifier *psVendor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN void ooGkClientRasFillVendor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225VendorIdentifier *&nbsp;</td>
          <td class="paramname"> <em>psVendor</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to fill endpoint's vendor information into vendor identifier. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Pointer to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>psVendor</em>&nbsp;</td><td>Pointer to vendor identifier to be filled. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga12e2e6b000af2b3886138bd8e1bd1886"></a><!-- doxytag: member="ooGkClient.h::ooGkClientReceive" ref="ga12e2e6b000af2b3886138bd8e1bd1886" args="(ooGkClient *pGkClient)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is invoked to receive data on Gatekeeper client's RAS channel. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to Gatekeeper client for which message has to be received.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status - OO_OK on success, OO_FAILED on failure </dd></dl>

</div>
</div>
<a class="anchor" id="ga385fe7cae185ba64583cefb54a9bdd96"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleRASMessage" ref="ga385fe7cae185ba64583cefb54a9bdd96" args="(ooGkClient *pGkClient, H225RasMessage *pRasMsg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleRASMessage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225RasMessage *&nbsp;</td>
          <td class="paramname"> <em>pRasMsg</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle a received RAS message by a gatekeeper client. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pRasMsg</em>&nbsp;</td><td>Handle to received Ras message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6746eb089763bc35161a51e0a14136b5"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSendMsg" ref="ga6746eb089763bc35161a51e0a14136b5" args="(ooGkClient *pGkClient, H225RasMessage *pRasMsg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSendMsg </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225RasMessage *&nbsp;</td>
          <td class="paramname"> <em>pRasMsg</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to send a message on Gatekeeper clien't RAS channel. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to the gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pRasMsg</em>&nbsp;</td><td>Handle to Ras message to be sent.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9fa9d2d388203067149c9214fc0a0555"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSendGRQ" ref="ga9fa9d2d388203067149c9214fc0a0555" args="(ooGkClient *pGkClient)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSendGRQ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to send Gatekeeper request message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client for which GRQ message has to be sent.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa26e686dffb8bfeda8e789f1534e3a70"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleGatekeeperReject" ref="gaa26e686dffb8bfeda8e789f1534e3a70" args="(ooGkClient *pGkClient, H225GatekeeperReject *pGatekeeperReject)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleGatekeeperReject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225GatekeeperReject *&nbsp;</td>
          <td class="paramname"> <em>pGatekeeperReject</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle a received gatekeeper reject message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pGatekeeperReject</em>&nbsp;</td><td>Handle to received reject message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga822a3235e6c68742a9525cb176904202"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleGatekeeperConfirm" ref="ga822a3235e6c68742a9525cb176904202" args="(ooGkClient *pGkClient, H225GatekeeperConfirm *pGatekeeperConfirm)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleGatekeeperConfirm </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225GatekeeperConfirm *&nbsp;</td>
          <td class="paramname"> <em>pGatekeeperConfirm</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle a received gatekeeper confirm message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pGatekeeperConfirm</em>&nbsp;</td><td>Handle to received confirmed message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5e2a5b2154aef8ef26717557d30f8728"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSendRRQ" ref="ga5e2a5b2154aef8ef26717557d30f8728" args="(ooGkClient *pGkClient, ASN1BOOL keepAlive)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSendRRQ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1BOOL&nbsp;</td>
          <td class="paramname"> <em>keepAlive</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to send Registration request message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client for which RRQ message has to be sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>keepAlive</em>&nbsp;</td><td>Indicates whether keepalive lightweight registration has to be sent.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3041d2fe36c733d5737050f985c0d438"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleRegistrationConfirm" ref="ga3041d2fe36c733d5737050f985c0d438" args="(ooGkClient *pGkClient, H225RegistrationConfirm *pRegistrationConfirm)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleRegistrationConfirm </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225RegistrationConfirm *&nbsp;</td>
          <td class="paramname"> <em>pRegistrationConfirm</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle a received registration confirm message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pRegistrationConfirm</em>&nbsp;</td><td>Handle to received confirmed message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf2ca42b56dab8f358cf850ef8577aef2"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleRegistrationReject" ref="gaf2ca42b56dab8f358cf850ef8577aef2" args="(ooGkClient *pGkClient, H225RegistrationReject *pRegistrationReject)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleRegistrationReject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225RegistrationReject *&nbsp;</td>
          <td class="paramname"> <em>pRegistrationReject</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle a received registration reject message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pRegistrationReject</em>&nbsp;</td><td>Handle to received reject message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="gad98f2d81dfe82cbbe5caedaf3ea9d77e"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSendURQ" ref="gad98f2d81dfe82cbbe5caedaf3ea9d77e" args="(ooGkClient *pGkClient, struct OOAliases *aliases)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSendURQ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structOOAliases.shtml">OOAliases</a> *&nbsp;</td>
          <td class="paramname"> <em>aliases</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to send UnRegistration request message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client for which URQ message has to be sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>aliases</em>&nbsp;</td><td>List of aliases to be unregistered. NULL, if all the aliases have to be unregistered.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="gac883f4025eff6c77f52683074358ca6c"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleUnregistrationRequest" ref="gac883f4025eff6c77f52683074358ca6c" args="(ooGkClient *pGkClient, H225UnregistrationRequest *punregistrationRequest)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleUnregistrationRequest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225UnregistrationRequest *&nbsp;</td>
          <td class="paramname"> <em>punregistrationRequest</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle a received Unregistration request message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>punregistrationRequest</em>&nbsp;</td><td>Handle to received unregistration request.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga003d8aa78d73c8cc0442eb47d59a51a5"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSendUnregistrationConfirm" ref="ga003d8aa78d73c8cc0442eb47d59a51a5" args="(ooGkClient *pGkClient, unsigned reqNo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSendUnregistrationConfirm </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>reqNo</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to send an unregistration confirm messsage to gatekeeper. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>reqNo</em>&nbsp;</td><td>Request Sequence number for the confirm message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4f731933f8dc19f68c2d683d6cbcf327"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSendAdmissionRequest" ref="ga4f731933f8dc19f68c2d683d6cbcf327" args="(ooGkClient *pGkClient, struct OOH323CallData *call, ASN1BOOL retransmit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSendAdmissionRequest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structOOH323CallData.shtml">OOH323CallData</a> *&nbsp;</td>
          <td class="paramname"> <em>call</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1BOOL&nbsp;</td>
          <td class="paramname"> <em>retransmit</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is invoked to request bandwith admission for a call. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Gatekeeper client to be used </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>call</em>&nbsp;</td><td>Handle to the call. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>retransmit</em>&nbsp;</td><td>Indicates whether new call or retransmitting for existing call.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9a8505ef069eb9184d508204deccab42"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleAdmissionConfirm" ref="ga9a8505ef069eb9184d508204deccab42" args="(ooGkClient *pGkClient, H225AdmissionConfirm *pAdmissionConfirm)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleAdmissionConfirm </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225AdmissionConfirm *&nbsp;</td>
          <td class="paramname"> <em>pAdmissionConfirm</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle a received Admission confirm message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pAdmissionConfirm</em>&nbsp;</td><td>Handle to received confirmed message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="gae751063b19e92d5c23abcae8bd017035"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleAdmissionReject" ref="gae751063b19e92d5c23abcae8bd017035" args="(ooGkClient *pGkClient, H225AdmissionReject *pAdmissionReject)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleAdmissionReject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225AdmissionReject *&nbsp;</td>
          <td class="paramname"> <em>pAdmissionReject</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle a received Admission Reject message. </p>
<p>It finds the associated call and marks it for cleaning with appropriate call end reason code. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to Gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pAdmissionReject</em>&nbsp;</td><td>Handle to received admission reject message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="gaeead2b05bb04fa509798dfece719c133"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSendDisengageRequest" ref="gaeead2b05bb04fa509798dfece719c133" args="(ooGkClient *pGkClient, struct OOH323CallData *call)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientSendDisengageRequest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structOOH323CallData.shtml">OOH323CallData</a> *&nbsp;</td>
          <td class="paramname"> <em>call</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is invoked to request call disengage to gatekeeper. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Gatekeeper client to be used. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>call</em>&nbsp;</td><td>Call Handle</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status - OO_OK on success, OO_FAILED on failure </dd></dl>

</div>
</div>
<a class="anchor" id="gaba3bd7534578bb10445393f0b5366610"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleDisengageConfirm" ref="gaba3bd7534578bb10445393f0b5366610" args="(ooGkClient *pGkClient, H225DisengageConfirm *pDCF)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleDisengageConfirm </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225DisengageConfirm *&nbsp;</td>
          <td class="paramname"> <em>pDCF</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle a received disengage confirm message. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pDCF</em>&nbsp;</td><td>Handle to received confirmed message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga981da4d3912b2b8f17307e12c015c3ae"></a><!-- doxytag: member="ooGkClient.h::ooGkClientRRQTimerExpired" ref="ga981da4d3912b2b8f17307e12c015c3ae" args="(void *pdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientRRQTimerExpired </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>pdata</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle an expired registration request timer. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pdata</em>&nbsp;</td><td>Handle to callback data</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf99eb99f6c049b2309f252c292a3c780"></a><!-- doxytag: member="ooGkClient.h::ooGkClientGRQTimerExpired" ref="gaf99eb99f6c049b2309f252c292a3c780" args="(void *pdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientGRQTimerExpired </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>pdata</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle an expired gatekeeper request timer. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pdata</em>&nbsp;</td><td>Handle to callback data</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="gae0f2570e3869ec8a768a7dd4925227cd"></a><!-- doxytag: member="ooGkClient.h::ooGkClientREGTimerExpired" ref="gae0f2570e3869ec8a768a7dd4925227cd" args="(void *pdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientREGTimerExpired </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>pdata</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle an expired registration time-to-live timer. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pdata</em>&nbsp;</td><td>Handle to callback data</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="gac7770bf405a8cb04955bb96f8f83d56d"></a><!-- doxytag: member="ooGkClient.h::ooGkClientARQTimerExpired" ref="gac7770bf405a8cb04955bb96f8f83d56d" args="(void *pdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientARQTimerExpired </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>pdata</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle an expired admission request timer. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pdata</em>&nbsp;</td><td>Handle to callback data</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="gafff5fb7d980b68671d1918a9b345df33"></a><!-- doxytag: member="ooGkClient.h::ooGkClientCleanCall" ref="gafff5fb7d980b68671d1918a9b345df33" args="(ooGkClient *pGkClient, struct OOH323CallData *call)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientCleanCall </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structOOH323CallData.shtml">OOH323CallData</a> *&nbsp;</td>
          <td class="paramname"> <em>call</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to clean call related data from gatekeeper client. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to the gatekeeper client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>call</em>&nbsp;</td><td>Handle to the call to be cleaned.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="gaea8866285833c4d75ae0886a81cdcbc3"></a><!-- doxytag: member="ooGkClient.h::ooGkClientHandleClientOrGkFailure" ref="gaea8866285833c4d75ae0886a81cdcbc3" args="(ooGkClient *pGkClient)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientHandleClientOrGkFailure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to handle gatekeeper client failure or gatekeeper failure which can be detected by unresponsiveness of gk. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to gatekeeper client.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6dd194964a16fa11dacba159f79d314f"></a><!-- doxytag: member="ooGkClient.h::ooGkClientUpdateRegisteredAliases" ref="ga6dd194964a16fa11dacba159f79d314f" args="(ooGkClient *pGkClient, H225_SeqOfH225AliasAddress *pAddresses, OOBOOL registered)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGkClientUpdateRegisteredAliases </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H225_SeqOfH225AliasAddress *&nbsp;</td>
          <td class="paramname"> <em>pAddresses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">OOBOOL&nbsp;</td>
          <td class="paramname"> <em>registered</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to update the registration status of aliases. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to the GK client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pAddresses</em>&nbsp;</td><td>List of newly registered addresses. NULL means all aliases have been successfully registered. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>registered</em>&nbsp;</td><td>Indicates whether aliases are registered or unregistered.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa588c5c057a13b0cb6e7658c36d489be"></a><!-- doxytag: member="ooGkClient.h::ooGkClientSetCallbacks" ref="gaa588c5c057a13b0cb6e7658c36d489be" args="(ooGkClient *pGkClient, OOGKCLIENTCALLBACKS callbacks)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ooGkClientSetCallbacks </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structooGkClient.shtml">ooGkClient</a> *&nbsp;</td>
          <td class="paramname"> <em>pGkClient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structOOGKCLIENTCALLBACKS.shtml">OOGKCLIENTCALLBACKS</a>&nbsp;</td>
          <td class="paramname"> <em>callbacks</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used internally to set Gatekeeper Clients callbacks. </p>
<p>Note: This functionality is not yet fully supported </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pGkClient</em>&nbsp;</td><td>Handle to the GK client. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>callbacks</em>&nbsp;</td><td>Callback structure contatining various gatekeeper client callbacks. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>OO_OK, on success. OO_FAILED, on failure. </dd></dl>

</div>
</div>
</div>
<!--END DOXYGEN -->

</td></tr></table>
<HR WIDTH="80%" COLOR="#080A9A">
  <CENTER><FONT FACE="Arial" SIZE="-2">This file was last modified on
    10 Dec 2010.<BR> Objective Open H.323 Stack, 0.9.1 </FONT></CENTER></td>
</tr> </table></center></BODY>
</HTML>
