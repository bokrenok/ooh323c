<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML>
  <HEAD>
    <TITLE>Objective Open H.323 Stack: ooTimer.h File Reference</TITLE>
    <LINK REL="stylesheet" HREF="stylesheet.css" TYPE="text/css">
  </HEAD>
  <BODY TOPMARGIN="0" LEFTMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0">
    <CENTER>
      <DIV ID="pageDiv">
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
          <TR>
            <TD BORDERCOLOR="#D9E4F1"><IMG BORDER="0"
             SRC="./images/Head1.jpg" WIDTH="725" HEIGHT="90"
             ALT="Objective Systems, Inc."></TD>
            <TD WIDTH="100%" BACKGROUND="./images/Head2.jpg">&nbsp;</TD>
          </TR>
        </TABLE>
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="10" CELLPADDING="10">
          <TR><TD>
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.shtml"><span>Modules</span></a></li>
    <li><a href="classes.shtml"><span>Data&nbsp;Structures</span></a></li>
    <li id="current"><a href="files.shtml"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.shtml"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.shtml"><span>Globals</span></a></li>
  </ul></div>
<h1>ooTimer.h File Reference</h1>Timer structures and functions. <a href="#_details">More...</a>
<p>
<code>#include &quot;<a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>&quot;</code><br>
<code>#include &quot;<a class="el" href="ooSocket_8h-source.shtml">ooSocket.h</a>&quot;</code><br>

<p>
<a href="ooTimer_8h-source.shtml">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct__OOTimer.shtml">_OOTimer</a></td></tr>

<tr><td colspan="2"><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="42695a0ba0325ecda7231c8c03ac9662"></a><!-- doxytag: member="ooTimer.h::OOTimerCbFunc" ref="42695a0ba0325ecda7231c8c03ac9662" args="(void *data)" -->
typedef int(*)&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#42695a0ba0325ecda7231c8c03ac9662">OOTimerCbFunc</a> (void *data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e52c6e292b57b88dc59416917766cd01"></a><!-- doxytag: member="ooTimer.h::OOTimer" ref="e52c6e292b57b88dc59416917766cd01" args="" -->
typedef <a class="el" href="struct__OOTimer.shtml">_OOTimer</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>OOTimer</b></td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#56c4016fa3d58a42297a3b8ad9576fe0">ooTimerComputeExpireTime</a> (<a class="el" href="struct__OOTimer.shtml">OOTimer</a> *pTimer)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function computes the relative expiration time from the current time for the given timer object.  <a href="#56c4016fa3d58a42297a3b8ad9576fe0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN <a class="el" href="struct__OOTimer.shtml">OOTimer</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#0aa795a169cd7fa33907f50c3432cb55">ooTimerCreate</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, DList *pList, <a class="el" href="ooTimer_8h.shtml#42695a0ba0325ecda7231c8c03ac9662">OOTimerCbFunc</a> cb, <a class="el" href="group__cruntime.shtml#g929d152869a7fc3a63ebf2495c0fa7b7">OOUINT32</a> deltaSecs, void *data, <a class="el" href="group__cruntime.shtml#gd31556a43467443733eebb2e2b802c30">OOBOOL</a> reRegister)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function creates and initializes a new timer object.  <a href="#0aa795a169cd7fa33907f50c3432cb55"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#fd47e07b2ea1cba96a87548c54215c87">ooTimerDelete</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, DList *pList, <a class="el" href="struct__OOTimer.shtml">OOTimer</a> *pTimer)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function deletes the given timer object.  <a href="#fd47e07b2ea1cba96a87548c54215c87"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN <a class="el" href="group__cruntime.shtml#gd31556a43467443733eebb2e2b802c30">OOBOOL</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#1e69e808886b23328a54849ff6683102">ooTimerExpired</a> (<a class="el" href="struct__OOTimer.shtml">OOTimer</a> *pTimer)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function checks a timer to determine if it is expired.  <a href="#1e69e808886b23328a54849ff6683102"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="57c59c60ed009be763a1367f5cf61b60"></a><!-- doxytag: member="ooTimer.h::ooTimerFireExpired" ref="57c59c60ed009be763a1367f5cf61b60" args="(OOCTXT *pctxt, DList *pList)" -->
EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#57c59c60ed009be763a1367f5cf61b60">ooTimerFireExpired</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, DList *pList)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function loops through the global timer list and fires all expired timers by calling the registered callback functions. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#c86cde3d7fc3ee56279a72d146d89058">ooTimerInsertEntry</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, DList *pList, <a class="el" href="struct__OOTimer.shtml">OOTimer</a> *pTimer)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function inserts the given timer object into the correct chronological position in the global timer list.  <a href="#c86cde3d7fc3ee56279a72d146d89058"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN struct timeval *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#881b7a53aee755fa38fab9a2e32a4038">ooTimerNextTimeout</a> (DList *pList, struct timeval *ptimeout)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function calculates the relative time from the current time that the first timer in global timer list will expire.  <a href="#881b7a53aee755fa38fab9a2e32a4038"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#02e5e34d7fe508a1907f046899c741b3">ooTimerReset</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, DList *pList, <a class="el" href="struct__OOTimer.shtml">OOTimer</a> *pTimer)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function resets the given timer object if its reregister flag is set.  <a href="#02e5e34d7fe508a1907f046899c741b3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="ooTimer_8h.shtml#91b0e3ebda6619f81f05ebaf3001795e">ooCompareTimeouts</a> (struct timeval *to1, struct timeval *to2)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to compare two timeout values.  <a href="#91b0e3ebda6619f81f05ebaf3001795e"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Timer structures and functions.
<p>

<p>
Definition in file <a class="el" href="ooTimer_8h-source.shtml">ooTimer.h</a>.<hr><h2>Function Documentation</h2>
<a class="anchor" name="56c4016fa3d58a42297a3b8ad9576fe0"></a><!-- doxytag: member="ooTimer.h::ooTimerComputeExpireTime" ref="56c4016fa3d58a42297a3b8ad9576fe0" args="(OOTimer *pTimer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN void ooTimerComputeExpireTime           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__OOTimer.shtml">OOTimer</a> *&nbsp;</td>
          <td class="paramname"> <em>pTimer</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function computes the relative expiration time from the current time for the given timer object.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pTimer</em>&nbsp;</td><td>Pointer to timer object. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="0aa795a169cd7fa33907f50c3432cb55"></a><!-- doxytag: member="ooTimer.h::ooTimerCreate" ref="0aa795a169cd7fa33907f50c3432cb55" args="(OOCTXT *pctxt, DList *pList, OOTimerCbFunc cb, OOUINT32 deltaSecs, void *data, OOBOOL reRegister)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN <a class="el" href="struct__OOTimer.shtml">OOTimer</a>* ooTimerCreate           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DList *&nbsp;</td>
          <td class="paramname"> <em>pList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="ooTimer_8h.shtml#42695a0ba0325ecda7231c8c03ac9662">OOTimerCbFunc</a>&nbsp;</td>
          <td class="paramname"> <em>cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g929d152869a7fc3a63ebf2495c0fa7b7">OOUINT32</a>&nbsp;</td>
          <td class="paramname"> <em>deltaSecs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gd31556a43467443733eebb2e2b802c30">OOBOOL</a>&nbsp;</td>
          <td class="paramname"> <em>reRegister</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function creates and initializes a new timer object.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td><a class="el" href="structOOCTXT.shtml">OOCTXT</a> structure used for timer memory allocation. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pList</em>&nbsp;</td><td>Pointer to timer list in which newly created timer will be inserted. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>cb</em>&nbsp;</td><td>Timer callback function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>deltaSecs</em>&nbsp;</td><td>Time in seconds to timer expiration. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>Callback user data argument. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>reRegister</em>&nbsp;</td><td>Should timer be re-registered after it expires? </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Pointer to created timer object. </dd></dl>

</div>
</div><p>
<a class="anchor" name="fd47e07b2ea1cba96a87548c54215c87"></a><!-- doxytag: member="ooTimer.h::ooTimerDelete" ref="fd47e07b2ea1cba96a87548c54215c87" args="(OOCTXT *pctxt, DList *pList, OOTimer *pTimer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN void ooTimerDelete           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DList *&nbsp;</td>
          <td class="paramname"> <em>pList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct__OOTimer.shtml">OOTimer</a> *&nbsp;</td>
          <td class="paramname"> <em>pTimer</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function deletes the given timer object.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Handle to <a class="el" href="structOOCTXT.shtml">OOCTXT</a> structure used for timer memory. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pList</em>&nbsp;</td><td>timer list to operate on </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pTimer</em>&nbsp;</td><td>Pointer to timer object. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="1e69e808886b23328a54849ff6683102"></a><!-- doxytag: member="ooTimer.h::ooTimerExpired" ref="1e69e808886b23328a54849ff6683102" args="(OOTimer *pTimer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN <a class="el" href="group__cruntime.shtml#gd31556a43467443733eebb2e2b802c30">OOBOOL</a> ooTimerExpired           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__OOTimer.shtml">OOTimer</a> *&nbsp;</td>
          <td class="paramname"> <em>pTimer</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function checks a timer to determine if it is expired.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pTimer</em>&nbsp;</td><td>Pointer to timer object. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if timer expired, false if not. </dd></dl>

</div>
</div><p>
<a class="anchor" name="c86cde3d7fc3ee56279a72d146d89058"></a><!-- doxytag: member="ooTimer.h::ooTimerInsertEntry" ref="c86cde3d7fc3ee56279a72d146d89058" args="(OOCTXT *pctxt, DList *pList, OOTimer *pTimer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooTimerInsertEntry           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DList *&nbsp;</td>
          <td class="paramname"> <em>pList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct__OOTimer.shtml">OOTimer</a> *&nbsp;</td>
          <td class="paramname"> <em>pTimer</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function inserts the given timer object into the correct chronological position in the global timer list.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to <a class="el" href="structOOCTXT.shtml">OOCTXT</a> structure used for memory allocation. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pList</em>&nbsp;</td><td>List in which timer has to be inserted. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pTimer</em>&nbsp;</td><td>Pointer to timer object. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Index to position where inserted in list. </dd></dl>

</div>
</div><p>
<a class="anchor" name="881b7a53aee755fa38fab9a2e32a4038"></a><!-- doxytag: member="ooTimer.h::ooTimerNextTimeout" ref="881b7a53aee755fa38fab9a2e32a4038" args="(DList *pList, struct timeval *ptimeout)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN struct timeval* ooTimerNextTimeout           </td>
          <td>(</td>
          <td class="paramtype">DList *&nbsp;</td>
          <td class="paramname"> <em>pList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct timeval *&nbsp;</td>
          <td class="paramname"> <em>ptimeout</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function calculates the relative time from the current time that the first timer in global timer list will expire.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pList</em>&nbsp;</td><td>Handle to timer list </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ptimeout</em>&nbsp;</td><td>timeval structure to receive timeout value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>ptimeout </dd></dl>

</div>
</div><p>
<a class="anchor" name="02e5e34d7fe508a1907f046899c741b3"></a><!-- doxytag: member="ooTimer.h::ooTimerReset" ref="02e5e34d7fe508a1907f046899c741b3" args="(OOCTXT *pctxt, DList *pList, OOTimer *pTimer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN void ooTimerReset           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DList *&nbsp;</td>
          <td class="paramname"> <em>pList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct__OOTimer.shtml">OOTimer</a> *&nbsp;</td>
          <td class="paramname"> <em>pTimer</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function resets the given timer object if its reregister flag is set.
<p>
Otherwise, it is deleted. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to <a class="el" href="structOOCTXT.shtml">OOCTXT</a> structre used for memory allocation. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pList</em>&nbsp;</td><td>Pointer to timer list. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pTimer</em>&nbsp;</td><td>Pointer to timer object. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="91b0e3ebda6619f81f05ebaf3001795e"></a><!-- doxytag: member="ooTimer.h::ooCompareTimeouts" ref="91b0e3ebda6619f81f05ebaf3001795e" args="(struct timeval *to1, struct timeval *to2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ooCompareTimeouts           </td>
          <td>(</td>
          <td class="paramtype">struct timeval *&nbsp;</td>
          <td class="paramname"> <em>to1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct timeval *&nbsp;</td>
          <td class="paramname"> <em>to2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function is used to compare two timeout values.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>to1</em>&nbsp;</td><td>First timeout value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>to2</em>&nbsp;</td><td>Second timeout value.</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1, if to1 &gt; to2; 0, if to1 == to2; -1, if to1 &lt; to2 </dd></dl>

</div>
</div><p>
<!--END DOXYGEN -->

</td></tr></table>
<HR WIDTH="80%" COLOR="#080A9A">
  <CENTER><FONT FACE="Arial" SIZE="-2">This file was last modified on
    28 Jul 2010.<BR> Objective Open H.323 Stack, 0.9.1 </FONT></CENTER></td>
</tr> </table></center></BODY>
</HTML>
