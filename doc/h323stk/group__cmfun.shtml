<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML>
  <HEAD>
    <TITLE>Objective Open H.323 Stack: Context Management Functions</TITLE>
    <LINK REL="stylesheet" HREF="stylesheet.css" TYPE="text/css">
  </HEAD>
  <BODY TOPMARGIN="0" LEFTMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0">
    <CENTER>
      <DIV ID="pageDiv">
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
          <TR>
            <TD BORDERCOLOR="#D9E4F1"><IMG BORDER="0"
             SRC="./images/Head1.jpg" WIDTH="725" HEIGHT="90"
             ALT="Objective Systems, Inc."></TD>
            <TD WIDTH="100%" BACKGROUND="./images/Head2.jpg">&nbsp;</TD>
          </TR>
        </TABLE>
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="10" CELLPADDING="10">
          <TR><TD>
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.shtml"><span>Modules</span></a></li>
    <li><a href="classes.shtml"><span>Data&nbsp;Structures</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
  </ul></div>
<h1>Context Management Functions<br>
<small>
[<a class="el" href="group__cruntime.shtml">C Runtime Common Functions</a>]</small>
</h1>Context initialization functions handle the allocation, initialization, and destruction of ASN.1 context variables (variables of type <a class="el" href="structOOCTXT.shtml">OOCTXT</a>). 
<a href="#_details">More...</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g3bdeb8a742e716e990ba4aa021239e2f"></a><!-- doxytag: member="cmfun::ZEROCONTEXT" ref="g3bdeb8a742e716e990ba4aa021239e2f" args="(pctxt)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cmfun.shtml#g3bdeb8a742e716e990ba4aa021239e2f">ZEROCONTEXT</a>(pctxt)&nbsp;&nbsp;&nbsp;memset(pctxt,0,sizeof(<a class="el" href="structOOCTXT.shtml">OOCTXT</a>))</td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cmfun.shtml#ge3623ea4a7ab9e291b3a96ed534998da">initContextBuffer</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *bufaddr, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> bufsiz)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function assigns a buffer to a context block.  <a href="#ge3623ea4a7ab9e291b3a96ed534998da"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cmfun.shtml#ge26e6fe4d8958532ae1cda5ef9bbb9f2">initContext</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function initializes a context block.  <a href="#ge26e6fe4d8958532ae1cda5ef9bbb9f2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cmfun.shtml#g5dfc65f56f288619b1a4cd911de643de">freeContext</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function frees all dynamic memory associated with a context.  <a href="#g5dfc65f56f288619b1a4cd911de643de"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN <a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cmfun.shtml#ge61527aaa1233f220728544389f817d6">newContext</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function allocates a new <a class="el" href="structOOCTXT.shtml">OOCTXT</a> block and initializes it.  <a href="#ge61527aaa1233f220728544389f817d6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g4911bae51091e985a6783f53b1d79575"></a><!-- doxytag: member="cmfun::copyContext" ref="g4911bae51091e985a6783f53b1d79575" args="(OOCTXT *pdest, OOCTXT *psrc)" -->
EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><b>copyContext</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pdest, <a class="el" href="structOOCTXT.shtml">OOCTXT</a> *psrc)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gdf5d33f92da46e4801dd1cc232fd1c47"></a><!-- doxytag: member="cmfun::initSubContext" ref="gdf5d33f92da46e4801dd1cc232fd1c47" args="(OOCTXT *pctxt, OOCTXT *psrc)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>initSubContext</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structOOCTXT.shtml">OOCTXT</a> *psrc)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g8729a1409b5c646ba7a8312c2b11f3c9"></a><!-- doxytag: member="cmfun::setCtxtFlag" ref="g8729a1409b5c646ba7a8312c2b11f3c9" args="(OOCTXT *pctxt, ASN1USINT mask)" -->
EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><b>setCtxtFlag</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g750fa6ea4197d481d6ce00cf805c1506">ASN1USINT</a> mask)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gc99b4373d7648d056b10a375a73092f0"></a><!-- doxytag: member="cmfun::clearCtxtFlag" ref="gc99b4373d7648d056b10a375a73092f0" args="(OOCTXT *pctxt, ASN1USINT mask)" -->
EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><b>clearCtxtFlag</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g750fa6ea4197d481d6ce00cf805c1506">ASN1USINT</a> mask)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb52352b70663b91e620f2d41a31bf7ea"></a><!-- doxytag: member="cmfun::setPERBuffer" ref="gb52352b70663b91e620f2d41a31bf7ea" args="(OOCTXT *pctxt, ASN1OCTET *bufaddr, ASN1UINT bufsiz, ASN1BOOL aligned)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>setPERBuffer</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *bufaddr, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> bufsiz, <a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a> aligned)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g5d646d286a4974863aaafe63fa8a4564"></a><!-- doxytag: member="cmfun::setPERBufferUsingCtxt" ref="g5d646d286a4974863aaafe63fa8a4564" args="(OOCTXT *pTarget, OOCTXT *pSource)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>setPERBufferUsingCtxt</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pTarget, <a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pSource)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Context initialization functions handle the allocation, initialization, and destruction of ASN.1 context variables (variables of type <a class="el" href="structOOCTXT.shtml">OOCTXT</a>).
<p>
These variables hold all of the working data used during the process of encoding or decoding a message. The context provides thread safe operation by isolating what would otherwise be global variables within this structure. The context variable is passed from function to function as a message is encoded or decoded and maintains state information on the encoding or decoding process. <hr><h2>Function Documentation</h2>
<a class="anchor" name="ge3623ea4a7ab9e291b3a96ed534998da"></a><!-- doxytag: member="ooasn1.h::initContextBuffer" ref="ge3623ea4a7ab9e291b3a96ed534998da" args="(OOCTXT *pctxt, const ASN1OCTET *bufaddr, ASN1UINT bufsiz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int initContextBuffer           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *&nbsp;</td>
          <td class="paramname"> <em>bufaddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>bufsiz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function assigns a buffer to a context block.
<p>
The block should have been previously initialized by initContext.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>The pointer to the context structure variable to be initialized. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bufaddr</em>&nbsp;</td><td>For encoding, the address of a memory buffer to receive and encode a message. For decoding the address of a buffer that contains the message data to be decoded. This address will be stored within the context structure. For encoding it might be zero, the dynamic buffer will be used in this case. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bufsiz</em>&nbsp;</td><td>The size of the memory buffer. For encoding, it might be zero; the dynamic buffer will be used in this case. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="ge26e6fe4d8958532ae1cda5ef9bbb9f2"></a><!-- doxytag: member="ooasn1.h::initContext" ref="ge26e6fe4d8958532ae1cda5ef9bbb9f2" args="(OOCTXT *pctxt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int initContext           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function initializes a context block.
<p>
It makes sure that if the block was not previosly initialized, that all key working parameters are set to thier correct initial state values (i.e. declared within a function as a normal working variable), it is required that they invoke this function before using it.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>The pointer to the context structure variable to be initialized. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g5dfc65f56f288619b1a4cd911de643de"></a><!-- doxytag: member="ooasn1.h::freeContext" ref="g5dfc65f56f288619b1a4cd911de643de" args="(OOCTXT *pctxt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN void freeContext           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function frees all dynamic memory associated with a context.
<p>
This includes all memory inside the block (in particular, the list of memory blocks used by the mem functions).<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="ge61527aaa1233f220728544389f817d6"></a><!-- doxytag: member="ooasn1.h::newContext" ref="ge61527aaa1233f220728544389f817d6" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN <a class="el" href="structOOCTXT.shtml">OOCTXT</a>* newContext           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function allocates a new <a class="el" href="structOOCTXT.shtml">OOCTXT</a> block and initializes it.
<p>
Although the block is allocated from the standard heap, it should not be freed using free. The freeContext function should be used because this frees items allocated within the block before freeing the block itself.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Pointer to newly created context </dd></dl>

</div>
</div><p>
<!--END DOXYGEN -->

</td></tr></table>
<HR WIDTH="80%" COLOR="#080A9A">
  <CENTER><FONT FACE="Arial" SIZE="-2">This file was last modified on
    28 Jul 2010.<BR> Objective Open H.323 Stack, 0.9.1 </FONT></CENTER></td>
</tr> </table></center></BODY>
</HTML>
