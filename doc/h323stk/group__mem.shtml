<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML>
  <HEAD>
    <TITLE>Objective Open H.323 Stack: Memory Allocation Macros and Functions</TITLE>
    <LINK REL="stylesheet" HREF="stylesheet.css" TYPE="text/css">
  </HEAD>
  <BODY TOPMARGIN="0" LEFTMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0">
    <CENTER>
      <DIV ID="pageDiv">
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
          <TR>
            <TD BORDERCOLOR="#D9E4F1"><IMG BORDER="0"
             SRC="./images/Head1.jpg" WIDTH="725" HEIGHT="90"
             ALT="Objective Systems, Inc."></TD>
            <TD WIDTH="100%" BACKGROUND="./images/Head2.jpg">&nbsp;</TD>
          </TR>
        </TABLE>
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="10" CELLPADDING="10">
          <TR><TD>
<!-- Generated by Doxygen 1.6.3 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="annotated.shtml"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Memory Allocation Macros and Functions<br/>
<small>
[<a class="el" href="group__cruntime.shtml">C Runtime Common Functions</a>]</small>
</h1>
<p>Memory allocation functions and macros handle memory management for the ASN1C run-time. 
<a href="#_details">More...</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mem.shtml#ga906a06d8eb0e5b00f7fcd02f0c622457">ALLOC_ASN1ARRAY</a>(pctxt, pseqof, type)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Allocate a dynamic array.  <a href="#ga906a06d8eb0e5b00f7fcd02f0c622457"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mem.shtml#ga34cd428201a27b098b0d233578605610">ALLOC_ASN1ELEM</a>(pctxt, type)&nbsp;&nbsp;&nbsp;(type*) memHeapAllocZ (&amp;(pctxt)-&gt;pTypeMemHeap, sizeof(type))</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Allocate and zero an ASN.1 element.  <a href="#ga34cd428201a27b098b0d233578605610"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mem.shtml#ga0cd47b770b5ff5071c1d190268043578">ASN1MALLOC</a>(pctxt, nbytes)&nbsp;&nbsp;&nbsp;memHeapAlloc(&amp;(pctxt)-&gt;pTypeMemHeap, nbytes)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Allocate memory.  <a href="#ga0cd47b770b5ff5071c1d190268043578"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mem.shtml#ga0b0941fe8715dd66a66f02218e14f4cc">ASN1MEMFREE</a>(pctxt)&nbsp;&nbsp;&nbsp;memHeapFreeAll(&amp;(pctxt)-&gt;pTypeMemHeap)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Free memory associated with a context.  <a href="#ga0b0941fe8715dd66a66f02218e14f4cc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mem.shtml#gafc81e107fe3fefdf39a18ccd9dec0e45">ASN1MEMFREEPTR</a>(pctxt, pmem)&nbsp;&nbsp;&nbsp;memHeapFreePtr(&amp;(pctxt)-&gt;pTypeMemHeap, (void*)pmem)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Free memory pointer.  <a href="#gafc81e107fe3fefdf39a18ccd9dec0e45"></a><br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Memory allocation functions and macros handle memory management for the ASN1C run-time. </p>
<p>Special algorithms are used for allocation and deallocation of memory to improve the run-time performance. </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga906a06d8eb0e5b00f7fcd02f0c622457"></a><!-- doxytag: member="ooasn1.h::ALLOC_ASN1ARRAY" ref="ga906a06d8eb0e5b00f7fcd02f0c622457" args="(pctxt, pseqof, type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ALLOC_ASN1ARRAY</td>
          <td>(</td>
          <td class="paramtype">pctxt, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pseqof, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">type&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span> {\
<span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(type)*(pseqof)-&gt;n &lt; (pseqof)-&gt;n) <span class="keywordflow">return</span> ASN_E_NOMEM; \
<span class="keywordflow">if</span> (((pseqof)-&gt;elem = (type*) memHeapAlloc \
(&amp;(pctxt)-&gt;pTypeMemHeap, <span class="keyword">sizeof</span>(type)*(pseqof)-&gt;n)) == 0) <span class="keywordflow">return</span> ASN_E_NOMEM; \
} <span class="keywordflow">while</span> (0)
</pre></div>
<p>Allocate a dynamic array. </p>
<p>This macro allocates a dynamic array of records of the given type. This version of the macro will return the ASN_E_NOMEM error status if the memory request cannot be fulfilled.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>- Pointer to a context block </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pseqof</em>&nbsp;</td><td>- Pointer to a generated SEQUENCE OF array structure. The <em>n</em> member variable must be set to the number of records to allocate. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>- Data type of an array record </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="ooasn1_8h_source.shtml#l00445">445</a> of file <a class="el" href="ooasn1_8h_source.shtml">ooasn1.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga34cd428201a27b098b0d233578605610"></a><!-- doxytag: member="ooasn1.h::ALLOC_ASN1ELEM" ref="ga34cd428201a27b098b0d233578605610" args="(pctxt, type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ALLOC_ASN1ELEM</td>
          <td>(</td>
          <td class="paramtype">pctxt, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">type&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;(type*) memHeapAllocZ (&amp;(pctxt)-&gt;pTypeMemHeap, sizeof(type))</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Allocate and zero an ASN.1 element. </p>
<p>This macro allocates and zeros a single element of the given type.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>- Pointer to a context block </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>- Data type of record to allocate </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="ooasn1_8h_source.shtml#l00458">458</a> of file <a class="el" href="ooasn1_8h_source.shtml">ooasn1.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga0cd47b770b5ff5071c1d190268043578"></a><!-- doxytag: member="ooasn1.h::ASN1MALLOC" ref="ga0cd47b770b5ff5071c1d190268043578" args="(pctxt, nbytes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASN1MALLOC</td>
          <td>(</td>
          <td class="paramtype">pctxt, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">nbytes&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;memHeapAlloc(&amp;(pctxt)-&gt;pTypeMemHeap, nbytes)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Allocate memory. </p>
<p>This macro allocates the given number of bytes. It is similar to the C <code>malloc</code> run-time function.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>- Pointer to a context block </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nbytes</em>&nbsp;</td><td>- Number of bytes of memory to allocate </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>- Void pointer to allocated memory or NULL if insufficient memory was available to fulfill the request. </dd></dl>

<p>Definition at line <a class="el" href="ooasn1_8h_source.shtml#l00471">471</a> of file <a class="el" href="ooasn1_8h_source.shtml">ooasn1.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga0b0941fe8715dd66a66f02218e14f4cc"></a><!-- doxytag: member="ooasn1.h::ASN1MEMFREE" ref="ga0b0941fe8715dd66a66f02218e14f4cc" args="(pctxt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASN1MEMFREE</td>
          <td>(</td>
          <td class="paramtype">pctxt&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;memHeapFreeAll(&amp;(pctxt)-&gt;pTypeMemHeap)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Free memory associated with a context. </p>
<p>This macro frees all memory held within a context. This is all memory allocated using the ASN1MALLOC (and similar macros) and the mem memory allocation functions using the given context variable.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>- Pointer to a context block </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="ooasn1_8h_source.shtml#l00482">482</a> of file <a class="el" href="ooasn1_8h_source.shtml">ooasn1.h</a>.</p>

</div>
</div>
<a class="anchor" id="gafc81e107fe3fefdf39a18ccd9dec0e45"></a><!-- doxytag: member="ooasn1.h::ASN1MEMFREEPTR" ref="gafc81e107fe3fefdf39a18ccd9dec0e45" args="(pctxt, pmem)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASN1MEMFREEPTR</td>
          <td>(</td>
          <td class="paramtype">pctxt, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pmem&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;memHeapFreePtr(&amp;(pctxt)-&gt;pTypeMemHeap, (void*)pmem)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Free memory pointer. </p>
<p>This macro frees memory at the given pointer. The memory must have been allocated using the ASN1MALLOC (or similar) macros or the mem memory allocation functions. This macro is similar to the C <code>free</code> function.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>- Pointer to a context block </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pmem</em>&nbsp;</td><td>- Pointer to memory block to free. This must have been allocated using the ASN1MALLOC macro or the memHeapAlloc function. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="ooasn1_8h_source.shtml#l00496">496</a> of file <a class="el" href="ooasn1_8h_source.shtml">ooasn1.h</a>.</p>

</div>
</div>
</div>
<!--END DOXYGEN -->

</td></tr></table>
<HR WIDTH="80%" COLOR="#080A9A">
  <CENTER><FONT FACE="Arial" SIZE="-2">This file was last modified on
    10 Dec 2010.<BR> Objective Open H.323 Stack, 0.9.1 </FONT></CENTER></td>
</tr> </table></center></BODY>
</HTML>
