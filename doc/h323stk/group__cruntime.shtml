<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML>
  <HEAD>
    <TITLE>Objective Open H.323 Stack: C Runtime Common Functions</TITLE>
    <LINK REL="stylesheet" HREF="stylesheet.css" TYPE="text/css">
  </HEAD>
  <BODY TOPMARGIN="0" LEFTMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0">
    <CENTER>
      <DIV ID="pageDiv">
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
          <TR>
            <TD BORDERCOLOR="#D9E4F1"><IMG BORDER="0"
             SRC="./images/Head1.jpg" WIDTH="725" HEIGHT="90"
             ALT="Objective Systems, Inc."></TD>
            <TD WIDTH="100%" BACKGROUND="./images/Head2.jpg">&nbsp;</TD>
          </TR>
        </TABLE>
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="10" CELLPADDING="10">
          <TR><TD>
<!-- Generated by Doxygen 1.5.1 -->
<div class="tabs">
  <ul>
    <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.shtml"><span>Modules</span></a></li>
    <li><a href="classes.shtml"><span>Data&nbsp;Structures</span></a></li>
    <li><a href="files.shtml"><span>Files</span></a></li>
  </ul></div>
<h1>C Runtime Common Functions</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Modules</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mem.shtml">Memory Allocation Macros and Functions</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Memory allocation functions and macros handle memory management for the ASN1C run-time. <br></td></tr>

<p>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cmfun.shtml">Context Management Functions</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Context initialization functions handle the allocation, initialization, and destruction of ASN.1 context variables (variables of type <a class="el" href="structOOCTXT.shtml">OOCTXT</a>). <br></td></tr>

<p>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__errfp.shtml">Error Formatting and Print Functions</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Error formatting and print functions allow information about the encode/decode errors to be added to a context block structure and then printed out when the error is propagated to the top level. <br></td></tr>

<p>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__rtmem.shtml">Rtmem</a></td></tr>

<tr><td colspan="2"><br><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1OBJID.shtml">ASN1OBJID</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1OctStr.shtml">ASN1OctStr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1DynOctStr.shtml">ASN1DynOctStr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1DynBitStr.shtml">ASN1DynBitStr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1BitStr32.shtml">ASN1BitStr32</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1SeqOf.shtml">ASN1SeqOf</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1SeqOfOctStr.shtml">ASN1SeqOfOctStr</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1OpenType.shtml">ASN1OpenType</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAsn116BitCharString.shtml">Asn116BitCharString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAsn132BitCharString.shtml">Asn132BitCharString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAsn1CharArray.shtml">Asn1CharArray</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAsn1CharSet.shtml">Asn1CharSet</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAsn116BitCharSet.shtml">Asn116BitCharSet</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct__Asn1SizeCnst.shtml">_Asn1SizeCnst</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1BUFFER.shtml">ASN1BUFFER</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1BUFSAVE.shtml">ASN1BUFSAVE</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1ErrLocn.shtml">ASN1ErrLocn</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structASN1ErrInfo.shtml">ASN1ErrInfo</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOOCTXT.shtml">OOCTXT</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct__OOMsgBuf.shtml">_OOMsgBuf</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOOEnumItem.shtml">OOEnumItem</a></td></tr>

<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g8f4bd7613f84c734a1e31386949e7190"></a><!-- doxytag: member="cruntime::ASN_OK" ref="g8f4bd7613f84c734a1e31386949e7190" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g8f4bd7613f84c734a1e31386949e7190">ASN_OK</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf5ea57a2197f926a402c01e6e08e3809"></a><!-- doxytag: member="cruntime::ASN_OK_FRAG" ref="gf5ea57a2197f926a402c01e6e08e3809" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf5ea57a2197f926a402c01e6e08e3809">ASN_OK_FRAG</a>&nbsp;&nbsp;&nbsp;2</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gcdd670ba30b4ba294a851fa4a21b54dd"></a><!-- doxytag: member="cruntime::ASN_E_BUFOVFLW" ref="gcdd670ba30b4ba294a851fa4a21b54dd" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gcdd670ba30b4ba294a851fa4a21b54dd">ASN_E_BUFOVFLW</a>&nbsp;&nbsp;&nbsp;-1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g604d679e937ad0c66410929572b6c87a"></a><!-- doxytag: member="cruntime::ASN_E_ENDOFBUF" ref="g604d679e937ad0c66410929572b6c87a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g604d679e937ad0c66410929572b6c87a">ASN_E_ENDOFBUF</a>&nbsp;&nbsp;&nbsp;-2</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g74d505a0ad04260f831b3fb38d595f10"></a><!-- doxytag: member="cruntime::ASN_E_IDNOTFOU" ref="g74d505a0ad04260f831b3fb38d595f10" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g74d505a0ad04260f831b3fb38d595f10">ASN_E_IDNOTFOU</a>&nbsp;&nbsp;&nbsp;-3</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb461673e42479de788a8274c62700ef6"></a><!-- doxytag: member="cruntime::ASN_E_INVOBJID" ref="gb461673e42479de788a8274c62700ef6" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb461673e42479de788a8274c62700ef6">ASN_E_INVOBJID</a>&nbsp;&nbsp;&nbsp;-4</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g955acd1be8c23191facfcd7650be253e"></a><!-- doxytag: member="cruntime::ASN_E_INVLEN" ref="g955acd1be8c23191facfcd7650be253e" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g955acd1be8c23191facfcd7650be253e">ASN_E_INVLEN</a>&nbsp;&nbsp;&nbsp;-5</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gffef2c59d5bd210fd130b560082c78e1"></a><!-- doxytag: member="cruntime::ASN_E_INVENUM" ref="gffef2c59d5bd210fd130b560082c78e1" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gffef2c59d5bd210fd130b560082c78e1">ASN_E_INVENUM</a>&nbsp;&nbsp;&nbsp;-6</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g630a8c3229c570a63c74e25c9c73865e"></a><!-- doxytag: member="cruntime::ASN_E_SETDUPL" ref="g630a8c3229c570a63c74e25c9c73865e" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g630a8c3229c570a63c74e25c9c73865e">ASN_E_SETDUPL</a>&nbsp;&nbsp;&nbsp;-7</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g2576a847877e2805f3af7fca3a6ed4fc"></a><!-- doxytag: member="cruntime::ASN_E_SETMISRQ" ref="g2576a847877e2805f3af7fca3a6ed4fc" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g2576a847877e2805f3af7fca3a6ed4fc">ASN_E_SETMISRQ</a>&nbsp;&nbsp;&nbsp;-8</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g915a847fd0d8eaa7c0ededae559822ae"></a><!-- doxytag: member="cruntime::ASN_E_NOTINSET" ref="g915a847fd0d8eaa7c0ededae559822ae" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g915a847fd0d8eaa7c0ededae559822ae">ASN_E_NOTINSET</a>&nbsp;&nbsp;&nbsp;-9</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g58d77cd8f1b79e9230810f86e0e130ed"></a><!-- doxytag: member="cruntime::ASN_E_SEQOVFLW" ref="g58d77cd8f1b79e9230810f86e0e130ed" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g58d77cd8f1b79e9230810f86e0e130ed">ASN_E_SEQOVFLW</a>&nbsp;&nbsp;&nbsp;-10</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gcc4c98b6aa66d3d661f4db04e31ec4f6"></a><!-- doxytag: member="cruntime::ASN_E_INVOPT" ref="gcc4c98b6aa66d3d661f4db04e31ec4f6" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gcc4c98b6aa66d3d661f4db04e31ec4f6">ASN_E_INVOPT</a>&nbsp;&nbsp;&nbsp;-11</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ga710be6a102aa95be6d76b38e9fec4cf"></a><!-- doxytag: member="cruntime::ASN_E_NOMEM" ref="ga710be6a102aa95be6d76b38e9fec4cf" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ga710be6a102aa95be6d76b38e9fec4cf">ASN_E_NOMEM</a>&nbsp;&nbsp;&nbsp;-12</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gce7ebc2b86a521de2d44fe5940c5cec9"></a><!-- doxytag: member="cruntime::ASN_E_INVHEXS" ref="gce7ebc2b86a521de2d44fe5940c5cec9" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gce7ebc2b86a521de2d44fe5940c5cec9">ASN_E_INVHEXS</a>&nbsp;&nbsp;&nbsp;-14</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g23dfa1958d7e16200eabdd69bceb8d14"></a><!-- doxytag: member="cruntime::ASN_E_INVBINS" ref="g23dfa1958d7e16200eabdd69bceb8d14" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g23dfa1958d7e16200eabdd69bceb8d14">ASN_E_INVBINS</a>&nbsp;&nbsp;&nbsp;-15</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g81f7edb9bb36844a6d37c4875b6f06ac"></a><!-- doxytag: member="cruntime::ASN_E_INVREAL" ref="g81f7edb9bb36844a6d37c4875b6f06ac" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g81f7edb9bb36844a6d37c4875b6f06ac">ASN_E_INVREAL</a>&nbsp;&nbsp;&nbsp;-16</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g18b7f9609c836e498ff1fc8528d74485"></a><!-- doxytag: member="cruntime::ASN_E_STROVFLW" ref="g18b7f9609c836e498ff1fc8528d74485" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g18b7f9609c836e498ff1fc8528d74485">ASN_E_STROVFLW</a>&nbsp;&nbsp;&nbsp;-17</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g14e978c250e374c7ab0880b10ef8772d"></a><!-- doxytag: member="cruntime::ASN_E_BADVALUE" ref="g14e978c250e374c7ab0880b10ef8772d" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g14e978c250e374c7ab0880b10ef8772d">ASN_E_BADVALUE</a>&nbsp;&nbsp;&nbsp;-18</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7c3afdfe2b5a9d9d4588011786b42839"></a><!-- doxytag: member="cruntime::ASN_E_UNDEFVAL" ref="g7c3afdfe2b5a9d9d4588011786b42839" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g7c3afdfe2b5a9d9d4588011786b42839">ASN_E_UNDEFVAL</a>&nbsp;&nbsp;&nbsp;-19</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g69cb98ff895b6ddd4eb104a7a3759d15"></a><!-- doxytag: member="cruntime::ASN_E_UNDEFTYP" ref="g69cb98ff895b6ddd4eb104a7a3759d15" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g69cb98ff895b6ddd4eb104a7a3759d15">ASN_E_UNDEFTYP</a>&nbsp;&nbsp;&nbsp;-20</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g0db579be13a32590271daf1c2e1671a0"></a><!-- doxytag: member="cruntime::ASN_E_BADTAG" ref="g0db579be13a32590271daf1c2e1671a0" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g0db579be13a32590271daf1c2e1671a0">ASN_E_BADTAG</a>&nbsp;&nbsp;&nbsp;-21</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gfb0cd04d382ae733b6f48a6c9720b1a6"></a><!-- doxytag: member="cruntime::ASN_E_TOODEEP" ref="gfb0cd04d382ae733b6f48a6c9720b1a6" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gfb0cd04d382ae733b6f48a6c9720b1a6">ASN_E_TOODEEP</a>&nbsp;&nbsp;&nbsp;-22</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb2edb95da301b0e564bf0fabbbd6b760"></a><!-- doxytag: member="cruntime::ASN_E_CONSVIO" ref="gb2edb95da301b0e564bf0fabbbd6b760" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb2edb95da301b0e564bf0fabbbd6b760">ASN_E_CONSVIO</a>&nbsp;&nbsp;&nbsp;-23</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g74bafc6261c9a8c849b56f214304e929"></a><!-- doxytag: member="cruntime::ASN_E_RANGERR" ref="g74bafc6261c9a8c849b56f214304e929" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g74bafc6261c9a8c849b56f214304e929">ASN_E_RANGERR</a>&nbsp;&nbsp;&nbsp;-24</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g54efd600576db8b43681f37af6fbafee"></a><!-- doxytag: member="cruntime::ASN_E_ENDOFFILE" ref="g54efd600576db8b43681f37af6fbafee" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g54efd600576db8b43681f37af6fbafee">ASN_E_ENDOFFILE</a>&nbsp;&nbsp;&nbsp;-25</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g6d3c66e116da27824059ae2023d0e17c"></a><!-- doxytag: member="cruntime::ASN_E_INVUTF8" ref="g6d3c66e116da27824059ae2023d0e17c" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g6d3c66e116da27824059ae2023d0e17c">ASN_E_INVUTF8</a>&nbsp;&nbsp;&nbsp;-26</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gce0dbea4f62a73d7db686807ed730cd4"></a><!-- doxytag: member="cruntime::ASN_E_CONCMODF" ref="gce0dbea4f62a73d7db686807ed730cd4" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gce0dbea4f62a73d7db686807ed730cd4">ASN_E_CONCMODF</a>&nbsp;&nbsp;&nbsp;-27</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g9c545b9679d6b77b9179bb70503cc9fd"></a><!-- doxytag: member="cruntime::ASN_E_ILLSTATE" ref="g9c545b9679d6b77b9179bb70503cc9fd" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g9c545b9679d6b77b9179bb70503cc9fd">ASN_E_ILLSTATE</a>&nbsp;&nbsp;&nbsp;-28</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g132ec629d46ce19ca4ee220f4e5c32b2"></a><!-- doxytag: member="cruntime::ASN_E_OUTOFBND" ref="g132ec629d46ce19ca4ee220f4e5c32b2" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g132ec629d46ce19ca4ee220f4e5c32b2">ASN_E_OUTOFBND</a>&nbsp;&nbsp;&nbsp;-29</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g3ec0c93938394a8686efcdfa898d1098"></a><!-- doxytag: member="cruntime::ASN_E_INVPARAM" ref="g3ec0c93938394a8686efcdfa898d1098" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g3ec0c93938394a8686efcdfa898d1098">ASN_E_INVPARAM</a>&nbsp;&nbsp;&nbsp;-30</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ga98ac04e6f9378b1166ba7272f635434"></a><!-- doxytag: member="cruntime::ASN_E_INVFORMAT" ref="ga98ac04e6f9378b1166ba7272f635434" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ga98ac04e6f9378b1166ba7272f635434">ASN_E_INVFORMAT</a>&nbsp;&nbsp;&nbsp;-31</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7bcd167583fe9ab22fac33c2ff5048b3"></a><!-- doxytag: member="cruntime::ASN_E_NOTINIT" ref="g7bcd167583fe9ab22fac33c2ff5048b3" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g7bcd167583fe9ab22fac33c2ff5048b3">ASN_E_NOTINIT</a>&nbsp;&nbsp;&nbsp;-32</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g41ba706f9ca6297621f99062cbaabe67"></a><!-- doxytag: member="cruntime::ASN_E_TOOBIG" ref="g41ba706f9ca6297621f99062cbaabe67" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g41ba706f9ca6297621f99062cbaabe67">ASN_E_TOOBIG</a>&nbsp;&nbsp;&nbsp;-33</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7f08bb26fd0c6bd9ee3a7ac538f167ed"></a><!-- doxytag: member="cruntime::ASN_E_INVCHAR" ref="g7f08bb26fd0c6bd9ee3a7ac538f167ed" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g7f08bb26fd0c6bd9ee3a7ac538f167ed">ASN_E_INVCHAR</a>&nbsp;&nbsp;&nbsp;-34</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g4078b4f63c822d99d5f494cfa3b5ecea"></a><!-- doxytag: member="cruntime::ASN_E_XMLSTATE" ref="g4078b4f63c822d99d5f494cfa3b5ecea" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4078b4f63c822d99d5f494cfa3b5ecea">ASN_E_XMLSTATE</a>&nbsp;&nbsp;&nbsp;-35</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g4e6c3c2286b318c726118141dadbb566"></a><!-- doxytag: member="cruntime::ASN_E_XMLPARSE" ref="g4e6c3c2286b318c726118141dadbb566" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4e6c3c2286b318c726118141dadbb566">ASN_E_XMLPARSE</a>&nbsp;&nbsp;&nbsp;-36</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g5951cd81d449ed27aac5035e763d8e92"></a><!-- doxytag: member="cruntime::ASN_E_SEQORDER" ref="g5951cd81d449ed27aac5035e763d8e92" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g5951cd81d449ed27aac5035e763d8e92">ASN_E_SEQORDER</a>&nbsp;&nbsp;&nbsp;-37</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge1797c71b855528dbe1ef853b871808a"></a><!-- doxytag: member="cruntime::ASN_E_INVINDEX" ref="ge1797c71b855528dbe1ef853b871808a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge1797c71b855528dbe1ef853b871808a">ASN_E_INVINDEX</a>&nbsp;&nbsp;&nbsp;-38</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g8080160e2806b6b3932374f3f54b74a7"></a><!-- doxytag: member="cruntime::ASN_E_INVTCVAL" ref="g8080160e2806b6b3932374f3f54b74a7" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g8080160e2806b6b3932374f3f54b74a7">ASN_E_INVTCVAL</a>&nbsp;&nbsp;&nbsp;-39</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7ff5416f7fa09b83ff67bbce64998674"></a><!-- doxytag: member="cruntime::ASN_E_FILNOTFOU" ref="g7ff5416f7fa09b83ff67bbce64998674" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g7ff5416f7fa09b83ff67bbce64998674">ASN_E_FILNOTFOU</a>&nbsp;&nbsp;&nbsp;-40</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gbb21bfaf6f3df3011d81693ee6ce1e4a"></a><!-- doxytag: member="cruntime::ASN_E_FILEREAD" ref="gbb21bfaf6f3df3011d81693ee6ce1e4a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gbb21bfaf6f3df3011d81693ee6ce1e4a">ASN_E_FILEREAD</a>&nbsp;&nbsp;&nbsp;-41</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gafdd7ea65b56857504a76d3a0211bc4b"></a><!-- doxytag: member="cruntime::ASN_E_FILEWRITE" ref="gafdd7ea65b56857504a76d3a0211bc4b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gafdd7ea65b56857504a76d3a0211bc4b">ASN_E_FILEWRITE</a>&nbsp;&nbsp;&nbsp;-42</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gede8cc5dc6e8d5443af5ce93e76d0dad"></a><!-- doxytag: member="cruntime::ASN_E_INVBASE64" ref="gede8cc5dc6e8d5443af5ce93e76d0dad" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gede8cc5dc6e8d5443af5ce93e76d0dad">ASN_E_INVBASE64</a>&nbsp;&nbsp;&nbsp;-43</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g430e58bbfd2345a05947b6b762e1f465"></a><!-- doxytag: member="cruntime::ASN_E_INVSOCKET" ref="g430e58bbfd2345a05947b6b762e1f465" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g430e58bbfd2345a05947b6b762e1f465">ASN_E_INVSOCKET</a>&nbsp;&nbsp;&nbsp;-44</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g13ac40c738f0c09f3ae9708c90236eb9"></a><!-- doxytag: member="cruntime::ASN_E_XMLLIBNFOU" ref="g13ac40c738f0c09f3ae9708c90236eb9" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g13ac40c738f0c09f3ae9708c90236eb9">ASN_E_XMLLIBNFOU</a>&nbsp;&nbsp;&nbsp;-45</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g3a6d9b861a1eba340a82c7403ec7bc32"></a><!-- doxytag: member="cruntime::ASN_E_XMLLIBINV" ref="g3a6d9b861a1eba340a82c7403ec7bc32" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g3a6d9b861a1eba340a82c7403ec7bc32">ASN_E_XMLLIBINV</a>&nbsp;&nbsp;&nbsp;-46</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gcc97806e11a8297e01a325a0bbde0ae0"></a><!-- doxytag: member="cruntime::ASN_E_NOTSUPP" ref="gcc97806e11a8297e01a325a0bbde0ae0" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gcc97806e11a8297e01a325a0bbde0ae0">ASN_E_NOTSUPP</a>&nbsp;&nbsp;&nbsp;-99</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g52d86c629498b8f96949a6dc18ddaf78"></a><!-- doxytag: member="cruntime::ASN_K_INDEFLEN" ref="g52d86c629498b8f96949a6dc18ddaf78" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g52d86c629498b8f96949a6dc18ddaf78">ASN_K_INDEFLEN</a>&nbsp;&nbsp;&nbsp;-9999</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g1f3826f827cbfa6a410951d3f239f574"></a><!-- doxytag: member="cruntime::ASN_ID_EOC" ref="g1f3826f827cbfa6a410951d3f239f574" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g1f3826f827cbfa6a410951d3f239f574">ASN_ID_EOC</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ga2599c585f7530a55d8cd1a8330376a1"></a><!-- doxytag: member="cruntime::ASN_ID_BOOL" ref="ga2599c585f7530a55d8cd1a8330376a1" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ga2599c585f7530a55d8cd1a8330376a1">ASN_ID_BOOL</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g32fab1cc8dfcae9152414646d3cacd29"></a><!-- doxytag: member="cruntime::ASN_ID_INT" ref="g32fab1cc8dfcae9152414646d3cacd29" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g32fab1cc8dfcae9152414646d3cacd29">ASN_ID_INT</a>&nbsp;&nbsp;&nbsp;2</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g147127aa13510eab0dde07f556437bbd"></a><!-- doxytag: member="cruntime::ASN_ID_BITSTR" ref="g147127aa13510eab0dde07f556437bbd" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g147127aa13510eab0dde07f556437bbd">ASN_ID_BITSTR</a>&nbsp;&nbsp;&nbsp;3</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ga18cdd242bdd1c60b109331f8c5b710a"></a><!-- doxytag: member="cruntime::ASN_ID_OCTSTR" ref="ga18cdd242bdd1c60b109331f8c5b710a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ga18cdd242bdd1c60b109331f8c5b710a">ASN_ID_OCTSTR</a>&nbsp;&nbsp;&nbsp;4</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g04c7dae7c098891ebffaacad1e98c054"></a><!-- doxytag: member="cruntime::ASN_ID_NULL" ref="g04c7dae7c098891ebffaacad1e98c054" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g04c7dae7c098891ebffaacad1e98c054">ASN_ID_NULL</a>&nbsp;&nbsp;&nbsp;5</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g52176844d830334dab6478a458a95f8e"></a><!-- doxytag: member="cruntime::ASN_ID_OBJID" ref="g52176844d830334dab6478a458a95f8e" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g52176844d830334dab6478a458a95f8e">ASN_ID_OBJID</a>&nbsp;&nbsp;&nbsp;6</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gfc0c8fb39552d8862f902891a2099384"></a><!-- doxytag: member="cruntime::ASN_ID_OBJDSC" ref="gfc0c8fb39552d8862f902891a2099384" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gfc0c8fb39552d8862f902891a2099384">ASN_ID_OBJDSC</a>&nbsp;&nbsp;&nbsp;7</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g78ee1e60ff1f3b8173a1dd5163f04e76"></a><!-- doxytag: member="cruntime::ASN_ID_EXTERN" ref="g78ee1e60ff1f3b8173a1dd5163f04e76" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g78ee1e60ff1f3b8173a1dd5163f04e76">ASN_ID_EXTERN</a>&nbsp;&nbsp;&nbsp;8</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gfca480cca7a46f0fa984583018a135e2"></a><!-- doxytag: member="cruntime::ASN_ID_REAL" ref="gfca480cca7a46f0fa984583018a135e2" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gfca480cca7a46f0fa984583018a135e2">ASN_ID_REAL</a>&nbsp;&nbsp;&nbsp;9</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g05fce71b254ce7d6c025e416a0884fee"></a><!-- doxytag: member="cruntime::ASN_ID_ENUM" ref="g05fce71b254ce7d6c025e416a0884fee" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g05fce71b254ce7d6c025e416a0884fee">ASN_ID_ENUM</a>&nbsp;&nbsp;&nbsp;10</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf7db19008e595a1cdf9e36db2aee7c59"></a><!-- doxytag: member="cruntime::ASN_ID_EPDV" ref="gf7db19008e595a1cdf9e36db2aee7c59" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf7db19008e595a1cdf9e36db2aee7c59">ASN_ID_EPDV</a>&nbsp;&nbsp;&nbsp;11</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g38b59a1ee9e88cb59da3686745e2790c"></a><!-- doxytag: member="cruntime::ASN_ID_RELOID" ref="g38b59a1ee9e88cb59da3686745e2790c" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g38b59a1ee9e88cb59da3686745e2790c">ASN_ID_RELOID</a>&nbsp;&nbsp;&nbsp;13</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge3b7e19a558ca5778c7ded4ff0a31e9b"></a><!-- doxytag: member="cruntime::ASN_ID_SEQ" ref="ge3b7e19a558ca5778c7ded4ff0a31e9b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge3b7e19a558ca5778c7ded4ff0a31e9b">ASN_ID_SEQ</a>&nbsp;&nbsp;&nbsp;16</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd105d6211e671ba20b834123f636b3d1"></a><!-- doxytag: member="cruntime::ASN_ID_SET" ref="gd105d6211e671ba20b834123f636b3d1" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd105d6211e671ba20b834123f636b3d1">ASN_ID_SET</a>&nbsp;&nbsp;&nbsp;17</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g459adce99d44ef4289ec85de8d83903b"></a><!-- doxytag: member="cruntime::ASN_SEQ_TAG" ref="g459adce99d44ef4289ec85de8d83903b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g459adce99d44ef4289ec85de8d83903b">ASN_SEQ_TAG</a>&nbsp;&nbsp;&nbsp;0x30</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g20bd74371aee3d9af983bfd0e408e129"></a><!-- doxytag: member="cruntime::ASN_SET_TAG" ref="g20bd74371aee3d9af983bfd0e408e129" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g20bd74371aee3d9af983bfd0e408e129">ASN_SET_TAG</a>&nbsp;&nbsp;&nbsp;0x31</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g88468f4fff78f445d9f4d103d990fa74"></a><!-- doxytag: member="cruntime::ASN_ID_NumericString" ref="g88468f4fff78f445d9f4d103d990fa74" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g88468f4fff78f445d9f4d103d990fa74">ASN_ID_NumericString</a>&nbsp;&nbsp;&nbsp;18</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gfc3dcc84abe210f28ccf3980beaf6235"></a><!-- doxytag: member="cruntime::ASN_ID_PrintableString" ref="gfc3dcc84abe210f28ccf3980beaf6235" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gfc3dcc84abe210f28ccf3980beaf6235">ASN_ID_PrintableString</a>&nbsp;&nbsp;&nbsp;19</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g12dbb54bf515cd64c08983d7b7c8d32e"></a><!-- doxytag: member="cruntime::ASN_ID_TeletexString" ref="g12dbb54bf515cd64c08983d7b7c8d32e" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g12dbb54bf515cd64c08983d7b7c8d32e">ASN_ID_TeletexString</a>&nbsp;&nbsp;&nbsp;20</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gde51560cc53516e09645c532882e9f4b"></a><!-- doxytag: member="cruntime::ASN_ID_T61String" ref="gde51560cc53516e09645c532882e9f4b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gde51560cc53516e09645c532882e9f4b">ASN_ID_T61String</a>&nbsp;&nbsp;&nbsp;ASN_ID_TeletexString</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g1ba52b85df9ceb4f3c3f21f2a9096079"></a><!-- doxytag: member="cruntime::ASN_ID_VideotexString" ref="g1ba52b85df9ceb4f3c3f21f2a9096079" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g1ba52b85df9ceb4f3c3f21f2a9096079">ASN_ID_VideotexString</a>&nbsp;&nbsp;&nbsp;21</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge528f55f6f351190344a589b689f9cad"></a><!-- doxytag: member="cruntime::ASN_ID_IA5String" ref="ge528f55f6f351190344a589b689f9cad" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge528f55f6f351190344a589b689f9cad">ASN_ID_IA5String</a>&nbsp;&nbsp;&nbsp;22</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g6e44f0b090d27c444eae689ed94775b6"></a><!-- doxytag: member="cruntime::ASN_ID_UTCTime" ref="g6e44f0b090d27c444eae689ed94775b6" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g6e44f0b090d27c444eae689ed94775b6">ASN_ID_UTCTime</a>&nbsp;&nbsp;&nbsp;23</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7de02f9ec82336075f5066ed0384e25a"></a><!-- doxytag: member="cruntime::ASN_ID_GeneralTime" ref="g7de02f9ec82336075f5066ed0384e25a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g7de02f9ec82336075f5066ed0384e25a">ASN_ID_GeneralTime</a>&nbsp;&nbsp;&nbsp;24</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g0859ef221e68e05edfcea9208164219f"></a><!-- doxytag: member="cruntime::ASN_ID_GraphicString" ref="g0859ef221e68e05edfcea9208164219f" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g0859ef221e68e05edfcea9208164219f">ASN_ID_GraphicString</a>&nbsp;&nbsp;&nbsp;25</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf4e3667c6d353f2f7c26d938645a2555"></a><!-- doxytag: member="cruntime::ASN_ID_VisibleString" ref="gf4e3667c6d353f2f7c26d938645a2555" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf4e3667c6d353f2f7c26d938645a2555">ASN_ID_VisibleString</a>&nbsp;&nbsp;&nbsp;26</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf9a0d44b7785c27303bbf1d6d0f9ee6b"></a><!-- doxytag: member="cruntime::ASN_ID_GeneralString" ref="gf9a0d44b7785c27303bbf1d6d0f9ee6b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf9a0d44b7785c27303bbf1d6d0f9ee6b">ASN_ID_GeneralString</a>&nbsp;&nbsp;&nbsp;27</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g2daf169af01a89121c741e60c4d6b6c3"></a><!-- doxytag: member="cruntime::ASN_ID_UniversalString" ref="g2daf169af01a89121c741e60c4d6b6c3" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g2daf169af01a89121c741e60c4d6b6c3">ASN_ID_UniversalString</a>&nbsp;&nbsp;&nbsp;28</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb03c99226d2e249e841ec69b291ad242"></a><!-- doxytag: member="cruntime::ASN_ID_BMPString" ref="gb03c99226d2e249e841ec69b291ad242" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb03c99226d2e249e841ec69b291ad242">ASN_ID_BMPString</a>&nbsp;&nbsp;&nbsp;30</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g46677ca73cfc31753964534c31d634f5"></a><!-- doxytag: member="cruntime::XM_SEEK" ref="g46677ca73cfc31753964534c31d634f5" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g46677ca73cfc31753964534c31d634f5">XM_SEEK</a>&nbsp;&nbsp;&nbsp;0x01</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf3eb0868e7493a09af890c3f0aa8419b"></a><!-- doxytag: member="cruntime::XM_ADVANCE" ref="gf3eb0868e7493a09af890c3f0aa8419b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf3eb0868e7493a09af890c3f0aa8419b">XM_ADVANCE</a>&nbsp;&nbsp;&nbsp;0x02</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb31e4d1c43feeea4cc0be3831ca8c5b9"></a><!-- doxytag: member="cruntime::XM_DYNAMIC" ref="gb31e4d1c43feeea4cc0be3831ca8c5b9" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb31e4d1c43feeea4cc0be3831ca8c5b9">XM_DYNAMIC</a>&nbsp;&nbsp;&nbsp;0x04</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g11de53e22e3f6f3c4c05b84da5598ffd"></a><!-- doxytag: member="cruntime::XM_SKIP" ref="g11de53e22e3f6f3c4c05b84da5598ffd" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g11de53e22e3f6f3c4c05b84da5598ffd">XM_SKIP</a>&nbsp;&nbsp;&nbsp;0x08</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g6546e7380f047b44331ed275dc190c58"></a><!-- doxytag: member="cruntime::ASN_K_MAXDEPTH" ref="g6546e7380f047b44331ed275dc190c58" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g6546e7380f047b44331ed275dc190c58">ASN_K_MAXDEPTH</a>&nbsp;&nbsp;&nbsp;32</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g3628dbe6261bbc0d47b77307664001f5"></a><!-- doxytag: member="cruntime::ASN_K_MAXSUBIDS" ref="g3628dbe6261bbc0d47b77307664001f5" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g3628dbe6261bbc0d47b77307664001f5">ASN_K_MAXSUBIDS</a>&nbsp;&nbsp;&nbsp;128</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g08e5927526895468eb39a7c6cb60670d"></a><!-- doxytag: member="cruntime::ASN_K_MAXENUM" ref="g08e5927526895468eb39a7c6cb60670d" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g08e5927526895468eb39a7c6cb60670d">ASN_K_MAXENUM</a>&nbsp;&nbsp;&nbsp;100</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g73e4348330e6fd759819dd84c843592f"></a><!-- doxytag: member="cruntime::ASN_K_MAXERRP" ref="g73e4348330e6fd759819dd84c843592f" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g73e4348330e6fd759819dd84c843592f">ASN_K_MAXERRP</a>&nbsp;&nbsp;&nbsp;5</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g83dff37388f40120a278644c4ca7397b"></a><!-- doxytag: member="cruntime::ASN_K_MAXERRSTK" ref="g83dff37388f40120a278644c4ca7397b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g83dff37388f40120a278644c4ca7397b">ASN_K_MAXERRSTK</a>&nbsp;&nbsp;&nbsp;8</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g8860758cd7d62c6615dd5f6d8366da1e"></a><!-- doxytag: member="cruntime::ASN_K_ENCBUFSIZ" ref="g8860758cd7d62c6615dd5f6d8366da1e" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g8860758cd7d62c6615dd5f6d8366da1e">ASN_K_ENCBUFSIZ</a>&nbsp;&nbsp;&nbsp;2*1024</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g35a47afbb9281b55c1441a25db1a70fb"></a><!-- doxytag: member="cruntime::ASN_K_MEMBUFSEG" ref="g35a47afbb9281b55c1441a25db1a70fb" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g35a47afbb9281b55c1441a25db1a70fb">ASN_K_MEMBUFSEG</a>&nbsp;&nbsp;&nbsp;1024</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge65e97087c250ceaa465b65664bca88f"></a><!-- doxytag: member="cruntime::NUM_ABITS" ref="ge65e97087c250ceaa465b65664bca88f" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge65e97087c250ceaa465b65664bca88f">NUM_ABITS</a>&nbsp;&nbsp;&nbsp;4</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gae4eb6b3e8b33f82af036c973cff3cfe"></a><!-- doxytag: member="cruntime::NUM_UBITS" ref="gae4eb6b3e8b33f82af036c973cff3cfe" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gae4eb6b3e8b33f82af036c973cff3cfe">NUM_UBITS</a>&nbsp;&nbsp;&nbsp;4</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd03892b6c2110067f7fb3740b65906b9"></a><!-- doxytag: member="cruntime::NUM_CANSET" ref="gd03892b6c2110067f7fb3740b65906b9" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd03892b6c2110067f7fb3740b65906b9">NUM_CANSET</a>&nbsp;&nbsp;&nbsp;&quot; 0123456789&quot;</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ga06ed7d4ad35f2631bd53572bf8159d1"></a><!-- doxytag: member="cruntime::PRN_ABITS" ref="ga06ed7d4ad35f2631bd53572bf8159d1" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ga06ed7d4ad35f2631bd53572bf8159d1">PRN_ABITS</a>&nbsp;&nbsp;&nbsp;8</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd92a9b830e3b1a5fa3de5dded9891a44"></a><!-- doxytag: member="cruntime::PRN_UBITS" ref="gd92a9b830e3b1a5fa3de5dded9891a44" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd92a9b830e3b1a5fa3de5dded9891a44">PRN_UBITS</a>&nbsp;&nbsp;&nbsp;7</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g4447bca84424e197430a644196a90f91"></a><!-- doxytag: member="cruntime::PRN_CANSET" ref="g4447bca84424e197430a644196a90f91" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4447bca84424e197430a644196a90f91">PRN_CANSET</a>&nbsp;&nbsp;&nbsp;&quot; '()+,-./0123456789:=?ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gcfac4d426a14926f406e91b720bc5035"></a><!-- doxytag: member="cruntime::VIS_ABITS" ref="gcfac4d426a14926f406e91b720bc5035" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gcfac4d426a14926f406e91b720bc5035">VIS_ABITS</a>&nbsp;&nbsp;&nbsp;8</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gbc9f485afefd92dfeed7f676246b6f3b"></a><!-- doxytag: member="cruntime::VIS_UBITS" ref="gbc9f485afefd92dfeed7f676246b6f3b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gbc9f485afefd92dfeed7f676246b6f3b">VIS_UBITS</a>&nbsp;&nbsp;&nbsp;7</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g2ab530f52d72ab4a74e4675a4cc6a2d1">VIS_CANSET</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g5fca8bbdcad6a8b38438f47cca2f936f"></a><!-- doxytag: member="cruntime::T61_ABITS" ref="g5fca8bbdcad6a8b38438f47cca2f936f" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g5fca8bbdcad6a8b38438f47cca2f936f">T61_ABITS</a>&nbsp;&nbsp;&nbsp;8</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf030f889c3e2ed17ce068da093cd1b78"></a><!-- doxytag: member="cruntime::T61_UBITS" ref="gf030f889c3e2ed17ce068da093cd1b78" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf030f889c3e2ed17ce068da093cd1b78">T61_UBITS</a>&nbsp;&nbsp;&nbsp;7</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g50836facbd6ff45b0faad7cb379a4c8d">T61_CANSET</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g30a3458c501b1e3e9e10e97a5d5b43a0"></a><!-- doxytag: member="cruntime::IA5_ABITS" ref="g30a3458c501b1e3e9e10e97a5d5b43a0" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g30a3458c501b1e3e9e10e97a5d5b43a0">IA5_ABITS</a>&nbsp;&nbsp;&nbsp;8</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd6c291b8a1de9319bf1944d6b7c24072"></a><!-- doxytag: member="cruntime::IA5_UBITS" ref="gd6c291b8a1de9319bf1944d6b7c24072" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd6c291b8a1de9319bf1944d6b7c24072">IA5_UBITS</a>&nbsp;&nbsp;&nbsp;7</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g85a80997925873c9df0cf377e8f4493b">IA5_CANSET</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gac5fee4ce622c876208753769b121656"></a><!-- doxytag: member="cruntime::IA5_RANGE1_LOWER" ref="gac5fee4ce622c876208753769b121656" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gac5fee4ce622c876208753769b121656">IA5_RANGE1_LOWER</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gdc4104d6752c0112e91fe88fb301827e"></a><!-- doxytag: member="cruntime::IA5_RANGE2_LOWER" ref="gdc4104d6752c0112e91fe88fb301827e" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gdc4104d6752c0112e91fe88fb301827e">IA5_RANGE2_LOWER</a>&nbsp;&nbsp;&nbsp;0x5f</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf21208510edf3eb8859af11ebfd11f49"></a><!-- doxytag: member="cruntime::GEN_ABITS" ref="gf21208510edf3eb8859af11ebfd11f49" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf21208510edf3eb8859af11ebfd11f49">GEN_ABITS</a>&nbsp;&nbsp;&nbsp;8</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge8f123f11c0918fcd27feb1b303d9ca2"></a><!-- doxytag: member="cruntime::GEN_UBITS" ref="ge8f123f11c0918fcd27feb1b303d9ca2" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge8f123f11c0918fcd27feb1b303d9ca2">GEN_UBITS</a>&nbsp;&nbsp;&nbsp;7</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g56fffe4bc0bf8e9f7ef29c8d6bc4d2e4">GEN_CANSET</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gfb0af5128a0d8a4c55dd20716b4cbc0b"></a><!-- doxytag: member="cruntime::BMP_ABITS" ref="gfb0af5128a0d8a4c55dd20716b4cbc0b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gfb0af5128a0d8a4c55dd20716b4cbc0b">BMP_ABITS</a>&nbsp;&nbsp;&nbsp;16</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge40949d0a399b8b18b5761f0abe48265"></a><!-- doxytag: member="cruntime::BMP_UBITS" ref="ge40949d0a399b8b18b5761f0abe48265" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge40949d0a399b8b18b5761f0abe48265">BMP_UBITS</a>&nbsp;&nbsp;&nbsp;16</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd9f91aaa1ee0fb092386c8385ace2418"></a><!-- doxytag: member="cruntime::BMP_FIRST" ref="gd9f91aaa1ee0fb092386c8385ace2418" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd9f91aaa1ee0fb092386c8385ace2418">BMP_FIRST</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g1cde8f6889cc9b984a480caa95c326d7"></a><!-- doxytag: member="cruntime::BMP_LAST" ref="g1cde8f6889cc9b984a480caa95c326d7" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g1cde8f6889cc9b984a480caa95c326d7">BMP_LAST</a>&nbsp;&nbsp;&nbsp;0xffff</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g321290e46f56d43c88c67491b3379e5a"></a><!-- doxytag: member="cruntime::UCS_ABITS" ref="g321290e46f56d43c88c67491b3379e5a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g321290e46f56d43c88c67491b3379e5a">UCS_ABITS</a>&nbsp;&nbsp;&nbsp;32</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gbe1caca9410788eb3fd362d3c20220df"></a><!-- doxytag: member="cruntime::UCS_UBITS" ref="gbe1caca9410788eb3fd362d3c20220df" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gbe1caca9410788eb3fd362d3c20220df">UCS_UBITS</a>&nbsp;&nbsp;&nbsp;32</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g454ceb1f2e77789cf62f8aa8055a12f8"></a><!-- doxytag: member="cruntime::UCS_FIRST" ref="g454ceb1f2e77789cf62f8aa8055a12f8" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g454ceb1f2e77789cf62f8aa8055a12f8">UCS_FIRST</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g6f400621021953423cfbd1bb9feef140"></a><!-- doxytag: member="cruntime::UCS_LAST" ref="g6f400621021953423cfbd1bb9feef140" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g6f400621021953423cfbd1bb9feef140">UCS_LAST</a>&nbsp;&nbsp;&nbsp;0xfffffffful</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g74bedac9c91ebc5b8696c9f939bddb2f"></a><!-- doxytag: member="cruntime::ASN1TAG_LSHIFT" ref="g74bedac9c91ebc5b8696c9f939bddb2f" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g74bedac9c91ebc5b8696c9f939bddb2f">ASN1TAG_LSHIFT</a>&nbsp;&nbsp;&nbsp;24</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7226b4cc76129b1173aa83dc5a4bfd99"></a><!-- doxytag: member="cruntime::ASN1UINT_MAX" ref="g7226b4cc76129b1173aa83dc5a4bfd99" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g7226b4cc76129b1173aa83dc5a4bfd99">ASN1UINT_MAX</a>&nbsp;&nbsp;&nbsp;4294967295U</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g4fd62686ad3a6c5a2c8ad34464b1ee66"></a><!-- doxytag: member="cruntime::ASN1INT_MAX" ref="g4fd62686ad3a6c5a2c8ad34464b1ee66" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4fd62686ad3a6c5a2c8ad34464b1ee66">ASN1INT_MAX</a>&nbsp;&nbsp;&nbsp;((<a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>)2147483647L)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g56df137f7de62c57858391e09055bd33"></a><!-- doxytag: member="cruntime::ASN1INT_MIN" ref="g56df137f7de62c57858391e09055bd33" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g56df137f7de62c57858391e09055bd33">ASN1INT_MIN</a>&nbsp;&nbsp;&nbsp;((<a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>)(-ASN1INT_MAX-1))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gdb4be0b6d220c5c1dc001573132b2ce1"></a><!-- doxytag: member="cruntime::ASN1UINTCNT" ref="gdb4be0b6d220c5c1dc001573132b2ce1" args="(val)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gdb4be0b6d220c5c1dc001573132b2ce1">ASN1UINTCNT</a>(val)&nbsp;&nbsp;&nbsp;val##u</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb6b4a943f2be3692767608a31cf306cb"></a><!-- doxytag: member="cruntime::ASN1INT64" ref="gb6b4a943f2be3692767608a31cf306cb" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb6b4a943f2be3692767608a31cf306cb">ASN1INT64</a>&nbsp;&nbsp;&nbsp;long</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd45edf989c805f199b78502183ee955c"></a><!-- doxytag: member="cruntime::XM_K_MEMBLKSIZ" ref="gd45edf989c805f199b78502183ee955c" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd45edf989c805f199b78502183ee955c">XM_K_MEMBLKSIZ</a>&nbsp;&nbsp;&nbsp;(4*1024)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7e0959378af1c541c82fcd85ac8648e3"></a><!-- doxytag: member="cruntime::ASN1DYNCTXT" ref="g7e0959378af1c541c82fcd85ac8648e3" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g7e0959378af1c541c82fcd85ac8648e3">ASN1DYNCTXT</a>&nbsp;&nbsp;&nbsp;0x8000</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gdfd05507323722492c18c28d89e764f0"></a><!-- doxytag: member="cruntime::ASN1INDEFLEN" ref="gdfd05507323722492c18c28d89e764f0" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gdfd05507323722492c18c28d89e764f0">ASN1INDEFLEN</a>&nbsp;&nbsp;&nbsp;0x4000</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gdc42297435d897e6ae48ea89329c37e5"></a><!-- doxytag: member="cruntime::ASN1TRACE" ref="gdc42297435d897e6ae48ea89329c37e5" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gdc42297435d897e6ae48ea89329c37e5">ASN1TRACE</a>&nbsp;&nbsp;&nbsp;0x2000</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g0a86a55143a20a744a23063e1fde1641"></a><!-- doxytag: member="cruntime::ASN1LASTEOC" ref="g0a86a55143a20a744a23063e1fde1641" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g0a86a55143a20a744a23063e1fde1641">ASN1LASTEOC</a>&nbsp;&nbsp;&nbsp;0x1000</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gda88b0fa6b8bacae8f477601ec4be102"></a><!-- doxytag: member="cruntime::ASN1FASTCOPY" ref="gda88b0fa6b8bacae8f477601ec4be102" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gda88b0fa6b8bacae8f477601ec4be102">ASN1FASTCOPY</a>&nbsp;&nbsp;&nbsp;0x0800</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g5972f2905804c2720c9f097343d75ee2"></a><!-- doxytag: member="cruntime::ASN1CONSTAG" ref="g5972f2905804c2720c9f097343d75ee2" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g5972f2905804c2720c9f097343d75ee2">ASN1CONSTAG</a>&nbsp;&nbsp;&nbsp;0x0400</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd6c702a92a8a847bd7fad374c4910e67"></a><!-- doxytag: member="cruntime::ASN1CANXER" ref="gd6c702a92a8a847bd7fad374c4910e67" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd6c702a92a8a847bd7fad374c4910e67">ASN1CANXER</a>&nbsp;&nbsp;&nbsp;0x0200</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf8eaf0cd0f77b728f641ff2f40c9eee9"></a><!-- doxytag: member="cruntime::ASN1SAVEBUF" ref="gf8eaf0cd0f77b728f641ff2f40c9eee9" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf8eaf0cd0f77b728f641ff2f40c9eee9">ASN1SAVEBUF</a>&nbsp;&nbsp;&nbsp;0x0100</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g9ab407467ffc47bff77a4afdcef80819"></a><!-- doxytag: member="cruntime::ASN1OPENTYPE" ref="g9ab407467ffc47bff77a4afdcef80819" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g9ab407467ffc47bff77a4afdcef80819">ASN1OPENTYPE</a>&nbsp;&nbsp;&nbsp;0x0080</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g0d7d0e6b693cabe3d30b867f24c30e7b"></a><!-- doxytag: member="cruntime::ASN1MAX" ref="g0d7d0e6b693cabe3d30b867f24c30e7b" args="(a, b)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g0d7d0e6b693cabe3d30b867f24c30e7b">ASN1MAX</a>(a, b)&nbsp;&nbsp;&nbsp;(((a)&gt;(b))?(a):(b))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gaa4ce50c7895900e1585d6ce85f363e3"></a><!-- doxytag: member="cruntime::ASN1MIN" ref="gaa4ce50c7895900e1585d6ce85f363e3" args="(a, b)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gaa4ce50c7895900e1585d6ce85f363e3">ASN1MIN</a>(a, b)&nbsp;&nbsp;&nbsp;(((a)&lt;(b))?(a):(b))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge643ca3b985bc2317bb3d31b72ec834f"></a><!-- doxytag: member="cruntime::ASN1BUFCUR" ref="ge643ca3b985bc2317bb3d31b72ec834f" args="(cp)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge643ca3b985bc2317bb3d31b72ec834f">ASN1BUFCUR</a>(cp)&nbsp;&nbsp;&nbsp;(cp)-&gt;buffer.data[(cp)-&gt;buffer.byteIndex]</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge5a3862f56e1b145e90709a70c5daf6c"></a><!-- doxytag: member="cruntime::ASN1BUFPTR" ref="ge5a3862f56e1b145e90709a70c5daf6c" args="(cp)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge5a3862f56e1b145e90709a70c5daf6c">ASN1BUFPTR</a>(cp)&nbsp;&nbsp;&nbsp;&amp;(cp)-&gt;buffer.data[(cp)-&gt;buffer.byteIndex]</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g8b91480d342464d5701a165d03f482b6"></a><!-- doxytag: member="cruntime::ASN1CRTMALLOC0" ref="g8b91480d342464d5701a165d03f482b6" args="(nbytes)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g8b91480d342464d5701a165d03f482b6">ASN1CRTMALLOC0</a>(nbytes)&nbsp;&nbsp;&nbsp;malloc(nbytes)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g2193dfa169c08045a42fa6d0ccf5995b"></a><!-- doxytag: member="cruntime::ASN1CRTFREE0" ref="g2193dfa169c08045a42fa6d0ccf5995b" args="(ptr)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g2193dfa169c08045a42fa6d0ccf5995b">ASN1CRTFREE0</a>(ptr)&nbsp;&nbsp;&nbsp;free(ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ged1d7a4b380089a96de8658cb8174183"></a><!-- doxytag: member="cruntime::ASN1CRTMALLOC" ref="ged1d7a4b380089a96de8658cb8174183" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ged1d7a4b380089a96de8658cb8174183">ASN1CRTMALLOC</a>&nbsp;&nbsp;&nbsp;memHeapAlloc</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge42d2fd8f0daa8d195459a4b1721e83a"></a><!-- doxytag: member="cruntime::ASN1CRTFREE" ref="ge42d2fd8f0daa8d195459a4b1721e83a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge42d2fd8f0daa8d195459a4b1721e83a">ASN1CRTFREE</a>&nbsp;&nbsp;&nbsp;ASN1MEMFREEPTR</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g57123b2c4444c42d57742e8f11d55044"></a><!-- doxytag: member="cruntime::encodeIA5String" ref="g57123b2c4444c42d57742e8f11d55044" args="(pctxt, value, permCharSet)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g57123b2c4444c42d57742e8f11d55044">encodeIA5String</a>(pctxt, value, permCharSet)&nbsp;&nbsp;&nbsp;encodeConstrainedStringEx (pctxt, value, permCharSet, 8, 7, 7)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge93186d07b0d6a9d35df46a2af381c69"></a><!-- doxytag: member="cruntime::encodeGeneralizedTime" ref="ge93186d07b0d6a9d35df46a2af381c69" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge93186d07b0d6a9d35df46a2af381c69">encodeGeneralizedTime</a>&nbsp;&nbsp;&nbsp;encodeIA5String</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd848a36573183be937e4833a7f9d3f34"></a><!-- doxytag: member="cruntime::decodeIA5String" ref="gd848a36573183be937e4833a7f9d3f34" args="(pctxt, pvalue, permCharSet)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd848a36573183be937e4833a7f9d3f34">decodeIA5String</a>(pctxt, pvalue, permCharSet)&nbsp;&nbsp;&nbsp;decodeConstrainedStringEx (pctxt, pvalue, permCharSet, 8, 7, 7)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g6555a709aa0e3e3f86bfc9735492194a"></a><!-- doxytag: member="cruntime::decodeGeneralizedTime" ref="g6555a709aa0e3e3f86bfc9735492194a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g6555a709aa0e3e3f86bfc9735492194a">decodeGeneralizedTime</a>&nbsp;&nbsp;&nbsp;decodeIA5String</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g394cd27b9b36aea4b59f2a7ca012db06"></a><!-- doxytag: member="cruntime::RT_MH_DONTKEEPFREE" ref="g394cd27b9b36aea4b59f2a7ca012db06" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g394cd27b9b36aea4b59f2a7ca012db06">RT_MH_DONTKEEPFREE</a>&nbsp;&nbsp;&nbsp;0x1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">errfp <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g81c851cd96500e8f5183cfb0f29cf893"></a><!-- doxytag: member="cruntime::OSRTMH_PROPID_DEFBLKSIZE" ref="g81c851cd96500e8f5183cfb0f29cf893" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g81c851cd96500e8f5183cfb0f29cf893">OSRTMH_PROPID_DEFBLKSIZE</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g371840240bf5a0df451c341945c93ba8"></a><!-- doxytag: member="cruntime::OSRTMH_PROPID_SETFLAGS" ref="g371840240bf5a0df451c341945c93ba8" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g371840240bf5a0df451c341945c93ba8">OSRTMH_PROPID_SETFLAGS</a>&nbsp;&nbsp;&nbsp;2</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf7e58cbe0b7372c2684c0ed2eae169bb"></a><!-- doxytag: member="cruntime::OSRTMH_PROPID_CLEARFLAGS" ref="gf7e58cbe0b7372c2684c0ed2eae169bb" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf7e58cbe0b7372c2684c0ed2eae169bb">OSRTMH_PROPID_CLEARFLAGS</a>&nbsp;&nbsp;&nbsp;3</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g707cf0684f2b18c391ada009e8d54f70"></a><!-- doxytag: member="cruntime::OSRTMH_PROPID_USER" ref="g707cf0684f2b18c391ada009e8d54f70" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g707cf0684f2b18c391ada009e8d54f70">OSRTMH_PROPID_USER</a>&nbsp;&nbsp;&nbsp;10</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4c82745e7790296963079463cc907d0e">INCRBITIDX</a>(pctxt)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">rtmem  <a href="#g4c82745e7790296963079463cc907d0e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g50feeff3e9e4f9cc787a9e12718bdd52">DECODEBIT</a>(pctxt, pvalue)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g46e661de8f34aa466f301c259e917e12">decodeUnconsInteger</a>(pctxt, pvalue)&nbsp;&nbsp;&nbsp;decodeSemiConsInteger(pctxt, pvalue, ASN1INT_MIN)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode an unconstrained integer.  <a href="#g46e661de8f34aa466f301c259e917e12"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g14e5d02a55fb5aafa710db7696c12d04">decodeUnconsUnsigned</a>(pctxt, pvalue)&nbsp;&nbsp;&nbsp;decodeSemiConsUnsigned(pctxt, pvalue, 0U)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode an unconstrained unsigned integer.  <a href="#g14e5d02a55fb5aafa710db7696c12d04"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gccc161bfb69d131752e0b86a6c63d0df">encodeUnconsInteger</a>(pctxt, value)&nbsp;&nbsp;&nbsp;encodeSemiConsInteger(pctxt,value,ASN1INT_MIN)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes an unconstrained integer.  <a href="#gccc161bfb69d131752e0b86a6c63d0df"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g003befa8fed2de054497150f504cb842"></a><!-- doxytag: member="cruntime::OOUINT32_MAX" ref="g003befa8fed2de054497150f504cb842" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g003befa8fed2de054497150f504cb842">OOUINT32_MAX</a>&nbsp;&nbsp;&nbsp;4294967295U</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ga3177caf5248d36f2296ed9fcca99d44"></a><!-- doxytag: member="cruntime::OOINT32_MAX" ref="ga3177caf5248d36f2296ed9fcca99d44" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ga3177caf5248d36f2296ed9fcca99d44">OOINT32_MAX</a>&nbsp;&nbsp;&nbsp;((<a class="el" href="group__cruntime.shtml#gfcc7a472939cadc22f67d470a071774e">OOINT32</a>)2147483647L)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb5071ab944725148f569dedd2e1a7455"></a><!-- doxytag: member="cruntime::OOINT32_MIN" ref="gb5071ab944725148f569dedd2e1a7455" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb5071ab944725148f569dedd2e1a7455">OOINT32_MIN</a>&nbsp;&nbsp;&nbsp;((<a class="el" href="group__cruntime.shtml#gfcc7a472939cadc22f67d470a071774e">OOINT32</a>)(-OOINT32_MAX-1))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ga93f0eb578d23995850d61f7d61c55c1"></a><!-- doxytag: member="cruntime::FALSE" ref="ga93f0eb578d23995850d61f7d61c55c1" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ga93f0eb578d23995850d61f7d61c55c1">FALSE</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ga8cecfc5c5c054d2875c03e77b7be15d"></a><!-- doxytag: member="cruntime::TRUE" ref="ga8cecfc5c5c054d2875c03e77b7be15d" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ga8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g9885a598039aeeb60495faa5e629a96f"></a><!-- doxytag: member="cruntime::OOERRINVPARAM" ref="g9885a598039aeeb60495faa5e629a96f" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g9885a598039aeeb60495faa5e629a96f">OOERRINVPARAM</a>&nbsp;&nbsp;&nbsp;(-50)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g0653dd23d83c38bc1ea9aed3aff9416b"></a><!-- doxytag: member="cruntime::OOERRBUFOVFLW" ref="g0653dd23d83c38bc1ea9aed3aff9416b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g0653dd23d83c38bc1ea9aed3aff9416b">OOERRBUFOVFLW</a>&nbsp;&nbsp;&nbsp;(-51)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g2d358b3e13f622972866903f6b49e331"></a><!-- doxytag: member="cruntime::OOERRNOMEM" ref="g2d358b3e13f622972866903f6b49e331" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g2d358b3e13f622972866903f6b49e331">OOERRNOMEM</a>&nbsp;&nbsp;&nbsp;(-52)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge5bd40f609f08efb2aee5f722e6dc580"></a><!-- doxytag: member="cruntime::OOMEMALLOC" ref="ge5bd40f609f08efb2aee5f722e6dc580" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge5bd40f609f08efb2aee5f722e6dc580">OOMEMALLOC</a>&nbsp;&nbsp;&nbsp;malloc</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb395392a7593d326ddc701eb483f911d"></a><!-- doxytag: member="cruntime::OOMEMFREE" ref="gb395392a7593d326ddc701eb483f911d" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb395392a7593d326ddc701eb483f911d">OOMEMFREE</a>&nbsp;&nbsp;&nbsp;free</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gc07b712b148c86127e34e892ea7756e7"></a><!-- doxytag: member="cruntime::OOMAX" ref="gc07b712b148c86127e34e892ea7756e7" args="(a, b)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gc07b712b148c86127e34e892ea7756e7">OOMAX</a>(a, b)&nbsp;&nbsp;&nbsp;(((a)&gt;(b))?(a):(b))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g648888e341dba6a0096fde00c0d251ad"></a><!-- doxytag: member="cruntime::OOMIN" ref="g648888e341dba6a0096fde00c0d251ad" args="(a, b)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g648888e341dba6a0096fde00c0d251ad">OOMIN</a>(a, b)&nbsp;&nbsp;&nbsp;(((a)&lt;(b))?(a):(b))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf015149751ae631fc6a12e2be6db87c9"></a><!-- doxytag: member="cruntime::OONUMBEROF" ref="gf015149751ae631fc6a12e2be6db87c9" args="(items)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf015149751ae631fc6a12e2be6db87c9">OONUMBEROF</a>(items)&nbsp;&nbsp;&nbsp;(sizeof(items)/sizeof(items[0]))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g77366c1bd428629dc898e188bfd182a3"></a><!-- doxytag: member="cruntime::EXTERN" ref="g77366c1bd428629dc898e188bfd182a3" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g77366c1bd428629dc898e188bfd182a3">EXTERN</a></td></tr>

<tr><td colspan="2"><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g9fbeda2dfca3a369ac5094c48549b99d"></a><!-- doxytag: member="cruntime::ASN1CHAR" ref="g9fbeda2dfca3a369ac5094c48549b99d" args="" -->
typedef char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g9fbeda2dfca3a369ac5094c48549b99d">ASN1CHAR</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd45df98231e0a493f3ff759d6d435e5c"></a><!-- doxytag: member="cruntime::ASN1OCTET" ref="gd45df98231e0a493f3ff759d6d435e5c" args="" -->
typedef unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd5942cacdd859b0c59ec779e6e4dc466"></a><!-- doxytag: member="cruntime::ASN1BOOL" ref="gd5942cacdd859b0c59ec779e6e4dc466" args="" -->
typedef <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g389996b8614fec7592a0f320cd2cef4f"></a><!-- doxytag: member="cruntime::ASN1INT8" ref="g389996b8614fec7592a0f320cd2cef4f" args="" -->
typedef signed char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g389996b8614fec7592a0f320cd2cef4f">ASN1INT8</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge57247f09d2f23ffc993b72ce3513309"></a><!-- doxytag: member="cruntime::ASN1UINT8" ref="ge57247f09d2f23ffc993b72ce3513309" args="" -->
typedef unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge57247f09d2f23ffc993b72ce3513309">ASN1UINT8</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gc63d5c22a9cf99cb8e6fc62432dcb9a2"></a><!-- doxytag: member="cruntime::ASN1INT" ref="gc63d5c22a9cf99cb8e6fc62432dcb9a2" args="" -->
typedef int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g4f87fdfc7cb076157d6efd758b056c4f"></a><!-- doxytag: member="cruntime::ASN1UINT" ref="g4f87fdfc7cb076157d6efd758b056c4f" args="" -->
typedef unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gabbb6e8e1d306728b62be6d5d45adb56"></a><!-- doxytag: member="cruntime::ASN1ENUM" ref="gabbb6e8e1d306728b62be6d5d45adb56" args="" -->
typedef <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gabbb6e8e1d306728b62be6d5d45adb56">ASN1ENUM</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge78293694618f9c03ed2af1b7bb8db58"></a><!-- doxytag: member="cruntime::ASN1REAL" ref="ge78293694618f9c03ed2af1b7bb8db58" args="" -->
typedef double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge78293694618f9c03ed2af1b7bb8db58">ASN1REAL</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gc498cbabb6f34fdb447d5e02c5c7ab82"></a><!-- doxytag: member="cruntime::ASN1SINT" ref="gc498cbabb6f34fdb447d5e02c5c7ab82" args="" -->
typedef short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gc498cbabb6f34fdb447d5e02c5c7ab82">ASN1SINT</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g750fa6ea4197d481d6ce00cf805c1506"></a><!-- doxytag: member="cruntime::ASN1USINT" ref="g750fa6ea4197d481d6ce00cf805c1506" args="" -->
typedef unsigned short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g750fa6ea4197d481d6ce00cf805c1506">ASN1USINT</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g2d8e0f5b43e8dcc7f1e37a649bb7e750"></a><!-- doxytag: member="cruntime::ASN1TAG" ref="g2d8e0f5b43e8dcc7f1e37a649bb7e750" args="" -->
typedef <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g2d8e0f5b43e8dcc7f1e37a649bb7e750">ASN1TAG</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g96058589ddceeb38ad9166000b378618"></a><!-- doxytag: member="cruntime::ASN116BITCHAR" ref="g96058589ddceeb38ad9166000b378618" args="" -->
typedef <a class="el" href="group__cruntime.shtml#g750fa6ea4197d481d6ce00cf805c1506">ASN1USINT</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g96058589ddceeb38ad9166000b378618">ASN116BITCHAR</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g082754093d58eede858e2b740fcafeb4"></a><!-- doxytag: member="cruntime::ASN132BITCHAR" ref="g082754093d58eede858e2b740fcafeb4" args="" -->
typedef <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g082754093d58eede858e2b740fcafeb4">ASN132BITCHAR</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g15f448ea82e15e458f2ef12ce10f2703"></a><!-- doxytag: member="cruntime::ASN1ANY" ref="g15f448ea82e15e458f2ef12ce10f2703" args="" -->
typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g15f448ea82e15e458f2ef12ce10f2703">ASN1ANY</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gfaad28b94266cc355fc627e0448c644e"></a><!-- doxytag: member="cruntime::ASN1GeneralizedTime" ref="gfaad28b94266cc355fc627e0448c644e" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gfaad28b94266cc355fc627e0448c644e">ASN1GeneralizedTime</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g898b877913be77011db39f853c395ed1"></a><!-- doxytag: member="cruntime::ASN1GeneralString" ref="g898b877913be77011db39f853c395ed1" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g898b877913be77011db39f853c395ed1">ASN1GeneralString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd10b5801f84da9a1cdca72359fc749c8"></a><!-- doxytag: member="cruntime::ASN1GraphicString" ref="gd10b5801f84da9a1cdca72359fc749c8" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd10b5801f84da9a1cdca72359fc749c8">ASN1GraphicString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g9e633848443f4552a951f76ae354a4ff"></a><!-- doxytag: member="cruntime::ASN1IA5String" ref="g9e633848443f4552a951f76ae354a4ff" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g9e633848443f4552a951f76ae354a4ff">ASN1IA5String</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g6767d332082ac8f91ff412d5835a4e5e"></a><!-- doxytag: member="cruntime::ASN1ISO646String" ref="g6767d332082ac8f91ff412d5835a4e5e" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g6767d332082ac8f91ff412d5835a4e5e">ASN1ISO646String</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g5772d90f4c582116bc237432f11a2084"></a><!-- doxytag: member="cruntime::ASN1NumericString" ref="g5772d90f4c582116bc237432f11a2084" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g5772d90f4c582116bc237432f11a2084">ASN1NumericString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb3f2afa81c98faf419c1ecf2ba398490"></a><!-- doxytag: member="cruntime::ASN1ObjectDescriptor" ref="gb3f2afa81c98faf419c1ecf2ba398490" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb3f2afa81c98faf419c1ecf2ba398490">ASN1ObjectDescriptor</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g05c29dcd734e545f830dda9b4940ff88"></a><!-- doxytag: member="cruntime::ASN1PrintableString" ref="g05c29dcd734e545f830dda9b4940ff88" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g05c29dcd734e545f830dda9b4940ff88">ASN1PrintableString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ge1f8bba2681a949ecaca260bad5cb00d"></a><!-- doxytag: member="cruntime::ASN1TeletexString" ref="ge1f8bba2681a949ecaca260bad5cb00d" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#ge1f8bba2681a949ecaca260bad5cb00d">ASN1TeletexString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g4d0c8c719f6cbbbd43522876df88e033"></a><!-- doxytag: member="cruntime::ASN1T61String" ref="g4d0c8c719f6cbbbd43522876df88e033" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4d0c8c719f6cbbbd43522876df88e033">ASN1T61String</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gb3d5039c51cb5d0efca58dd265a2fe63"></a><!-- doxytag: member="cruntime::ASN1UTCTime" ref="gb3d5039c51cb5d0efca58dd265a2fe63" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb3d5039c51cb5d0efca58dd265a2fe63">ASN1UTCTime</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g00c083e8e3be98d57eb3f0c4a3bc70d5"></a><!-- doxytag: member="cruntime::ASN1UTF8String" ref="g00c083e8e3be98d57eb3f0c4a3bc70d5" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g00c083e8e3be98d57eb3f0c4a3bc70d5">ASN1UTF8String</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g8a2456fffdd5cec436e10f2c2d069ac3"></a><!-- doxytag: member="cruntime::ASN1VideotexString" ref="g8a2456fffdd5cec436e10f2c2d069ac3" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g8a2456fffdd5cec436e10f2c2d069ac3">ASN1VideotexString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gad630958c8fc6030292d9204631a23bb"></a><!-- doxytag: member="cruntime::ASN1VisibleString" ref="gad630958c8fc6030292d9204631a23bb" args="" -->
typedef const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gad630958c8fc6030292d9204631a23bb">ASN1VisibleString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g41a9c9f2e643c540aa4df8fbc0654d3c"></a><!-- doxytag: member="cruntime::ASN1BMPString" ref="g41a9c9f2e643c540aa4df8fbc0654d3c" args="" -->
typedef <a class="el" href="structAsn116BitCharString.shtml">Asn116BitCharString</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g41a9c9f2e643c540aa4df8fbc0654d3c">ASN1BMPString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g8a9be3bb6c2761e251dc62e53e7f5b78"></a><!-- doxytag: member="cruntime::ASN1UniversalString" ref="g8a9be3bb6c2761e251dc62e53e7f5b78" args="" -->
typedef <a class="el" href="structAsn132BitCharString.shtml">Asn132BitCharString</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g8a9be3bb6c2761e251dc62e53e7f5b78">ASN1UniversalString</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g81373b9aa0c63bb48aa6939024face85"></a><!-- doxytag: member="cruntime::Asn1SizeCnst" ref="g81373b9aa0c63bb48aa6939024face85" args="" -->
typedef <a class="el" href="struct__Asn1SizeCnst.shtml">_Asn1SizeCnst</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>Asn1SizeCnst</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g94a7f72e8e507a79786b349694b1818c"></a><!-- doxytag: member="cruntime::OOCHAR" ref="g94a7f72e8e507a79786b349694b1818c" args="" -->
typedef char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g94a7f72e8e507a79786b349694b1818c">OOCHAR</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g0ff9bb296c6e6667c9e03d9cc7d37a1a"></a><!-- doxytag: member="cruntime::OOUCHAR" ref="g0ff9bb296c6e6667c9e03d9cc7d37a1a" args="" -->
typedef unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g0ff9bb296c6e6667c9e03d9cc7d37a1a">OOUCHAR</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gc266ed8491cad2b098c1695ec2adbf05"></a><!-- doxytag: member="cruntime::OOINT8" ref="gc266ed8491cad2b098c1695ec2adbf05" args="" -->
typedef signed char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gc266ed8491cad2b098c1695ec2adbf05">OOINT8</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g1fa62c076f49506499ea013ca5540741"></a><!-- doxytag: member="cruntime::OOUINT8" ref="g1fa62c076f49506499ea013ca5540741" args="" -->
typedef unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g1fa62c076f49506499ea013ca5540741">OOUINT8</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g4876ca9150df98eebe47d0df43b44314"></a><!-- doxytag: member="cruntime::OOINT16" ref="g4876ca9150df98eebe47d0df43b44314" args="" -->
typedef short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4876ca9150df98eebe47d0df43b44314">OOINT16</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf1df4cbc0e2cacdd95314be23ef045b4"></a><!-- doxytag: member="cruntime::OOUINT16" ref="gf1df4cbc0e2cacdd95314be23ef045b4" args="" -->
typedef unsigned short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gf1df4cbc0e2cacdd95314be23ef045b4">OOUINT16</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gfcc7a472939cadc22f67d470a071774e"></a><!-- doxytag: member="cruntime::OOINT32" ref="gfcc7a472939cadc22f67d470a071774e" args="" -->
typedef int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gfcc7a472939cadc22f67d470a071774e">OOINT32</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g929d152869a7fc3a63ebf2495c0fa7b7"></a><!-- doxytag: member="cruntime::OOUINT32" ref="g929d152869a7fc3a63ebf2495c0fa7b7" args="" -->
typedef unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g929d152869a7fc3a63ebf2495c0fa7b7">OOUINT32</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gd31556a43467443733eebb2e2b802c30"></a><!-- doxytag: member="cruntime::OOBOOL" ref="gd31556a43467443733eebb2e2b802c30" args="" -->
typedef <a class="el" href="group__cruntime.shtml#g1fa62c076f49506499ea013ca5540741">OOUINT8</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd31556a43467443733eebb2e2b802c30">OOBOOL</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gcfb9cd337de53cfb69709b7e3e921ef0"></a><!-- doxytag: member="cruntime::OOMsgBuf" ref="gcfb9cd337de53cfb69709b7e3e921ef0" args="" -->
typedef <a class="el" href="struct__OOMsgBuf.shtml">_OOMsgBuf</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>OOMsgBuf</b></td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g96344a73875215922d907c14dfb6123c">decodeBits</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *pvalue, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> nbits)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a series of multiple bits and place the results in an unsigned integer variable.  <a href="#g96344a73875215922d907c14dfb6123c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g5c8073e904884a4374ae807772373097">decodeBitString</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *numbits_p, <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *buffer, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> bufsiz)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a value of the ASN.1 bit string type whose maximum size is is known in advance.  <a href="#g5c8073e904884a4374ae807772373097"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf36ce5c09c4c962e61e8d4e7a5d80b61"></a><!-- doxytag: member="cruntime::decodeBitString32" ref="gf36ce5c09c4c962e61e8d4e7a5d80b61" args="(OOCTXT *pctxt, ASN1BitStr32 *pvalue, ASN1UINT lower, ASN1UINT upper)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>decodeBitString32</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structASN1BitStr32.shtml">ASN1BitStr32</a> *pvalue, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> lower, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> upper)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g95aa259fd96d9d454481c1d0006e4b3f">decodeBMPString</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structAsn116BitCharString.shtml">ASN1BMPString</a> *pvalue, <a class="el" href="structAsn116BitCharSet.shtml">Asn116BitCharSet</a> *permCharSet)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a variable of the ASN.1 BMP character string.  <a href="#g95aa259fd96d9d454481c1d0006e4b3f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gfe39161ece6a81f89663aa4a64593b91">decodeByteAlign</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will position the decode bit cursor on the next byte boundary.  <a href="#gfe39161ece6a81f89663aa4a64593b91"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g53bbfd9e90f95b7773639d702beb1584">decodeConsInteger</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> *pvalue, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> lower, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode an integer constrained either by a value or value range constraint.  <a href="#g53bbfd9e90f95b7773639d702beb1584"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gbcb98e470a1b6b935afca7787618f43c">decodeConsUnsigned</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *pvalue, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> lower, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode an unsigned integer constrained either by a value or value range constraint.  <a href="#gbcb98e470a1b6b935afca7787618f43c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g157cf855b45ee8f95f6cb2903a7f65ef">decodeConsUInt8</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#ge57247f09d2f23ffc993b72ce3513309">ASN1UINT8</a> *pvalue, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> lower, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode an 8-bit unsigned integer constrained either by a value or value range constraint.  <a href="#g157cf855b45ee8f95f6cb2903a7f65ef"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g8f571ca02f25e368337b57755325fbe8">decodeConsUInt16</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g750fa6ea4197d481d6ce00cf805c1506">ASN1USINT</a> *pvalue, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> lower, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a 16-bit unsigned integer constrained either by a value or value range constraint.  <a href="#g8f571ca02f25e368337b57755325fbe8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g6b7915e5a39c410458ee6983db58e226">decodeConsWholeNumber</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *padjusted_value, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> range_value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function decodes a constrained whole number as specified in Section 10.5 of the X.691 standard.  <a href="#g6b7915e5a39c410458ee6983db58e226"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g24a77df32b4a3c79798e5edbbcfbc471">decodeConstrainedStringEx</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, const char **string, const char *charSet, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> abits, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> ubits, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> canSetBits)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function decodes a constrained string value.  <a href="#g24a77df32b4a3c79798e5edbbcfbc471"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g8701667e5acbc0cae806118f3f3886ab">decodeDynBitString</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structASN1DynBitStr.shtml">ASN1DynBitStr</a> *pBitStr)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a variable of thr ASN.1 BIT STRING type.  <a href="#g8701667e5acbc0cae806118f3f3886ab"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4f4c01acad7de1bf9950f0aa4b2003db">decodeDynOctetString</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structASN1DynOctStr.shtml">ASN1DynOctStr</a> *pOctStr)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a value of the ASN.1 octet string type whose maximum size is known in advance.  <a href="#g4f4c01acad7de1bf9950f0aa4b2003db"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gcfa2234f3a27fcc25a4ca19e343e1a08">decodeLength</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *pvalue)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a length determinant value.  <a href="#gcfa2234f3a27fcc25a4ca19e343e1a08"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4f010511dc52c533894b6081991d0bf6">moveBitCursor</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, int bitOffset)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. </td></tr>
  </table>
</dl>
 <a href="#g4f010511dc52c533894b6081991d0bf6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb3db59dd302108c23fcf342a04f69d57">decodeObjectIdentifier</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structASN1OBJID.shtml">ASN1OBJID</a> *pvalue)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function decodes a value of the ASN.1 object identifier type.  <a href="#gb3db59dd302108c23fcf342a04f69d57"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gce4d7906e2376749a60a716310b7720c">decodeOctetString</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *numocts_p, <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *buffer, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> bufsiz)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a value of the ASN.1 octet string type whose maximun size is known in advance.  <a href="#gce4d7906e2376749a60a716310b7720c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gc99217fa95605befb143c2a17782833c">decodeOpenType</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> **object_p2, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *numocts_p)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode an ASN.1 open type.  <a href="#gc99217fa95605befb143c2a17782833c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g7345e1cfabb92c8b05637dd1bc59f7a0">decodeSmallNonNegWholeNumber</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *pvalue)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a small non-negative whole number as specified in Section 10.6 of the X.691 standard.  <a href="#g7345e1cfabb92c8b05637dd1bc59f7a0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g42476aecdc40c1fa8e5b47b63e78998f">decodeSemiConsInteger</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> *pvalue, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> lower)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a semi-constrained integer.  <a href="#g42476aecdc40c1fa8e5b47b63e78998f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g77bcc518e627a4b3ddbe22c40ae8c441">decodeSemiConsUnsigned</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *pvalue, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> lower)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will decode a semi-constrained unsigned integer.  <a href="#g77bcc518e627a4b3ddbe22c40ae8c441"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7035bc72a3356a3c9b0efe35aa8f114a"></a><!-- doxytag: member="cruntime::decodeVarWidthCharString" ref="g7035bc72a3356a3c9b0efe35aa8f114a" args="(OOCTXT *pctxt, const char **pvalue)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>decodeVarWidthCharString</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, const char **pvalue)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g4b25e6b6f517194c1cdb54a8fbe7aa7f">encodeBit</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a> value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will encode a variable of the ASN.1 BOOLEAN type in a single bit.  <a href="#g4b25e6b6f517194c1cdb54a8fbe7aa7f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g47ded4f662599e78065af73529ac5e5a">encodeBits</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> value, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> nbits)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes multiple bits.  <a href="#g47ded4f662599e78065af73529ac5e5a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g45212560fe43a1a4dd1ce1102a2caf9e">encodeBitString</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> numocts, const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will encode a value of the ASN.1 bit string type.  <a href="#g45212560fe43a1a4dd1ce1102a2caf9e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g87c409dd4fc1fbdfb1d9cd7bd4dcdcae"></a><!-- doxytag: member="cruntime::encodeBitString32" ref="g87c409dd4fc1fbdfb1d9cd7bd4dcdcae" args="(OOCTXT *pctxt, ASN1BitStr32 *pvalue, ASN1UINT lower, ASN1UINT upper)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>encodeBitString32</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structASN1BitStr32.shtml">ASN1BitStr32</a> *pvalue, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> lower, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> upper)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gc9f7dcd11523dd6aa51854de62faa9b5">encodeBMPString</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structAsn116BitCharString.shtml">ASN1BMPString</a> value, <a class="el" href="structAsn116BitCharSet.shtml">Asn116BitCharSet</a> *permCharSet)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will encode a variable of the ASN.1 BMP character string.  <a href="#gc9f7dcd11523dd6aa51854de62faa9b5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g9dc77383f3d1734a24842811ce956b31">encodeByteAlign</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will position the encode bit cursor on the next byte boundry.  <a href="#g9dc77383f3d1734a24842811ce956b31"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g926b4efb8fb897f7e9b785387504c105">encodeCheckBuffer</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> nbytes)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will determine if the given number of bytes will fit in the encode buffer.  <a href="#g926b4efb8fb897f7e9b785387504c105"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g7d15fb6e118e6f5d7831cd6a88e14b01">encodeConstrainedStringEx</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, const char *string, const char *charSet, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> abits, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> ubits, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> canSetBits)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes a constrained string value.  <a href="#g7d15fb6e118e6f5d7831cd6a88e14b01"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g87c543e34141694d1fbbd41261faadcc">encodeConsInteger</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> value, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> lower, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes an integer constrained either by a value or value range constraint.  <a href="#g87c543e34141694d1fbbd41261faadcc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g5cfcf8a51f04a62b7f312b1aa994e98e">encodeConsUnsigned</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> value, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> lower, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes an unsigned integer constrained either by a value or value range constraint.  <a href="#g5cfcf8a51f04a62b7f312b1aa994e98e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g2336b23b4ebc19394e6771d37bd2543d">encodeConsWholeNumber</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> adjusted_value, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> range_value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes a constrained whole number as specified in Section 10.5 of the X.691 standard.  <a href="#g2336b23b4ebc19394e6771d37bd2543d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gd7c55a4387e3e72e353e69a7c5e28c73">encodeExpandBuffer</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> nbytes)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will expand the buffer to hold the given number of bytes.  <a href="#gd7c55a4387e3e72e353e69a7c5e28c73"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g331ac5998bb1c064216171ea0b458c24">encodeGetMsgPtr</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, int *pLength)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will return the message pointer and length of an encoded message.  <a href="#g331ac5998bb1c064216171ea0b458c24"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g78f5ad24f6ba72faa075e7cc084c86ed">encodeLength</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will encode a length determinant value.  <a href="#g78f5ad24f6ba72faa075e7cc084c86ed"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g8add3bb77e52f7fb9dd9f9d6e201b37f">encodeObjectIdentifier</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structASN1OBJID.shtml">ASN1OBJID</a> *pvalue)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes a value of the ASN.1 object identifier type.  <a href="#g8add3bb77e52f7fb9dd9f9d6e201b37f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g31f81046d111ad6f2b52aaac44708ce8">encodeBitsFromOctet</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> value, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> nbits)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes bits from a given octet to the output buffer.  <a href="#g31f81046d111ad6f2b52aaac44708ce8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g0a3cd5bc0c968c4579754dc1004138f7">encodeOctets</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *pvalue, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> nbits)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This fuction will encode an array of octets.  <a href="#g0a3cd5bc0c968c4579754dc1004138f7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g0efc31c77ea2b185fb64b59f5e61f8bc">encodeOctetString</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> numocts, const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will encode a value of the ASN.1 octet string type.  <a href="#g0efc31c77ea2b185fb64b59f5e61f8bc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#geaadd45fe6caeb749f56e1c346fd665f">encodeOpenType</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> numocts, const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will encode an ASN.1 open type.  <a href="#geaadd45fe6caeb749f56e1c346fd665f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gb554080826bfa5b1aae14a32047c54e0">encodeOpenTypeExt</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, DList *pElemList)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will encode an ASN.1 open type extension.  <a href="#gb554080826bfa5b1aae14a32047c54e0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="geb9e7da6279a83e45b3cf7d35118b104"></a><!-- doxytag: member="cruntime::encodeOpenTypeExtBits" ref="geb9e7da6279a83e45b3cf7d35118b104" args="(OOCTXT *pctxt, DList *pElemList)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>encodeOpenTypeExtBits</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, DList *pElemList)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gea2c4247ab91cfb132256e5158f85b9b">encodeSmallNonNegWholeNumber</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function will endcode a small, non-negative whole number as specified in Section 10.6 of teh X.691 standard.  <a href="#gea2c4247ab91cfb132256e5158f85b9b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#g1ac9005afae5f9fd6c2c8ff5bd1ab5b8">encodeSemiConsInteger</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> value, <a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> lower)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes a semi-constrained integer.  <a href="#g1ac9005afae5f9fd6c2c8ff5bd1ab5b8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cruntime.shtml#gcb312638694fcba29f27d5fde55546e6">encodeSemiConsUnsigned</a> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> value, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> lower)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function encodes an semi-constrained unsigned integer.  <a href="#gcb312638694fcba29f27d5fde55546e6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="geda1bd43a17441c1bb6eb7eab5a28837"></a><!-- doxytag: member="cruntime::encodeUnconsUnsigned" ref="geda1bd43a17441c1bb6eb7eab5a28837" args="(OOCTXT *pctxt, ASN1UINT value)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>encodeUnconsUnsigned</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gfef2e767ccdd988217daf01c5b7c3178"></a><!-- doxytag: member="cruntime::encodeVarWidthCharString" ref="gfef2e767ccdd988217daf01c5b7c3178" args="(OOCTXT *pctxt, const char *value)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>encodeVarWidthCharString</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, const char *value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g16b4d21a2b022bef49827ce4f877adb9"></a><!-- doxytag: member="cruntime::addSizeConstraint" ref="g16b4d21a2b022bef49827ce4f877adb9" args="(OOCTXT *pctxt, Asn1SizeCnst *pSize)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>addSizeConstraint</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="struct__Asn1SizeCnst.shtml">Asn1SizeCnst</a> *pSize)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gc69868272e2636ba53879e7f5d448c8e"></a><!-- doxytag: member="cruntime::alignCharStr" ref="gc69868272e2636ba53879e7f5d448c8e" args="(OOCTXT *pctxt, ASN1UINT len, ASN1UINT nbits, Asn1SizeCnst *pSize)" -->
EXTERN <a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>alignCharStr</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> len, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> nbits, <a class="el" href="struct__Asn1SizeCnst.shtml">Asn1SizeCnst</a> *pSize)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf3c47b3fac0da75f3883e87db921fb07"></a><!-- doxytag: member="cruntime::bitAndOctetStringAlignmentTest" ref="gf3c47b3fac0da75f3883e87db921fb07" args="(Asn1SizeCnst *pSizeList, ASN1UINT itemCount, ASN1BOOL bitStrFlag, ASN1BOOL *pAlignFlag)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>bitAndOctetStringAlignmentTest</b> (<a class="el" href="struct__Asn1SizeCnst.shtml">Asn1SizeCnst</a> *pSizeList, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> itemCount, <a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a> bitStrFlag, <a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a> *pAlignFlag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g7f1748398d016b25d5a491ed67bc927e"></a><!-- doxytag: member="cruntime::getPERMsgLen" ref="g7f1748398d016b25d5a491ed67bc927e" args="(OOCTXT *pctxt)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>getPERMsgLen</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g877223a55e0c918b3b9389abb30c2284"></a><!-- doxytag: member="cruntime::getSizeConstraint" ref="g877223a55e0c918b3b9389abb30c2284" args="(OOCTXT *pctxt, ASN1BOOL extbit)" -->
EXTERN <a class="el" href="struct__Asn1SizeCnst.shtml">Asn1SizeCnst</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>getSizeConstraint</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a> extbit)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gf1cc2ca5e4356beee2baa1f5ca167a8f"></a><!-- doxytag: member="cruntime::checkSizeConstraint" ref="gf1cc2ca5e4356beee2baa1f5ca167a8f" args="(OOCTXT *pctxt, int size)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>checkSizeConstraint</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, int size)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g322fa181cc15adb488350b5a0096dd07"></a><!-- doxytag: member="cruntime::getUIntBitCount" ref="g322fa181cc15adb488350b5a0096dd07" args="(ASN1UINT value)" -->
EXTERN <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>getUIntBitCount</b> (<a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gc1fa7c76014fec047d3cd1f75c9d1107"></a><!-- doxytag: member="cruntime::checkSize" ref="gc1fa7c76014fec047d3cd1f75c9d1107" args="(Asn1SizeCnst *pSizeList, ASN1UINT value, ASN1BOOL *pExtendable)" -->
EXTERN <a class="el" href="struct__Asn1SizeCnst.shtml">Asn1SizeCnst</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>checkSize</b> (<a class="el" href="struct__Asn1SizeCnst.shtml">Asn1SizeCnst</a> *pSizeList, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> value, <a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a> *pExtendable)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g2e681d3f3503597bf6c58d7390f106f7"></a><!-- doxytag: member="cruntime::init16BitCharSet" ref="g2e681d3f3503597bf6c58d7390f106f7" args="(Asn116BitCharSet *pCharSet, ASN116BITCHAR first, ASN116BITCHAR last, ASN1UINT abits, ASN1UINT ubits)" -->
EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><b>init16BitCharSet</b> (<a class="el" href="structAsn116BitCharSet.shtml">Asn116BitCharSet</a> *pCharSet, <a class="el" href="group__cruntime.shtml#g96058589ddceeb38ad9166000b378618">ASN116BITCHAR</a> first, <a class="el" href="group__cruntime.shtml#g96058589ddceeb38ad9166000b378618">ASN116BITCHAR</a> last, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> abits, <a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> ubits)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g4536ede7c1d5c2db5ef1702aa165403a"></a><!-- doxytag: member="cruntime::isExtendableSize" ref="g4536ede7c1d5c2db5ef1702aa165403a" args="(Asn1SizeCnst *pSizeList)" -->
EXTERN <a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>isExtendableSize</b> (<a class="el" href="struct__Asn1SizeCnst.shtml">Asn1SizeCnst</a> *pSizeList)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="gc89768bcfa8e386daf2688027e36942a"></a><!-- doxytag: member="cruntime::set16BitCharSet" ref="gc89768bcfa8e386daf2688027e36942a" args="(OOCTXT *pctxt, Asn116BitCharSet *pCharSet, Asn116BitCharSet *pAlphabet)" -->
EXTERN void&nbsp;</td><td class="memItemRight" valign="bottom"><b>set16BitCharSet</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structAsn116BitCharSet.shtml">Asn116BitCharSet</a> *pCharSet, <a class="el" href="structAsn116BitCharSet.shtml">Asn116BitCharSet</a> *pAlphabet)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="g0c64cb72e3f3da07d174cdf2c83faf34"></a><!-- doxytag: member="cruntime::lookupEnum" ref="g0c64cb72e3f3da07d174cdf2c83faf34" args="(const char *strValue, size_t strValueSize, const OOEnumItem enumTable[], OOUINT16 enumTableSize)" -->
EXTERN <a class="el" href="group__cruntime.shtml#gfcc7a472939cadc22f67d470a071774e">OOINT32</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>lookupEnum</b> (const char *strValue, size_t strValueSize, const <a class="el" href="structOOEnumItem.shtml">OOEnumItem</a> enumTable[], <a class="el" href="group__cruntime.shtml#gf1df4cbc0e2cacdd95314be23ef045b4">OOUINT16</a> enumTableSize)</td></tr>

</table>
<hr><h2>Define Documentation</h2>
<a class="anchor" name="g2ab530f52d72ab4a74e4675a4cc6a2d1"></a><!-- doxytag: member="ooasn1.h::VIS_CANSET" ref="g2ab530f52d72ab4a74e4675a4cc6a2d1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VIS_CANSET          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="stringliteral">" !\"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]"</span>\
<span class="stringliteral">"^_`abcdefghijklmnopqrstuvwxyz{|}~"</span>
</pre></div>
<p>
Definition at line <a class="el" href="ooasn1_8h-source.shtml#l00156">156</a> of file <a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>.
</div>
</div><p>
<a class="anchor" name="g50836facbd6ff45b0faad7cb379a4c8d"></a><!-- doxytag: member="ooasn1.h::T61_CANSET" ref="g50836facbd6ff45b0faad7cb379a4c8d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define T61_CANSET          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="stringliteral">" !\"%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]"</span>\
<span class="stringliteral">"_abcdefghijklmnopqrstuvwxyz"</span>
</pre></div>
<p>
Definition at line <a class="el" href="ooasn1_8h-source.shtml#l00162">162</a> of file <a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>.
</div>
</div><p>
<a class="anchor" name="g85a80997925873c9df0cf377e8f4493b"></a><!-- doxytag: member="ooasn1.h::IA5_CANSET" ref="g85a80997925873c9df0cf377e8f4493b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IA5_CANSET          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="stringliteral">"\000\001\002\003\004\005\006\007\010\011\012\013\014\015\016\017"</span>\
<span class="stringliteral">"\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037"</span>\
<span class="stringliteral">" !\"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]"</span>\
<span class="stringliteral">"^_`abcdefghijklmnopqrstuvwxyz{|}~"</span>
</pre></div>
<p>
Definition at line <a class="el" href="ooasn1_8h-source.shtml#l00168">168</a> of file <a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>.
</div>
</div><p>
<a class="anchor" name="g56fffe4bc0bf8e9f7ef29c8d6bc4d2e4"></a><!-- doxytag: member="ooasn1.h::GEN_CANSET" ref="g56fffe4bc0bf8e9f7ef29c8d6bc4d2e4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GEN_CANSET          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="stringliteral">"\000\001\002\003\004\005\006\007\010\011\012\013\014\015\016\017"</span>\
<span class="stringliteral">"\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037"</span>\
<span class="stringliteral">" !\"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"</span>\
<span class="stringliteral">"`abcdefghijklmnopqrstuvwxyz{|}~\177\200\201\202\203\204\205\206\207"</span>\
<span class="stringliteral">"\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237"</span>\
<span class="stringliteral">"\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257"</span>\
<span class="stringliteral">"\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277"</span>\
<span class="stringliteral">"\300\301\302\303\304\305\306\307\310\311\312\313\314\315\316\317"</span>\
<span class="stringliteral">"\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337"</span>\
<span class="stringliteral">"\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357"</span>\
<span class="stringliteral">"\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377"</span>
</pre></div>
<p>
Definition at line <a class="el" href="ooasn1_8h-source.shtml#l00179">179</a> of file <a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>.
</div>
</div><p>
<a class="anchor" name="g4c82745e7790296963079463cc907d0e"></a><!-- doxytag: member="ooasn1.h::INCRBITIDX" ref="g4c82745e7790296963079463cc907d0e" args="(pctxt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define INCRBITIDX          </td>
          <td>(</td>
          <td class="paramtype">pctxt&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<b>Value:</b><div class="fragment"><pre class="fragment">((--(<a class="code" href="structOOH323CallData.shtml#b849033216095dec847b947b5a1d1177">pctxt</a>)-&gt;buffer.bitOffset &lt; 0) ? \
((++(<a class="code" href="structOOH323CallData.shtml#b849033216095dec847b947b5a1d1177">pctxt</a>)-&gt;buffer.byteIndex &gt;= (<a class="code" href="structOOH323CallData.shtml#b849033216095dec847b947b5a1d1177">pctxt</a>)-&gt;buffer.size) ? <a class="code" href="group__cruntime.shtml#g604d679e937ad0c66410929572b6c87a">ASN_E_ENDOFBUF</a> : \
((<a class="code" href="structOOH323CallData.shtml#b849033216095dec847b947b5a1d1177">pctxt</a>)-&gt;buffer.bitOffset = 7, <a class="code" href="group__cruntime.shtml#g8f4bd7613f84c734a1e31386949e7190">ASN_OK</a>)) : <a class="code" href="group__cruntime.shtml#g8f4bd7613f84c734a1e31386949e7190">ASN_OK</a>)
</pre></div>rtmem
<p>

<p>
Definition at line <a class="el" href="ooasn1_8h-source.shtml#l01019">1019</a> of file <a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>.
</div>
</div><p>
<a class="anchor" name="g50feeff3e9e4f9cc787a9e12718bdd52"></a><!-- doxytag: member="ooasn1.h::DECODEBIT" ref="g50feeff3e9e4f9cc787a9e12718bdd52" args="(pctxt, pvalue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DECODEBIT          </td>
          <td>(</td>
          <td class="paramtype">pctxt,         <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pvalue&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<b>Value:</b><div class="fragment"><pre class="fragment">((<a class="code" href="group__cruntime.shtml#g4c82745e7790296963079463cc907d0e">INCRBITIDX</a> (<a class="code" href="structOOH323CallData.shtml#b849033216095dec847b947b5a1d1177">pctxt</a>) != <a class="code" href="group__cruntime.shtml#g8f4bd7613f84c734a1e31386949e7190">ASN_OK</a>) ? ((*(pvalue) = 0), <a class="code" href="group__cruntime.shtml#g604d679e937ad0c66410929572b6c87a">ASN_E_ENDOFBUF</a>) : \
((*(pvalue) = (((<a class="code" href="structOOH323CallData.shtml#b849033216095dec847b947b5a1d1177">pctxt</a>)-&gt;buffer.data[(<a class="code" href="structOOH323CallData.shtml#b849033216095dec847b947b5a1d1177">pctxt</a>)-&gt;buffer.byteIndex]) &amp; \
(1 &lt;&lt; (<a class="code" href="structOOH323CallData.shtml#b849033216095dec847b947b5a1d1177">pctxt</a>)-&gt;buffer.bitOffset)) != 0), <a class="code" href="group__cruntime.shtml#g8f4bd7613f84c734a1e31386949e7190">ASN_OK</a>))
</pre></div>
<p>
Definition at line <a class="el" href="ooasn1_8h-source.shtml#l01024">1024</a> of file <a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>.
</div>
</div><p>
<a class="anchor" name="g46e661de8f34aa466f301c259e917e12"></a><!-- doxytag: member="ooasn1.h::decodeUnconsInteger" ref="g46e661de8f34aa466f301c259e917e12" args="(pctxt, pvalue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define decodeUnconsInteger          </td>
          <td>(</td>
          <td class="paramtype">pctxt,         <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pvalue&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%">&nbsp;&nbsp;&nbsp;decodeSemiConsInteger(pctxt, pvalue, ASN1INT_MIN)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode an unconstrained integer.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to integer variable to receive decoded value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

<p>
Definition at line <a class="el" href="ooasn1_8h-source.shtml#l01412">1412</a> of file <a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>.
</div>
</div><p>
<a class="anchor" name="g14e5d02a55fb5aafa710db7696c12d04"></a><!-- doxytag: member="ooasn1.h::decodeUnconsUnsigned" ref="g14e5d02a55fb5aafa710db7696c12d04" args="(pctxt, pvalue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define decodeUnconsUnsigned          </td>
          <td>(</td>
          <td class="paramtype">pctxt,         <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pvalue&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%">&nbsp;&nbsp;&nbsp;decodeSemiConsUnsigned(pctxt, pvalue, 0U)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode an unconstrained unsigned integer.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to unsigned integer variable to receive decoded value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

<p>
Definition at line <a class="el" href="ooasn1_8h-source.shtml#l01425">1425</a> of file <a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>.
</div>
</div><p>
<a class="anchor" name="gccc161bfb69d131752e0b86a6c63d0df"></a><!-- doxytag: member="ooasn1.h::encodeUnconsInteger" ref="gccc161bfb69d131752e0b86a6c63d0df" args="(pctxt, value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define encodeUnconsInteger          </td>
          <td>(</td>
          <td class="paramtype">pctxt,         <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">value&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%">&nbsp;&nbsp;&nbsp;encodeSemiConsInteger(pctxt,value,ASN1INT_MIN)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes an unconstrained integer.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Value to be encoded. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

<p>
Definition at line <a class="el" href="ooasn1_8h-source.shtml#l01802">1802</a> of file <a class="el" href="ooasn1_8h-source.shtml">ooasn1.h</a>.
</div>
</div><p>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="g96344a73875215922d907c14dfb6123c"></a><!-- doxytag: member="ooasn1.h::decodeBits" ref="g96344a73875215922d907c14dfb6123c" args="(OOCTXT *pctxt, ASN1UINT *pvalue, ASN1UINT nbits)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeBits           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>nbits</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a series of multiple bits and place the results in an unsigned integer variable.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>A pointer to an unsigned integer variable to receive the decoded result. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nbits</em>&nbsp;</td><td>The number of bits to decode. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g5c8073e904884a4374ae807772373097"></a><!-- doxytag: member="ooasn1.h::decodeBitString" ref="g5c8073e904884a4374ae807772373097" args="(OOCTXT *pctxt, ASN1UINT *numbits_p, ASN1OCTET *buffer, ASN1UINT bufsiz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeBitString           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *&nbsp;</td>
          <td class="paramname"> <em>numbits_p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *&nbsp;</td>
          <td class="paramname"> <em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>bufsiz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a value of the ASN.1 bit string type whose maximum size is is known in advance.
<p>
The ASN1C complier generates a call to this function to decode bit string productions or elements that contain a size constraint.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>numbits_p</em>&nbsp;</td><td>Pointer to an unsigned integer variable to receive decoded number of bits. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buffer</em>&nbsp;</td><td>Pointer to a fixed-size or pre-allocated array of bufsiz octets to receive a decoded bit string. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bufsiz</em>&nbsp;</td><td>Length (in octets) of the buffer to receive the decoded bit string. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g95aa259fd96d9d454481c1d0006e4b3f"></a><!-- doxytag: member="ooasn1.h::decodeBMPString" ref="g95aa259fd96d9d454481c1d0006e4b3f" args="(OOCTXT *pctxt, ASN1BMPString *pvalue, Asn116BitCharSet *permCharSet)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeBMPString           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structAsn116BitCharString.shtml">ASN1BMPString</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structAsn116BitCharSet.shtml">Asn116BitCharSet</a> *&nbsp;</td>
          <td class="paramname"> <em>permCharSet</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a variable of the ASN.1 BMP character string.
<p>
This differs from the decode routines for the character strings previously described in that the BMP string type is based on 16-bit characters. A 16-bit character string is modeled using an array of unsigned short integers.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to character string structure to receive the decoded result The structure includes a count field containing the number of characters and an array of unsigned short integers to hold the 16-bit character values. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>permCharSet</em>&nbsp;</td><td>A pointer to the constraining character set. This contains an array containing all valid characters in the set as well as the aligned and unaligned bit counts required to encode the characters. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gfe39161ece6a81f89663aa4a64593b91"></a><!-- doxytag: member="ooasn1.h::decodeByteAlign" ref="gfe39161ece6a81f89663aa4a64593b91" args="(OOCTXT *pctxt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeByteAlign           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will position the decode bit cursor on the next byte boundary.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g53bbfd9e90f95b7773639d702beb1584"></a><!-- doxytag: member="ooasn1.h::decodeConsInteger" ref="g53bbfd9e90f95b7773639d702beb1584" args="(OOCTXT *pctxt, ASN1INT *pvalue, ASN1INT lower, ASN1INT upper)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeConsInteger           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>&nbsp;</td>
          <td class="paramname"> <em>upper</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode an integer constrained either by a value or value range constraint.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to integer variable to receive decoded value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>upper</em>&nbsp;</td><td>Upper range value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gbcb98e470a1b6b935afca7787618f43c"></a><!-- doxytag: member="ooasn1.h::decodeConsUnsigned" ref="gbcb98e470a1b6b935afca7787618f43c" args="(OOCTXT *pctxt, ASN1UINT *pvalue, ASN1UINT lower, ASN1UINT upper)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeConsUnsigned           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>upper</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode an unsigned integer constrained either by a value or value range constraint.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to unsigned integer variable to receive decoded value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>upper</em>&nbsp;</td><td>Upper range value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g157cf855b45ee8f95f6cb2903a7f65ef"></a><!-- doxytag: member="ooasn1.h::decodeConsUInt8" ref="g157cf855b45ee8f95f6cb2903a7f65ef" args="(OOCTXT *pctxt, ASN1UINT8 *pvalue, ASN1UINT lower, ASN1UINT upper)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeConsUInt8           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#ge57247f09d2f23ffc993b72ce3513309">ASN1UINT8</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>upper</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode an 8-bit unsigned integer constrained either by a value or value range constraint.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to 8-bit unsigned integer variable to receive decoded value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>upper</em>&nbsp;</td><td>Upper range value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g8f571ca02f25e368337b57755325fbe8"></a><!-- doxytag: member="ooasn1.h::decodeConsUInt16" ref="g8f571ca02f25e368337b57755325fbe8" args="(OOCTXT *pctxt, ASN1USINT *pvalue, ASN1UINT lower, ASN1UINT upper)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeConsUInt16           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g750fa6ea4197d481d6ce00cf805c1506">ASN1USINT</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>upper</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a 16-bit unsigned integer constrained either by a value or value range constraint.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to 16-bit unsigned integer variable to receive decoded value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>upper</em>&nbsp;</td><td>Upper range value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g6b7915e5a39c410458ee6983db58e226"></a><!-- doxytag: member="ooasn1.h::decodeConsWholeNumber" ref="g6b7915e5a39c410458ee6983db58e226" args="(OOCTXT *pctxt, ASN1UINT *padjusted_value, ASN1UINT range_value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeConsWholeNumber           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *&nbsp;</td>
          <td class="paramname"> <em>padjusted_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>range_value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function decodes a constrained whole number as specified in Section 10.5 of the X.691 standard.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>padjusted_value</em>&nbsp;</td><td>Pointer to unsigned adjusted integer value to receive decoded result. To get the final value, this value is added to the lower boundary of the range. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>range_value</em>&nbsp;</td><td>Unsigned integer value specifying the total size of the range. This is obtained by subtracting the lower range value from the upper range value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g24a77df32b4a3c79798e5edbbcfbc471"></a><!-- doxytag: member="ooasn1.h::decodeConstrainedStringEx" ref="g24a77df32b4a3c79798e5edbbcfbc471" args="(OOCTXT *pctxt, const char **string, const char *charSet, ASN1UINT abits, ASN1UINT ubits, ASN1UINT canSetBits)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeConstrainedStringEx           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&nbsp;</td>
          <td class="paramname"> <em>string</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>charSet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>abits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>ubits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>canSetBits</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function decodes a constrained string value.
<p>
This version of the function allows all of the required permitted alphabet constraint parameters to be passed in as arguments.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>string</em>&nbsp;</td><td>Pointer to const char* to receive decoded string. Memory will be allocated for this variable using internal memory management functions. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>charSet</em>&nbsp;</td><td>String containing permitted alphabet character set. Can be null if no character set was specified. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>abits</em>&nbsp;</td><td>Number of bits in a character set character (aligned). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ubits</em>&nbsp;</td><td>Number of bits in a character set character (unaligned). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>canSetBits</em>&nbsp;</td><td>Number of bits in a character from the canonical set representing this string. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g8701667e5acbc0cae806118f3f3886ab"></a><!-- doxytag: member="ooasn1.h::decodeDynBitString" ref="g8701667e5acbc0cae806118f3f3886ab" args="(OOCTXT *pctxt, ASN1DynBitStr *pBitStr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeDynBitString           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structASN1DynBitStr.shtml">ASN1DynBitStr</a> *&nbsp;</td>
          <td class="paramname"> <em>pBitStr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a variable of thr ASN.1 BIT STRING type.
<p>
This function allocates dynamic memory t store the decoded result. The ASN1C complier generates a call to this function to decode an unconstrained bit string production or element.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pBitStr</em>&nbsp;</td><td>Pointer to a dynamic bit string structure to receive the decoded result. This structure contains a field to hold the number of decoded bits and a pointer to an octet string to hold the decoded data. Memory is allocated by the decoder using the memAlloc function. This memory is tracked within the context and released when the freeContext function is invoked. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g4f4c01acad7de1bf9950f0aa4b2003db"></a><!-- doxytag: member="ooasn1.h::decodeDynOctetString" ref="g4f4c01acad7de1bf9950f0aa4b2003db" args="(OOCTXT *pctxt, ASN1DynOctStr *pOctStr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeDynOctetString           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structASN1DynOctStr.shtml">ASN1DynOctStr</a> *&nbsp;</td>
          <td class="paramname"> <em>pOctStr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a value of the ASN.1 octet string type whose maximum size is known in advance.
<p>
The ASN1C complier generates a call to this function to decode octet string productions or elements that contain a size constraint.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pOctStr</em>&nbsp;</td><td>A pointer to a dynamic octet string to receive the decoded result. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gcfa2234f3a27fcc25a4ca19e343e1a08"></a><!-- doxytag: member="ooasn1.h::decodeLength" ref="gcfa2234f3a27fcc25a4ca19e343e1a08" args="(OOCTXT *pctxt, ASN1UINT *pvalue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeLength           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a length determinant value.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>A pointer to an unsigned integer variable to receive the decoded length value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g4f010511dc52c533894b6081991d0bf6"></a><!-- doxytag: member="ooasn1.h::moveBitCursor" ref="g4f010511dc52c533894b6081991d0bf6" args="(OOCTXT *pctxt, int bitOffset)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int moveBitCursor           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>bitOffset</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. </td></tr>
  </table>
</dl>

<p>
This provides a storage area for the function to store all working variables that must be maintained between function calls. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>bitOffset</em>&nbsp;</td><td>The bit offset inside the message buffer. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gb3db59dd302108c23fcf342a04f69d57"></a><!-- doxytag: member="ooasn1.h::decodeObjectIdentifier" ref="gb3db59dd302108c23fcf342a04f69d57" args="(OOCTXT *pctxt, ASN1OBJID *pvalue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeObjectIdentifier           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structASN1OBJID.shtml">ASN1OBJID</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function decodes a value of the ASN.1 object identifier type.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to value to receive decoded result. The <a class="el" href="structASN1OBJID.shtml">ASN1OBJID</a> structure contains an integer to hold the number of subidentifiers and an array to hold the subidentifier values. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gce4d7906e2376749a60a716310b7720c"></a><!-- doxytag: member="ooasn1.h::decodeOctetString" ref="gce4d7906e2376749a60a716310b7720c" args="(OOCTXT *pctxt, ASN1UINT *numocts_p, ASN1OCTET *buffer, ASN1UINT bufsiz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeOctetString           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *&nbsp;</td>
          <td class="paramname"> <em>numocts_p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *&nbsp;</td>
          <td class="paramname"> <em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>bufsiz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a value of the ASN.1 octet string type whose maximun size is known in advance.
<p>
The ASN1C compiler generates a call to this function to decode octet string productions or elements that contain a size constraint.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>numocts_p</em>&nbsp;</td><td>A pointer to an unsigned buffer of bufsiz octets to receive decoded data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buffer</em>&nbsp;</td><td>A pointer to a pre-allocated buffer of size octets to receive the decoded data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bufsiz</em>&nbsp;</td><td>The size of the buffer to receive the decoded result. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gc99217fa95605befb143c2a17782833c"></a><!-- doxytag: member="ooasn1.h::decodeOpenType" ref="gc99217fa95605befb143c2a17782833c" args="(OOCTXT *pctxt, const ASN1OCTET **object_p2, ASN1UINT *numocts_p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeOpenType           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> **&nbsp;</td>
          <td class="paramname"> <em>object_p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *&nbsp;</td>
          <td class="paramname"> <em>numocts_p</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode an ASN.1 open type.
<p>
This used to be the ASN.1 ANY type, but now is used in a variety of applications requiring an encoding that can be interpreted by a decoder without prior knowledge of the type of the variable.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>numocts_p</em>&nbsp;</td><td>A pointer to an unsigned buffer of bufsiz octets to receive decoded data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>object_p2</em>&nbsp;</td><td>A pointer to an open type variable to receive the decoded data. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g7345e1cfabb92c8b05637dd1bc59f7a0"></a><!-- doxytag: member="ooasn1.h::decodeSmallNonNegWholeNumber" ref="g7345e1cfabb92c8b05637dd1bc59f7a0" args="(OOCTXT *pctxt, ASN1UINT *pvalue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeSmallNonNegWholeNumber           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a small non-negative whole number as specified in Section 10.6 of the X.691 standard.
<p>
This is a number that is expected to be small, but whose size is potentially unlimited due to the presence of an extension maker.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to a context structure. This provides a storage area for the function to store all workings variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to an unsigned integer value t receive decoded results. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g42476aecdc40c1fa8e5b47b63e78998f"></a><!-- doxytag: member="ooasn1.h::decodeSemiConsInteger" ref="g42476aecdc40c1fa8e5b47b63e78998f" args="(OOCTXT *pctxt, ASN1INT *pvalue, ASN1INT lower)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeSemiConsInteger           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a semi-constrained integer.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to integer variable to receive decoded value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value, represented as signed integer. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g77bcc518e627a4b3ddbe22c40ae8c441"></a><!-- doxytag: member="ooasn1.h::decodeSemiConsUnsigned" ref="g77bcc518e627a4b3ddbe22c40ae8c441" args="(OOCTXT *pctxt, ASN1UINT *pvalue, ASN1UINT lower)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int decodeSemiConsUnsigned           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will decode a semi-constrained unsigned integer.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to unsigned integer variable to receive decoded value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value, represented as unsigned integer. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g4b25e6b6f517194c1cdb54a8fbe7aa7f"></a><!-- doxytag: member="ooasn1.h::encodeBit" ref="g4b25e6b6f517194c1cdb54a8fbe7aa7f" args="(OOCTXT *pctxt, ASN1BOOL value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeBit           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gd5942cacdd859b0c59ec779e6e4dc466">ASN1BOOL</a>&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will encode a variable of the ASN.1 BOOLEAN type in a single bit.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>The BOOLEAN value to be encoded. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="g47ded4f662599e78065af73529ac5e5a"></a><!-- doxytag: member="ooasn1.h::encodeBits" ref="g47ded4f662599e78065af73529ac5e5a" args="(OOCTXT *pctxt, ASN1UINT value, ASN1UINT nbits)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeBits           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>nbits</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes multiple bits.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Unsigned integer containing the bits to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nbits</em>&nbsp;</td><td>Number of bits in value to encode. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g45212560fe43a1a4dd1ce1102a2caf9e"></a><!-- doxytag: member="ooasn1.h::encodeBitString" ref="g45212560fe43a1a4dd1ce1102a2caf9e" args="(OOCTXT *pctxt, ASN1UINT numocts, const ASN1OCTET *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeBitString           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>numocts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *&nbsp;</td>
          <td class="paramname"> <em>data</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will encode a value of the ASN.1 bit string type.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>numocts</em>&nbsp;</td><td>The number of bits n the string to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>Pointer to the bit string data to be encoded. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gc9f7dcd11523dd6aa51854de62faa9b5"></a><!-- doxytag: member="ooasn1.h::encodeBMPString" ref="gc9f7dcd11523dd6aa51854de62faa9b5" args="(OOCTXT *pctxt, ASN1BMPString value, Asn116BitCharSet *permCharSet)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeBMPString           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structAsn116BitCharString.shtml">ASN1BMPString</a>&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structAsn116BitCharSet.shtml">Asn116BitCharSet</a> *&nbsp;</td>
          <td class="paramname"> <em>permCharSet</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will encode a variable of the ASN.1 BMP character string.
<p>
This differs from the encode routines for the character strings previously described in that the BMP string type is based on 16-bit characters. A 16-bit character string is modeled using an array of unsigned short integers.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Character string to be encoded. This structure includes a count field containing the number of characters to encode and an array of unsigned short integers to hold the 16-bit characters to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>permCharSet</em>&nbsp;</td><td>Pointer to the constraining character set. This contains an array containing all valid characters in the set as well as the aligned and unaligned bit counts required to encode the characters. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g9dc77383f3d1734a24842811ce956b31"></a><!-- doxytag: member="ooasn1.h::encodeByteAlign" ref="g9dc77383f3d1734a24842811ce956b31" args="(OOCTXT *pctxt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeByteAlign           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will position the encode bit cursor on the next byte boundry.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g926b4efb8fb897f7e9b785387504c105"></a><!-- doxytag: member="ooasn1.h::encodeCheckBuffer" ref="g926b4efb8fb897f7e9b785387504c105" args="(OOCTXT *pctxt, ASN1UINT nbytes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeCheckBuffer           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>nbytes</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will determine if the given number of bytes will fit in the encode buffer.
<p>
If not, either the buffer is expanded (if it is a dynamic buffer) or an error is signaled.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nbytes</em>&nbsp;</td><td>Number of bytes of space required to hold the variable to be encoded. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g7d15fb6e118e6f5d7831cd6a88e14b01"></a><!-- doxytag: member="ooasn1.h::encodeConstrainedStringEx" ref="g7d15fb6e118e6f5d7831cd6a88e14b01" args="(OOCTXT *pctxt, const char *string, const char *charSet, ASN1UINT abits, ASN1UINT ubits, ASN1UINT canSetBits)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeConstrainedStringEx           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>string</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>charSet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>abits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>ubits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>canSetBits</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes a constrained string value.
<p>
This version of the function allows all of the required permitted alphabet constraint parameters to be passed in as arguments.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>string</em>&nbsp;</td><td>Pointer to string to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>charSet</em>&nbsp;</td><td>String containing permitted alphabet character set. Can be null if no character set was specified. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>abits</em>&nbsp;</td><td>Number of bits in a character set character (aligned). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ubits</em>&nbsp;</td><td>Number of bits in a character set character (unaligned). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>canSetBits</em>&nbsp;</td><td>Number of bits in a character from the canonical set representing this string. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g87c543e34141694d1fbbd41261faadcc"></a><!-- doxytag: member="ooasn1.h::encodeConsInteger" ref="g87c543e34141694d1fbbd41261faadcc" args="(OOCTXT *pctxt, ASN1INT value, ASN1INT lower, ASN1INT upper)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeConsInteger           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>&nbsp;</td>
          <td class="paramname"> <em>upper</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes an integer constrained either by a value or value range constraint.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Value to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>upper</em>&nbsp;</td><td>Upper range value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g5cfcf8a51f04a62b7f312b1aa994e98e"></a><!-- doxytag: member="ooasn1.h::encodeConsUnsigned" ref="g5cfcf8a51f04a62b7f312b1aa994e98e" args="(OOCTXT *pctxt, ASN1UINT value, ASN1UINT lower, ASN1UINT upper)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeConsUnsigned           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>upper</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes an unsigned integer constrained either by a value or value range constraint.
<p>
The constrained unsigned integer option is used if:<p>
1. The lower value of the range is &gt;= 0, and 2. The upper value of the range is &gt;= MAXINT<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Value to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>upper</em>&nbsp;</td><td>Upper range value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g2336b23b4ebc19394e6771d37bd2543d"></a><!-- doxytag: member="ooasn1.h::encodeConsWholeNumber" ref="g2336b23b4ebc19394e6771d37bd2543d" args="(OOCTXT *pctxt, ASN1UINT adjusted_value, ASN1UINT range_value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeConsWholeNumber           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>adjusted_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>range_value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes a constrained whole number as specified in Section 10.5 of the X.691 standard.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>adjusted_value</em>&nbsp;</td><td>Unsigned adjusted integer value to be encoded. The adjustment is done by subtracting the lower value of the range from the value to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>range_value</em>&nbsp;</td><td>Unsigned integer value specifying the total size of the range. This is obtained by subtracting the lower range value from the upper range value. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gd7c55a4387e3e72e353e69a7c5e28c73"></a><!-- doxytag: member="ooasn1.h::encodeExpandBuffer" ref="gd7c55a4387e3e72e353e69a7c5e28c73" args="(OOCTXT *pctxt, ASN1UINT nbytes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeExpandBuffer           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>nbytes</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will expand the buffer to hold the given number of bytes.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nbytes</em>&nbsp;</td><td>The number of bytes the buffer is to be expanded by. Note that the buffer will be expanded by ASN_K_ENCBIFXIZ or nbytes (whichever is larger. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g331ac5998bb1c064216171ea0b458c24"></a><!-- doxytag: member="ooasn1.h::encodeGetMsgPtr" ref="g331ac5998bb1c064216171ea0b458c24" args="(OOCTXT *pctxt, int *pLength)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a>* encodeGetMsgPtr           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&nbsp;</td>
          <td class="paramname"> <em>pLength</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will return the message pointer and length of an encoded message.
<p>
This function is called after a complier generated encode function to get the pointer and length of the message. It is normally used when dynamic encoding is specified because the message pointer is not known until encoding is complete. If static encoding is used, the message starts at the beginning of the specified buffer adn the encodeGetMsgLen function can be used to obtain the lenght of the message.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pLength</em>&nbsp;</td><td>Pointer to variable to receive length of the encoded message. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g78f5ad24f6ba72faa075e7cc084c86ed"></a><!-- doxytag: member="ooasn1.h::encodeLength" ref="g78f5ad24f6ba72faa075e7cc084c86ed" args="(OOCTXT *pctxt, ASN1UINT value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeLength           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will encode a length determinant value.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to a context structure. This provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Length value to be encoded. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g8add3bb77e52f7fb9dd9f9d6e201b37f"></a><!-- doxytag: member="ooasn1.h::encodeObjectIdentifier" ref="g8add3bb77e52f7fb9dd9f9d6e201b37f" args="(OOCTXT *pctxt, ASN1OBJID *pvalue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeObjectIdentifier           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structASN1OBJID.shtml">ASN1OBJID</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes a value of the ASN.1 object identifier type.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>Pointer to value to be encoded. The <a class="el" href="structASN1OBJID.shtml">ASN1OBJID</a> structure contains a numids fields to hold the number of subidentifiers and an array to hold the subidentifier values. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g31f81046d111ad6f2b52aaac44708ce8"></a><!-- doxytag: member="ooasn1.h::encodeBitsFromOctet" ref="g31f81046d111ad6f2b52aaac44708ce8" args="(OOCTXT *pctxt, ASN1OCTET value, ASN1UINT nbits)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeBitsFromOctet           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a>&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>nbits</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes bits from a given octet to the output buffer.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to ASN.1 PER context structure </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Value of bits to be encoded </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nbits</em>&nbsp;</td><td>Number of bits to be encoded</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Status of operation </dd></dl>

</div>
</div><p>
<a class="anchor" name="g0a3cd5bc0c968c4579754dc1004138f7"></a><!-- doxytag: member="ooasn1.h::encodeOctets" ref="g0a3cd5bc0c968c4579754dc1004138f7" args="(OOCTXT *pctxt, const ASN1OCTET *pvalue, ASN1UINT nbits)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeOctets           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *&nbsp;</td>
          <td class="paramname"> <em>pvalue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>nbits</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This fuction will encode an array of octets.
<p>
The Octets will be encoded unaligned starting at the current bit offset within the encode buffer.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. The provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pvalue</em>&nbsp;</td><td>A pointer to an array of octets to encode </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>nbits</em>&nbsp;</td><td>The number of Octets to encode </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g0efc31c77ea2b185fb64b59f5e61f8bc"></a><!-- doxytag: member="ooasn1.h::encodeOctetString" ref="g0efc31c77ea2b185fb64b59f5e61f8bc" args="(OOCTXT *pctxt, ASN1UINT numocts, const ASN1OCTET *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeOctetString           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>numocts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *&nbsp;</td>
          <td class="paramname"> <em>data</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will encode a value of the ASN.1 octet string type.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. The provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>numocts</em>&nbsp;</td><td>Number of octets in the string to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>Pointer to octet string data to be encoded. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="geaadd45fe6caeb749f56e1c346fd665f"></a><!-- doxytag: member="ooasn1.h::encodeOpenType" ref="geaadd45fe6caeb749f56e1c346fd665f" args="(OOCTXT *pctxt, ASN1UINT numocts, const ASN1OCTET *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeOpenType           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>numocts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__cruntime.shtml#gd45df98231e0a493f3ff759d6d435e5c">ASN1OCTET</a> *&nbsp;</td>
          <td class="paramname"> <em>data</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will encode an ASN.1 open type.
<p>
This used to be the ANY type, but now is used in a variety of applications requiring an encoding that can be interpreted by a decoder without a prior knowledge of the type of the variable.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. The provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>numocts</em>&nbsp;</td><td>Number of octets in the string to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>Pointer to octet string data to be encoded. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gb554080826bfa5b1aae14a32047c54e0"></a><!-- doxytag: member="ooasn1.h::encodeOpenTypeExt" ref="gb554080826bfa5b1aae14a32047c54e0" args="(OOCTXT *pctxt, DList *pElemList)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeOpenTypeExt           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DList *&nbsp;</td>
          <td class="paramname"> <em>pElemList</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will encode an ASN.1 open type extension.
<p>
An open type extension field is the data that potentially resides after the ... marker in a version-1 message. The open type structure contains a complete encoded bit set including option element bits or choice index, length, and data. Typically, this data is populated when a version-1 system decodes a version-2 message. The extension fields are retained and can then be re-encoded if a new message is to be sent out (for example, in a store and forward system).<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. The provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pElemList</em>&nbsp;</td><td>A pointer to the open type to be encoded. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gea2c4247ab91cfb132256e5158f85b9b"></a><!-- doxytag: member="ooasn1.h::encodeSmallNonNegWholeNumber" ref="gea2c4247ab91cfb132256e5158f85b9b" args="(OOCTXT *pctxt, ASN1UINT value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeSmallNonNegWholeNumber           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function will endcode a small, non-negative whole number as specified in Section 10.6 of teh X.691 standard.
<p>
This is a number that is expected to be small, but whose size is potentially unlimited due to the presence of an extension marker.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>A pointer to a context structure. The provides a storage area for the function to store all working variables that must be maintained between function calls. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>An unsigned integer value to be encoded. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="g1ac9005afae5f9fd6c2c8ff5bd1ab5b8"></a><!-- doxytag: member="ooasn1.h::encodeSemiConsInteger" ref="g1ac9005afae5f9fd6c2c8ff5bd1ab5b8" args="(OOCTXT *pctxt, ASN1INT value, ASN1INT lower)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeSemiConsInteger           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#gc63d5c22a9cf99cb8e6fc62432dcb9a2">ASN1INT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes a semi-constrained integer.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Value to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value, represented as signed integer. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="gcb312638694fcba29f27d5fde55546e6"></a><!-- doxytag: member="ooasn1.h::encodeSemiConsUnsigned" ref="gcb312638694fcba29f27d5fde55546e6" args="(OOCTXT *pctxt, ASN1UINT value, ASN1UINT lower)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int encodeSemiConsUnsigned           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structOOCTXT.shtml">OOCTXT</a> *&nbsp;</td>
          <td class="paramname"> <em>pctxt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cruntime.shtml#g4f87fdfc7cb076157d6efd758b056c4f">ASN1UINT</a>&nbsp;</td>
          <td class="paramname"> <em>lower</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This function encodes an semi-constrained unsigned integer.
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pctxt</em>&nbsp;</td><td>Pointer to context block structure. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Value to be encoded. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lower</em>&nbsp;</td><td>Lower range value, represented as unsigned integer. </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Completion status of operation:<ul>
<li>0 (ASN_OK) = success,</li><li>negative return value is error. </li></ul>
</dd></dl>

</div>
</div><p>
<!--END DOXYGEN -->

</td></tr></table>
<HR WIDTH="80%" COLOR="#080A9A">
  <CENTER><FONT FACE="Arial" SIZE="-2">This file was last modified on
    28 May 2010.<BR> Objective Open H.323 Stack, 0.9.1 </FONT></CENTER></td>
</tr> </table></center></BODY>
</HTML>
