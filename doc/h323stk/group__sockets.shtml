<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML>
  <HEAD>
    <TITLE>Objective Open H.323 Stack: Socket Layer</TITLE>
    <LINK REL="stylesheet" HREF="stylesheet.css" TYPE="text/css">
  </HEAD>
  <BODY TOPMARGIN="0" LEFTMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0">
    <CENTER>
      <DIV ID="pageDiv">
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="0" CELLPADDING="0">
          <TR>
            <TD BORDERCOLOR="#D9E4F1"><IMG BORDER="0"
             SRC="./images/Head1.jpg" WIDTH="725" HEIGHT="90"
             ALT="Objective Systems, Inc."></TD>
            <TD WIDTH="100%" BACKGROUND="./images/Head2.jpg">&nbsp;</TD>
          </TR>
        </TABLE>
        <TABLE BORDER="0" WIDTH="760" CELLSPACING="10" CELLPADDING="10">
          <TR><TD>
<!-- Generated by Doxygen 1.6.3 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.shtml"><span>Main&nbsp;Page</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="annotated.shtml"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Socket Layer</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOOInterface.shtml">OOInterface</a></td></tr>
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga25bc089444bac79cce3ac3e54b2155c9"></a><!-- doxytag: member="sockets::OOSOCKET_INVALID" ref="ga25bc089444bac79cce3ac3e54b2155c9" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><b>OOSOCKET_INVALID</b>&nbsp;&nbsp;&nbsp;((<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>)-1)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gac8ebcbd44cfa01c0581f31cb8adc92e6"></a><!-- doxytag: member="sockets::OOIPADDR_ANY" ref="gac8ebcbd44cfa01c0581f31cb8adc92e6" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><b>OOIPADDR_ANY</b>&nbsp;&nbsp;&nbsp;((<a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a>)0)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaa40949fa5efee7eb90268fb49c8de96d"></a><!-- doxytag: member="sockets::OOIPADDR_LOCAL" ref="gaa40949fa5efee7eb90268fb49c8de96d" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><b>OOIPADDR_LOCAL</b>&nbsp;&nbsp;&nbsp;((<a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a>)0x7f000001UL)</td></tr>
<tr><td colspan="2"><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga8b36278a51b06b41b9849d58cbc30d21"></a><!-- doxytag: member="sockets::OOSOCKET" ref="ga8b36278a51b06b41b9849d58cbc30d21" args="" -->
typedef int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Socket's handle. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef unsigned long&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The IP address represented as unsigned long value.  <a href="#gaf7b8709bab3f679682ef790ccc32b77e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga7398e749fcff910c4996008a1c7f9a63"></a><!-- doxytag: member="sockets::OOInterface" ref="ga7398e749fcff910c4996008a1c7f9a63" args="" -->
typedef struct <a class="el" href="structOOInterface.shtml">OOInterface</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>OOInterface</b></td></tr>
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga70585d13c0fcd9f1c822a4d3a677e7b5">ooSocketAccept</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, <a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> *pNewSocket, <a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a> *destAddr, int *destPort)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function permits an incoming connection attempt on a socket.  <a href="#ga70585d13c0fcd9f1c822a4d3a677e7b5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga073f7657a3704774f17c2958a126b7e5">ooSocketAddrToStr</a> (<a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a> ipAddr, char *pbuf, int bufsize)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function converts an IP address to its string representation.  <a href="#ga073f7657a3704774f17c2958a126b7e5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga4e0bcaadef706ef19a1a510c1a6e6093">ooSocketBind</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, <a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a> addr, int port)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function associates a local address with a socket.  <a href="#ga4e0bcaadef706ef19a1a510c1a6e6093"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga884e2bcaddccea44d10ae4d5c7c37a6d">ooSocketClose</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function closes an existing socket.  <a href="#ga884e2bcaddccea44d10ae4d5c7c37a6d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga3c20bdad8323b79086f57897950f036e">ooSocketConnect</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, const char *host, int port)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function establishes a connection to a specified socket.  <a href="#ga3c20bdad8323b79086f57897950f036e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga1d0a065068d19a250b6d79d509cf2293">ooSocketCreate</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> *psocket)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function creates a socket.  <a href="#ga1d0a065068d19a250b6d79d509cf2293"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#gabefdd73a2c201a21cb7bfc2ebebec421">ooSocketCreateUDP</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> *psocket)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function creates a UDP datagram socket.  <a href="#gabefdd73a2c201a21cb7bfc2ebebec421"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga36b22c12194dfea3447bee4ade4d7965">ooSocketsInit</a> (void)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function initiates use of sockets by an application.  <a href="#ga36b22c12194dfea3447bee4ade4d7965"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga53fc50eb5ea17e4e16a1a3104b9d16a5">ooSocketsCleanup</a> (void)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function terminates use of sockets by an application.  <a href="#ga53fc50eb5ea17e4e16a1a3104b9d16a5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#gaa309e39a521a62f92c9f798800394e26">ooSocketListen</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, int maxConnection)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function places a socket a state where it is listening for an incoming connection.  <a href="#gaa309e39a521a62f92c9f798800394e26"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#gaeb660d826f3e220f68f0b28d0a257641">ooSocketRecvPeek</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, ASN1OCTET *pbuf, ASN1UINT bufsize)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to peek at the received data without actually removing it from the receive socket buffer.  <a href="#gaeb660d826f3e220f68f0b28d0a257641"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga008f62868f2cea5fd3328994e970dcc6">ooSocketRecv</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, ASN1OCTET *pbuf, ASN1UINT bufsize)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function receives data from a connected socket.  <a href="#ga008f62868f2cea5fd3328994e970dcc6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga00c1cf6b2e2a615ba392e1bab4124300">ooSocketRecvFrom</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, ASN1OCTET *pbuf, ASN1UINT bufsize, char *remotehost, ASN1UINT hostBufLen, int *remoteport)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function receives data from a connected/unconnected socket.  <a href="#ga00c1cf6b2e2a615ba392e1bab4124300"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga8ff89c24d93e0525a47c80a54796352b">ooSocketSend</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, const ASN1OCTET *pdata, ASN1UINT size)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function sends data on a connected socket.  <a href="#ga8ff89c24d93e0525a47c80a54796352b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga53f9b4060e8382edb5bbf173e3644a21">ooSocketSendTo</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, const ASN1OCTET *pdata, ASN1UINT size, const char *remotehost, int remoteport)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function sends data on a connected or unconnected socket.  <a href="#ga53f9b4060e8382edb5bbf173e3644a21"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#gadb284237d446041a4b40ee50eff68fd9">ooSocketSelect</a> (int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used for synchronous monitoring of multiple sockets.  <a href="#gadb284237d446041a4b40ee50eff68fd9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga42fc4b6ae48c54261f9937d3d4c4b037">ooSocketStrToAddr</a> (const char *pIPAddrStr, <a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a> *pIPAddr)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function converts the string with IP address to a double word representation.  <a href="#ga42fc4b6ae48c54261f9937d3d4c4b037"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga9458075cfd8cffcc1fa87097f4e49f31">ooSocketConvertIpToNwAddr</a> (const char *inetIp, ASN1OCTET *netIp, size_t bufsiz)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function converts an internet dotted ip address to network address.  <a href="#ga9458075cfd8cffcc1fa87097f4e49f31"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#ga61ac370fef45630273b9541409cebd10">ooGetLocalIPAddress</a> (char *pIPAddrs)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function retrives the IP address of the local host.  <a href="#ga61ac370fef45630273b9541409cebd10"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga39ec2dfc20a766398b03366270df334f"></a><!-- doxytag: member="sockets::ooSocketGetSockName" ref="ga39ec2dfc20a766398b03366270df334f" args="(OOSOCKET socket, struct sockaddr_in *name, socklen_t *size)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>ooSocketGetSockName</b> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, struct sockaddr_in *name, socklen_t *size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gac06beca75138b9650d4924255f83494f"></a><!-- doxytag: member="sockets::ooSocketHTONL" ref="gac06beca75138b9650d4924255f83494f" args="(long val)" -->
EXTERN long&nbsp;</td><td class="memItemRight" valign="bottom"><b>ooSocketHTONL</b> (long val)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga58004440881ec3671d67d2ef026a368e"></a><!-- doxytag: member="sockets::ooSocketHTONS" ref="ga58004440881ec3671d67d2ef026a368e" args="(short val)" -->
EXTERN short&nbsp;</td><td class="memItemRight" valign="bottom"><b>ooSocketHTONS</b> (short val)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sockets.shtml#gaa6e0a2cfdb9e70bcb633f287dd0e4ae2">ooSocketGetIpAndPort</a> (<a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> socket, char *ip, int len, int *port)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This function is used to retrieve the ip and port number used by the socket passed as parameter.  <a href="#gaa6e0a2cfdb9e70bcb633f287dd0e4ae2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga093093907922d660072fc0f7d359f6ef"></a><!-- doxytag: member="sockets::ooSocketGetInterfaceList" ref="ga093093907922d660072fc0f7d359f6ef" args="(OOCTXT *pctxt, OOInterface **ifList)" -->
EXTERN int&nbsp;</td><td class="memItemRight" valign="bottom"><b>ooSocketGetInterfaceList</b> (<a class="el" href="structOOCTXT.shtml">OOCTXT</a> *pctxt, <a class="el" href="structOOInterface.shtml">OOInterface</a> **ifList)</td></tr>
</table>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="gaf7b8709bab3f679682ef790ccc32b77e"></a><!-- doxytag: member="ooSocket.h::OOIPADDR" ref="gaf7b8709bab3f679682ef790ccc32b77e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned long <a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>The IP address represented as unsigned long value. </p>
<p>The most significant 8 bits in this unsigned long value represent the first number of the IP address. The least significant 8 bits represent the last number of the IP address. </p>

<p>Definition at line <a class="el" href="ooSocket_8h_source.shtml#l00082">82</a> of file <a class="el" href="ooSocket_8h_source.shtml">ooSocket.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga70585d13c0fcd9f1c822a4d3a677e7b5"></a><!-- doxytag: member="ooSocket.h::ooSocketAccept" ref="ga70585d13c0fcd9f1c822a4d3a677e7b5" args="(OOSOCKET socket, OOSOCKET *pNewSocket, OOIPADDR *destAddr, int *destPort)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketAccept </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> *&nbsp;</td>
          <td class="paramname"> <em>pNewSocket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a> *&nbsp;</td>
          <td class="paramname"> <em>destAddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&nbsp;</td>
          <td class="paramname"> <em>destPort</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function permits an incoming connection attempt on a socket. </p>
<p>It extracts the first connection on the queue of pending connections on socket. It then creates a new socket and returns a handle to the new socket. The newly created socket is the socket that will handle the actual connection and has the same properties as original socket. See description of 'accept' socket function for further details.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to rtSocketCreate function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pNewSocket</em>&nbsp;</td><td>The pointer to variable to receive the new socket's handle. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>destAddr</em>&nbsp;</td><td>Optional pointer to a buffer that receives the IP address of the connecting entity. It may be NULL. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>destPort</em>&nbsp;</td><td>Optional pointer to a buffer that receives the port of the connecting entity. It may be NULL. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga073f7657a3704774f17c2958a126b7e5"></a><!-- doxytag: member="ooSocket.h::ooSocketAddrToStr" ref="ga073f7657a3704774f17c2958a126b7e5" args="(OOIPADDR ipAddr, char *pbuf, int bufsize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketAddrToStr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a>&nbsp;</td>
          <td class="paramname"> <em>ipAddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>pbuf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>bufsize</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function converts an IP address to its string representation. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>ipAddr</em>&nbsp;</td><td>The IP address to be converted. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pbuf</em>&nbsp;</td><td>Pointer to the buffer to receive a string with the IP address. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bufsize</em>&nbsp;</td><td>Size of the buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4e0bcaadef706ef19a1a510c1a6e6093"></a><!-- doxytag: member="ooSocket.h::ooSocketBind" ref="ga4e0bcaadef706ef19a1a510c1a6e6093" args="(OOSOCKET socket, OOIPADDR addr, int port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketBind </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a>&nbsp;</td>
          <td class="paramname"> <em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>port</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function associates a local address with a socket. </p>
<p>It is used on an unconnected socket before subsequent calls to the rtSocketConnect or rtSocketListen functions. See description of 'bind' socket function for further details.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to rtSocketCreate function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>addr</em>&nbsp;</td><td>The local IP address to assign to the socket. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>The local port number to assign to the socket. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga884e2bcaddccea44d10ae4d5c7c37a6d"></a><!-- doxytag: member="ooSocket.h::ooSocketClose" ref="ga884e2bcaddccea44d10ae4d5c7c37a6d" args="(OOSOCKET socket)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketClose </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function closes an existing socket. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to rtSocketCreate or rtSocketAccept function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3c20bdad8323b79086f57897950f036e"></a><!-- doxytag: member="ooSocket.h::ooSocketConnect" ref="ga3c20bdad8323b79086f57897950f036e" args="(OOSOCKET socket, const char *host, int port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketConnect </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>port</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function establishes a connection to a specified socket. </p>
<p>It is used to create a connection to the specified destination. When the socket call completes successfully, the socket is ready to send and receive data. See description of 'connect' socket function for further details.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to rtSocketCreate function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>host</em>&nbsp;</td><td>The null-terminated string with the IP address in the following format: "NNN.NNN.NNN.NNN", where NNN is a number in the range (0..255). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>The destination port to connect. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga1d0a065068d19a250b6d79d509cf2293"></a><!-- doxytag: member="ooSocket.h::ooSocketCreate" ref="ga1d0a065068d19a250b6d79d509cf2293" args="(OOSOCKET *psocket)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketCreate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> *&nbsp;</td>
          <td class="paramname"> <em>psocket</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function creates a socket. </p>
<p>The only streaming TCP/IP sockets are supported at the moment.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>psocket</em>&nbsp;</td><td>The pointer to the socket's handle variable to receive the handle of new socket. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="gabefdd73a2c201a21cb7bfc2ebebec421"></a><!-- doxytag: member="ooSocket.h::ooSocketCreateUDP" ref="gabefdd73a2c201a21cb7bfc2ebebec421" args="(OOSOCKET *psocket)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketCreateUDP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a> *&nbsp;</td>
          <td class="paramname"> <em>psocket</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function creates a UDP datagram socket. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>psocket</em>&nbsp;</td><td>The pointer to the socket's handle variable to receive the handle of new socket. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga36b22c12194dfea3447bee4ade4d7965"></a><!-- doxytag: member="ooSocket.h::ooSocketsInit" ref="ga36b22c12194dfea3447bee4ade4d7965" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketsInit </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function initiates use of sockets by an application. </p>
<p>This function must be called first before use sockets.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga53fc50eb5ea17e4e16a1a3104b9d16a5"></a><!-- doxytag: member="ooSocket.h::ooSocketsCleanup" ref="ga53fc50eb5ea17e4e16a1a3104b9d16a5" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketsCleanup </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function terminates use of sockets by an application. </p>
<p>This function must be called after done with sockets.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa309e39a521a62f92c9f798800394e26"></a><!-- doxytag: member="ooSocket.h::ooSocketListen" ref="gaa309e39a521a62f92c9f798800394e26" args="(OOSOCKET socket, int maxConnection)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketListen </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>maxConnection</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function places a socket a state where it is listening for an incoming connection. </p>
<p>To accept connections, a socket is first created with the rtSocketCreate function and bound to a local address with the rtSocketBind function, a maxConnection for incoming connections is specified with rtSocketListen, and then the connections are accepted with the rtSocketAccept function. See description of 'listen' socket function for further details.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to rtSocketCreate function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>maxConnection</em>&nbsp;</td><td>Maximum length of the queue of pending connections. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="gaeb660d826f3e220f68f0b28d0a257641"></a><!-- doxytag: member="ooSocket.h::ooSocketRecvPeek" ref="gaeb660d826f3e220f68f0b28d0a257641" args="(OOSOCKET socket, ASN1OCTET *pbuf, ASN1UINT bufsize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketRecvPeek </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1OCTET *&nbsp;</td>
          <td class="paramname"> <em>pbuf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1UINT&nbsp;</td>
          <td class="paramname"> <em>bufsize</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to peek at the received data without actually removing it from the receive socket buffer. </p>
<p>A receive call after this will get the same data from the socket. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to rtSocketCreate or rtSocketAccept function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pbuf</em>&nbsp;</td><td>Pointer to the buffer for the incoming data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bufsize</em>&nbsp;</td><td>Length of the buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If no error occurs, returns the number of bytes received. Otherwise, the negative value is error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga008f62868f2cea5fd3328994e970dcc6"></a><!-- doxytag: member="ooSocket.h::ooSocketRecv" ref="ga008f62868f2cea5fd3328994e970dcc6" args="(OOSOCKET socket, ASN1OCTET *pbuf, ASN1UINT bufsize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketRecv </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1OCTET *&nbsp;</td>
          <td class="paramname"> <em>pbuf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1UINT&nbsp;</td>
          <td class="paramname"> <em>bufsize</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function receives data from a connected socket. </p>
<p>It is used to read incoming data on sockets. The socket must be connected before calling this function. See description of 'recv' socket function for further details.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to rtSocketCreate or rtSocketAccept function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pbuf</em>&nbsp;</td><td>Pointer to the buffer for the incoming data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bufsize</em>&nbsp;</td><td>Length of the buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If no error occurs, returns the number of bytes received. Otherwise, the negative value is error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga00c1cf6b2e2a615ba392e1bab4124300"></a><!-- doxytag: member="ooSocket.h::ooSocketRecvFrom" ref="ga00c1cf6b2e2a615ba392e1bab4124300" args="(OOSOCKET socket, ASN1OCTET *pbuf, ASN1UINT bufsize, char *remotehost, ASN1UINT hostBufLen, int *remoteport)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketRecvFrom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1OCTET *&nbsp;</td>
          <td class="paramname"> <em>pbuf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1UINT&nbsp;</td>
          <td class="paramname"> <em>bufsize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>remotehost</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1UINT&nbsp;</td>
          <td class="paramname"> <em>hostBufLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&nbsp;</td>
          <td class="paramname"> <em>remoteport</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function receives data from a connected/unconnected socket. </p>
<p>It is used to read incoming data on sockets. It populates the remotehost and remoteport parameters with information of remote host. See description of 'recvfrom' socket function for further details.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to ooSocketCreate</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pbuf</em>&nbsp;</td><td>Pointer to the buffer for the incoming data. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bufsize</em>&nbsp;</td><td>Length of the buffer. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>remotehost</em>&nbsp;</td><td>Pointer to a buffer in which remote ip address will be returned. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>hostBufLen</em>&nbsp;</td><td>Length of the buffer passed for remote ip address. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>remoteport</em>&nbsp;</td><td>Pointer to an int in which remote port number will be returned.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If no error occurs, returns the number of bytes received. Otherwise, negative value. </dd></dl>

</div>
</div>
<a class="anchor" id="ga8ff89c24d93e0525a47c80a54796352b"></a><!-- doxytag: member="ooSocket.h::ooSocketSend" ref="ga8ff89c24d93e0525a47c80a54796352b" args="(OOSOCKET socket, const ASN1OCTET *pdata, ASN1UINT size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketSend </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ASN1OCTET *&nbsp;</td>
          <td class="paramname"> <em>pdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1UINT&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function sends data on a connected socket. </p>
<p>It is used to write outgoing data on a connected socket. See description of 'send' socket function for further details.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to rtSocketCreate or rtSocketAccept function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pdata</em>&nbsp;</td><td>Buffer containing the data to be transmitted. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>Length of the data in pdata. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga53f9b4060e8382edb5bbf173e3644a21"></a><!-- doxytag: member="ooSocket.h::ooSocketSendTo" ref="ga53f9b4060e8382edb5bbf173e3644a21" args="(OOSOCKET socket, const ASN1OCTET *pdata, ASN1UINT size, const char *remotehost, int remoteport)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketSendTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ASN1OCTET *&nbsp;</td>
          <td class="paramname"> <em>pdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1UINT&nbsp;</td>
          <td class="paramname"> <em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>remotehost</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>remoteport</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function sends data on a connected or unconnected socket. </p>
<p>See description of 'sendto' socket function for further details.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>The socket's handle created by call to rtSocketCreate or rtSocketAccept function. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pdata</em>&nbsp;</td><td>Buffer containing the data to be transmitted. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>Length of the data in pdata. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>remotehost</em>&nbsp;</td><td>Remote host ip address to which data has to be sent. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>remoteport</em>&nbsp;</td><td>Remote port ip address to which data has to be sent.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="gadb284237d446041a4b40ee50eff68fd9"></a><!-- doxytag: member="ooSocket.h::ooSocketSelect" ref="gadb284237d446041a4b40ee50eff68fd9" args="(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketSelect </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>nfds</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">fd_set *&nbsp;</td>
          <td class="paramname"> <em>readfds</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">fd_set *&nbsp;</td>
          <td class="paramname"> <em>writefds</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">fd_set *&nbsp;</td>
          <td class="paramname"> <em>exceptfds</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct timeval *&nbsp;</td>
          <td class="paramname"> <em>timeout</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used for synchronous monitoring of multiple sockets. </p>
<p>For more information refer to documnetation of "select" system call.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>nfds</em>&nbsp;</td><td>The highest numbered descriptor to be monitored plus one. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>readfds</em>&nbsp;</td><td>The descriptors listed in readfds will be watched for whether read would block on them. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>writefds</em>&nbsp;</td><td>The descriptors listed in writefds will be watched for whether write would block on them. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>exceptfds</em>&nbsp;</td><td>The descriptors listed in exceptfds will be watched for exceptions. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>timeout</em>&nbsp;</td><td>Upper bound on amout of time elapsed before select returns. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga42fc4b6ae48c54261f9937d3d4c4b037"></a><!-- doxytag: member="ooSocket.h::ooSocketStrToAddr" ref="ga42fc4b6ae48c54261f9937d3d4c4b037" args="(const char *pIPAddrStr, OOIPADDR *pIPAddr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketStrToAddr </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>pIPAddrStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#gaf7b8709bab3f679682ef790ccc32b77e">OOIPADDR</a> *&nbsp;</td>
          <td class="paramname"> <em>pIPAddr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function converts the string with IP address to a double word representation. </p>
<p>The converted address may be used with the rtSocketBind function.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pIPAddrStr</em>&nbsp;</td><td>The null-terminated string with the IP address in the following format: "NNN.NNN.NNN.NNN", where NNN is a number in the range (0..255). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>pIPAddr</em>&nbsp;</td><td>Pointer to the converted IP address. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9458075cfd8cffcc1fa87097f4e49f31"></a><!-- doxytag: member="ooSocket.h::ooSocketConvertIpToNwAddr" ref="ga9458075cfd8cffcc1fa87097f4e49f31" args="(const char *inetIp, ASN1OCTET *netIp, size_t bufsiz)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketConvertIpToNwAddr </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>inetIp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ASN1OCTET *&nbsp;</td>
          <td class="paramname"> <em>netIp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname"> <em>bufsiz</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function converts an internet dotted ip address to network address. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>inetIp</em>&nbsp;</td><td>The null-terminated string with the IP address in the following format: "NNN.NNN.NNN.NNN", where NNN is a number in the range (0..255). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>netIp</em>&nbsp;</td><td>Buffer in which the converted address will be returned. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bufsiz</em>&nbsp;</td><td>Size of buffer to receive converted address. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga61ac370fef45630273b9541409cebd10"></a><!-- doxytag: member="ooSocket.h::ooGetLocalIPAddress" ref="ga61ac370fef45630273b9541409cebd10" args="(char *pIPAddrs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooGetLocalIPAddress </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>pIPAddrs</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function retrives the IP address of the local host. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pIPAddrs</em>&nbsp;</td><td>Pointer to a char buffer in which local IP address will be returned. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Completion status of operation: 0 (ASN_OK) = success, negative return value is error. </dd></dl>

</div>
</div>
<a class="anchor" id="gaa6e0a2cfdb9e70bcb633f287dd0e4ae2"></a><!-- doxytag: member="ooSocket.h::ooSocketGetIpAndPort" ref="gaa6e0a2cfdb9e70bcb633f287dd0e4ae2" args="(OOSOCKET socket, char *ip, int len, int *port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EXTERN int ooSocketGetIpAndPort </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__sockets.shtml#ga8b36278a51b06b41b9849d58cbc30d21">OOSOCKET</a>&nbsp;</td>
          <td class="paramname"> <em>socket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>ip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&nbsp;</td>
          <td class="paramname"> <em>port</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function is used to retrieve the ip and port number used by the socket passed as parameter. </p>
<p>It internally uses getsockname system call for this purpose. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>socket</em>&nbsp;</td><td>Socket for which ip and port has to be determined. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ip</em>&nbsp;</td><td>Buffer in which ip address will be returned. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>len</em>&nbsp;</td><td>Length of the ip address buffer. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>Pointer to integer in which port number will be returned.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>ASN_OK, on success; -ve on failed. </dd></dl>

</div>
</div>
</div>
<!--END DOXYGEN -->

</td></tr></table>
<HR WIDTH="80%" COLOR="#080A9A">
  <CENTER><FONT FACE="Arial" SIZE="-2">This file was last modified on
    10 Dec 2010.<BR> Objective Open H.323 Stack, 0.9.1 </FONT></CENTER></td>
</tr> </table></center></BODY>
</HTML>
